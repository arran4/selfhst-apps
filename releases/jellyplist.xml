<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://selfh.st/apps</id>
  <title>Jellyplist Releases</title>
  <updated>2024-12-06T07:34:37.348158-05:00</updated>
  <author>
    <name>selfh.st</name>
    <email>contact@selfh.st</email>
  </author>
  <link href="https://selfh.st/apps" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <subtitle>Self-hosted software releases generated by selfh.st</subtitle>
  <entry>
    <id>https://github.com/kamilkosek/jellyplist/releases/tag/0.1.6</id>
    <title>New release for Jellyplist: Release 0.1.6</title>
    <updated>2024-11-26T10:54:45-05:00</updated>
    <author>
      <name>kamilkosek/jellyplist</name>
    </author>
    <content>&lt;h1&gt;Whats up in Jellyplist 0.1.6?&lt;/h1&gt;
&lt;h3&gt;🆕Better Linking (in preparation for Lidarr integration)&lt;/h3&gt;
&lt;p&gt;During the link-task &lt;code&gt;(update_jellyfin_id_for_downloaded_tracks)&lt;/code&gt;, where Jellyplist tries to link a &lt;code&gt;Spotify-Track-Id&lt;/code&gt; to a &lt;code&gt;Jellyfin-Track-Id&lt;/code&gt; it performs now a search and tries to find a best match from the results also considering quality aspects of a file. 
You can also make use of &lt;code&gt;ffprobe&lt;/code&gt;, so jellyplist get´s more  detailed information about the quality profile of a file. 
To use &lt;code&gt;ffprobe&lt;/code&gt; set the environment variable &lt;code&gt;FIND_BEST_MATCH_USE_FFPROBE&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; otherwise jellyplist will use quality information provided by the Jellyfin API.
Fixes #14&lt;/p&gt;
&lt;p&gt;In the Debug logs it will look like this:
&lt;code&gt;log
find_best_match_from_jellyfin() ]   DEBUG - Quality score for track Smalltown Boy: 4410.866669999999 [/storage/media/music/Bronski Beat/The Age of Reason (2017)/CD 01/Bronski Beat - The Age of Reason - 05 - Smalltown Boy.flac]
find_best_match_from_jellyfin() ]   DEBUG - Quality score for track Smalltown Boy: 4100.6 [/storage/media/music/Bronski Beat/The Age of Consent (1984)/CD 01/Bronski Beat - The Age of Consent - 06 - Smalltown Boy.flac]
find_best_match_from_jellyfin() ]   DEBUG - Quality score for track Smalltown Boy: 3240.48 [/storage/media/music/__jellyplist/5vmRQ3zELMLUQPo2FLQ76x.mp3]&lt;/code&gt;
&lt;strong&gt;What´s the benefit?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Once a day, the task &lt;code&gt;update_jellyfin_id_for_downloaded_tracks&lt;/code&gt; will do a full update on all tracks. This way you can listen to tracks and make use of the playlists until Lidarr provides you the same track but with better audio quality. &lt;/p&gt;
&lt;h3&gt;🆕Added REFRESH_LIBRARIES_AFTER_DOWNLOAD_TASK&lt;/h3&gt;
&lt;p&gt;When setting the new environment variable &lt;code&gt;REFRESH_LIBRARIES_AFTER_DOWNLOAD_TASK&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; , jellyplist will trigger a music library update on your Jellyfin server, in case you dont have &lt;code&gt;Realtime Monitoring&lt;/code&gt; enabled on your Jellyfin library.
Fixes #10&lt;/p&gt;
&lt;h3&gt;🆕Removed cookies.txt requirement&lt;/h3&gt;
&lt;p&gt;No need to use &lt;code&gt;cookies.txt&lt;/code&gt; file to download tracks via spotDL&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!IMPORTANT]
Not using a cookies.txt file will limit the bitrate of downloaded tracks to &lt;code&gt;128kbit/s&lt;/code&gt; 📻&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;🆕Added LOG_LEVEL&lt;/h3&gt;
&lt;p&gt;Via the environment variable  &lt;code&gt;LOG_LEVEL&lt;/code&gt; you can control the log output  now. The default python log levels are available: 
- CRITICAL 
- FATAL 
- ERROR 
- WARNING 
- INFO 
- DEBUG 
- NOTSET&lt;/p&gt;
&lt;h3&gt;🆕Added the possibility for admins to release task lock´s&lt;/h3&gt;
&lt;p&gt;When a task will crash or whatsoever , the lock won´t be released and you have to wait for it to expire until you can run it manually. Now you can release it manually, in case you need it. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!IMPORTANT]
You must be logged in as an admin&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;🆕Added the possibility for admins to remove playlists completely&lt;/h3&gt;
&lt;p&gt;This way the playlist will be removed from "monitoring" and also be removed from jellyfin. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!IMPORTANT]
You must be logged in as an admin&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;🆕Allow manual track re-linking&lt;/h3&gt;
&lt;p&gt;In case something went wrong and you want to assign another Jellyfin track to a Spotify-Track-Id you can do it now manually. 
Just go to "View Playlist Details", in the table where the tracks are listed, hold the &lt;code&gt;CTRL&lt;/code&gt; Key while clicking on the Play from Jellyfin button. You will be presented with the search modal and can choose whatever track you like. 
Fixex #13&lt;/p&gt;
&lt;h3&gt;🆕Added a badge on the lower left corner indicating the current version&lt;/h3&gt;
&lt;h3&gt;⚒️Overall improvements in logging&lt;/h3&gt;
&lt;p&gt;Changed log format and also added debug logging where (I think) it´s appropriate.&lt;/p&gt;
&lt;h3&gt;🐛 Bugfixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Fixed a bug where playlists weren´t updated until the &lt;code&gt;snapshot-id&lt;/code&gt; of a playlist changed. Fixes #9&lt;/li&gt;
&lt;li&gt;Fixed a dependency error, which caused &lt;code&gt;chromaprint&lt;/code&gt; fingerprinting to error out. Fixes #12 &lt;/li&gt;
&lt;li&gt;Fixed a paging error, which caused that only the first 100 elements of a playlists were added&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/kamilkosek/jellyplist/releases/tag/0.1.6" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/kamilkosek/jellyplist/releases/tag/dev-0.1.7</id>
    <title>New release for Jellyplist: Dev Release dev-0.1.7</title>
    <updated>2024-12-05T04:47:29-05:00</updated>
    <author>
      <name>kamilkosek/jellyplist</name>
    </author>
    <content>&lt;h2&gt;What's Changed&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Merge dev into main  by @kamilkosek in https://github.com/kamilkosek/jellyplist/pull/27&lt;/li&gt;
&lt;li&gt;build docker image for amd64 and arm64 by @artyorsh in https://github.com/kamilkosek/jellyplist/pull/26&lt;/li&gt;
&lt;li&gt;Merge dev into main , part 2 by @kamilkosek in https://github.com/kamilkosek/jellyplist/pull/28&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;New Contributors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;@artyorsh made their first contribution in https://github.com/kamilkosek/jellyplist/pull/26&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/kamilkosek/jellyplist/compare/0.1.6...dev-0.1.7&lt;/p&gt;</content>
    <link href="https://github.com/kamilkosek/jellyplist/releases/tag/dev-0.1.7" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/kamilkosek/jellyplist/releases/tag/0.1.7</id>
    <title>New release for Jellyplist: Release 0.1.7</title>
    <updated>2024-12-04T19:01:54-05:00</updated>
    <author>
      <name>kamilkosek/jellyplist</name>
    </author>
    <content>&lt;h1&gt;Whats up in Jellyplist 0.1.7?&lt;/h1&gt;
&lt;h3&gt;Major overhaul&lt;/h3&gt;
&lt;p&gt;I´ve been working the past week to make this project work again, after &lt;a href="https://developer.spotify.com/blog/2024-11-27-changes-to-the-web-api"&gt;Spotify announced to deprecate&lt;/a&gt; the playlist discover API´s , which were a crucial part of this project.
I also took this opportunity at the same time to do a major overhaul, on how Jellyplist gathers data from a music provider. Music provider API implementations must now implement defined abstract classes to work with Jellyplist, think of it like &lt;em&gt;plugins&lt;/em&gt;. Jellyplist now, in theory, can gather data from any music provider - just the &lt;em&gt;plugins&lt;/em&gt; must be written. It also doesn´t matter, if it have 1,2 or 10 Music Providers to playlists. So stay tuned for more to come. 
The next ones will be Deezer and YTM&lt;/p&gt;
&lt;p&gt;After the providers will be implemented, I will at some point do the same with the media backend - so Jellyplist will be able to support other media backends like Navidrome, Plex, Emby and so on...&lt;/p&gt;
&lt;h3&gt;🆕New API Implementation for Spotify&lt;/h3&gt;
&lt;p&gt;As mentioned above, I needed a new way to get playlists. 
Now, to get them , you don´t need an API Key to authenticate, you even don´t need to be authenticated at all. If you like to have Playlists recommended or created for you, you can use authentication via a cookie. 
To do this, add a env var to you &lt;code&gt;.env&lt;/code&gt; file:
&lt;code&gt;bash
SPOTIFY_COOKIE_FILE = '/jellyplist/spotify-cookie.txt'&lt;/code&gt;
And map the cookie from your local filesystem to the container path you´ve set in the &lt;code&gt;.env&lt;/code&gt;file
&lt;code&gt;yaml
...
...
 volumes:
      - /your/local/path/open.spotify.com_cookies.txt:${SPOTIFY_COOKIE_FILE}
...
...&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;🆕Lidarr integration is here&lt;/h3&gt;
&lt;p&gt;To enable the Lidarr integration add these to your &lt;code&gt;.env&lt;/code&gt; file
```bash
LIDARR_API_KEY = aabbccddeeffgghh11223344 # self explaining
LIDARR_URL = http://&lt;your_lidarr_ip&gt;:8686 # too
LIDARR_MONITOR_ARTISTS = false # If false, only the corresponding&lt;/p&gt;
&lt;h1&gt;album will be set to monitored in lidarr, if true the whole artist&lt;/h1&gt;
&lt;h1&gt;will be set as monitored. Be careful in the beginning as you might&lt;/h1&gt;
&lt;h1&gt;hammer your lidarr instance and you indexers. Defaults to false&lt;/h1&gt;
&lt;p&gt;``` 
After you enabled Lidarr integration, make sure to go to &lt;em&gt;"Admin -&amp;gt; Lidarr"&lt;/em&gt; and set the default quality profile and music root folder.&lt;/p&gt;
&lt;p&gt;With the Lidarr integration you get a nice workflow:
1. Add Playlist
2. Playlist gets downloaded via SpotDL and is available after some time
3. At some point (every hour on x:50) the requests to Lidarr are made.
4. Lidarr gets all files.
5. Once a day Jellyplist is doing a full update on all tracks, and searches for the same track but with a better quality profile.&lt;/p&gt;
&lt;h3&gt;⚠️ New required env var&lt;/h3&gt;
&lt;p&gt;Ensure to add &lt;code&gt;MUSIC_STORAGE_BASE_PATH&lt;/code&gt; to your &lt;code&gt;.env&lt;/code&gt; file. 
```bash
MUSIC_STORAGE_BASE_PATH = '/storage/media/music' # The base path where&lt;/p&gt;
&lt;h1&gt;your music library is located.&lt;/h1&gt;
&lt;h1&gt;Must be the same value as your music library in jellyfin&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h3&gt;Other changes, improvements and fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;UI/UX: The index page now has content. From there you can directly drop a playlist link&lt;/li&gt;
&lt;li&gt;UI/UX: The Search bar now works with the new API implementation&lt;/li&gt;
&lt;li&gt;UI/UX: A new &lt;code&gt;Browse All&lt;/code&gt; (per Music Provider) Page from where you can discover playlists&lt;/li&gt;
&lt;li&gt;UI/UX: Check technical details on a track. Just doubleclick a row in the details view of a playlist.&lt;/li&gt;
&lt;li&gt;UI/UX: Allow to link a track even it´s not marked as downloaded. &lt;/li&gt;
&lt;li&gt;UI/UX: Reworked celery task management and the /admin/tasks UI&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/kamilkosek/jellyplist/releases/tag/0.1.7" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/kamilkosek/jellyplist/releases/tag/dev-0.1.8</id>
    <title>New release for Jellyplist: Dev Release dev-0.1.8</title>
    <updated>2024-12-05T19:53:55-05:00</updated>
    <author>
      <name>kamilkosek/jellyplist</name>
    </author>
    <content>&lt;h2&gt;What's Changed&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Merge dev 0.1.8 into main by @kamilkosek in https://github.com/kamilkosek/jellyplist/pull/31&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/kamilkosek/jellyplist/compare/0.1.7...dev-0.1.8&lt;/p&gt;</content>
    <link href="https://github.com/kamilkosek/jellyplist/releases/tag/dev-0.1.8" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/kamilkosek/jellyplist/releases/tag/0.1.8</id>
    <title>New release for Jellyplist: Release 0.1.8</title>
    <updated>2024-12-05T19:50:45-05:00</updated>
    <author>
      <name>kamilkosek/jellyplist</name>
    </author>
    <content>&lt;h1&gt;Whats up in Jellyplist 0.1.8?&lt;/h1&gt;
&lt;p&gt;Not much this time, just some small fixes and one enhancement.&lt;/p&gt;
&lt;h3&gt;🆕Jellyplist now checks for updates&lt;/h3&gt;
&lt;p&gt;Jellyplist now checks the GitHub releases for new version. 
If a new version is available, you will notice the small badge on the lower left will pulsate slighty, so you don´t miss any new release :smile:&lt;/p&gt;
&lt;p&gt;If you don´t like that Jellyplist is doing this, you can opt out by setting this env var in your &lt;code&gt;.env&lt;/code&gt; file
&lt;code&gt;bash
CHECK_FOR_UPDATES = false&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Other changes, improvements and fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Fix for #30 , where the output path for spotDL wasn´t created correctly&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/kamilkosek/jellyplist/releases/tag/0.1.8" rel="alternate"/>
  </entry>
</feed>
