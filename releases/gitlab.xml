<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://selfh.st/apps</id>
  <title>GitLab Releases</title>
  <updated>2024-12-06T10:30:29.642001-05:00</updated>
  <author>
    <name>selfh.st</name>
    <email>contact@selfh.st</email>
  </author>
  <link href="https://selfh.st/apps" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <subtitle>Self-hosted software releases generated by selfh.st</subtitle>
  <entry>
    <id>https://gitlab.com/gitlab-org/gitlab-foss/-/releases/v17.2.0</id>
    <title>New release for GitLab: GitLab 17.2</title>
    <updated>2024-07-18T00:00:00+00:00</updated>
    <author>
      <name>gitlab-org/gitlab-foss</name>
    </author>
    <content>&lt;p&gt;&lt;img alt="20 new features" src="https://img.shields.io/static/v1?color=108548&amp;amp;label=new+features&amp;amp;labelColor=525252&amp;amp;message=20&amp;amp;style=for-the-badge" title="New features added in this release" /&gt;
&lt;img alt="2233 total badges" src="https://img.shields.io/static/v1?color=1F75CB&amp;amp;label=total+features&amp;amp;labelColor=525252&amp;amp;message=2233&amp;amp;style=for-the-badge" title="Total features" /&gt;&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;[Improved sorting and filtering in group overview](https://docs.gitlab.com/ee/user/group/#view-a-group): &lt;code&gt;Groups &amp; Projects&lt;/code&gt;&lt;/summary&gt;

&gt; We have updated the sorting and filtering functionality of the group overview page. The search element now stretches across the whole page, allowing you to see your search strings better. We have standardized the sorting options to `Name`, `Created date`, `Updated date`, and `Stars`.
&gt; 
&gt; We welcome feedback about these changes in [issue 438322](https://gitlab.com/gitlab-org/gitlab/-/issues/438322).

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[List groups that a group was invited to using the Groups API](https://docs.gitlab.com/ee/api/groups.html#list-a-groups-shared-groups): &lt;code&gt;API&lt;/code&gt;, &lt;code&gt;Groups &amp; Projects&lt;/code&gt;&lt;/summary&gt;

&gt; We added a new endpoint to the Groups API to list the groups a group has been invited to.
&gt; This functionality complements the [endpoint to list the projects that a group has been invited to](https://docs.gitlab.com/ee/api/groups.html#list-a-groups-shared-projects), so you can now get a complete overview of all the groups and projects that your group has been added to.
&gt; The endpoint is rate-limited to 60 requests per minute per user.
&gt; 
&gt; Thank you [@imskr](https://gitlab.com/imskr) for this community contribution!

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Resolve to-do items, one discussion at a time](https://docs.gitlab.com/ee/user/todos.html): &lt;code&gt;Notifications&lt;/code&gt;&lt;/summary&gt;

&gt; Discussions on GitLab issues can get busy. GitLab helps you manage these conversations by raising a to-do item for comments that are relevant to you, and automatically resolves the item when you take an action on the issue.
&gt; 
&gt; Previously, when you took action on a thread in the issue, all to-do items were resolved, even if you were mentioned in several different threads. Now, GitLab resolves only the to-do item for the thread you interacted with.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Indicate imported items in UI](https://docs.gitlab.com/ee/user/project/import/#supported-import-sources): &lt;code&gt;Importers&lt;/code&gt;&lt;/summary&gt;

&gt; You can import projects to GitLab from [other SCM solutions](https://docs.gitlab.com/ee/user/project/import/#supported-import-sources). However, it was difficult to know
&gt; if project items were imported or created on the GitLab instance.
&gt; 
&gt; With this release, we've added visual indicators to items imported from GitHub, Gitea, Bitbucket Server, and Bitbucket Cloud where the creator is identified as a specific
&gt; user. For example, merge requests, issues, and notes.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Deleted branches are removed from Jira development panel](https://docs.gitlab.com/ee/integration/jira/development_panel.html#feature-availability): &lt;code&gt;Integrations&lt;/code&gt;&lt;/summary&gt;

&gt; Previously, when using [GitLab for Jira Cloud app](https://docs.gitlab.com/ee/integration/jira/connect-app.html), if you deleted a branch in GitLab, that branch still
&gt; appeared in Jira development panel. Selecting that branch caused a `404` error on GitLab.
&gt; 
&gt; From this release, branches deleted in GitLab are removed from the Jira development panel.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Find project settings by using the command palette](https://docs.gitlab.com/ee/user/search/command_palette.html): &lt;code&gt;Settings&lt;/code&gt;, &lt;code&gt;Global Search&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab offers many settings across projects, groups, the instance, and for yourself personally. To find the setting you're looking for, you often have to spend time clicking through many different areas of the UI.
&gt; 
&gt; With this release, you can now search for project settings from the command palette. Try it out by visiting a project, selecting **Search or go to...**, entering command mode with `&gt;`, and typing the name of a settings section, like **Protected tags**. Select a result to jump right to the setting itself.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Log streaming for Kubernetes pods and containers](https://docs.gitlab.com/ee/ci/environments/kubernetes_dashboard.html): &lt;code&gt;Environment Management&lt;/code&gt;&lt;/summary&gt;

&gt; In GitLab 16.1, we introduced the Kubernetes pod list and detail views. However, you still had to use third-party tools for an in-depth analysis of your workloads.
&gt; GitLab now ships with a log streaming view for pods and containers, so you can quickly check and troubleshoot issues across your environments without leaving your application delivery tool.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/plan/"&gt;Plan&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Separate wiki page title and path fields](https://docs.gitlab.com/ee/user/project/wiki/): &lt;code&gt;Wiki&lt;/code&gt;&lt;/summary&gt;

&gt; In GitLab 17.2, wiki page titles are separate from their paths. In previous releases, if a page title changed, the path would also change, which could cause links to the page to break. Now, if a wiki page's title changes, the path remains unchanged. Even if a wiki page path changes, an automatic redirect is set up to prevent broken links.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Improvements to the wiki sidebar](https://docs.gitlab.com/ee/user/project/wiki/): &lt;code&gt;Wiki&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab 17.2 adds several enhancements to how wikis display the sidebar. Now, a wiki displays all pages in the sidebar (up to 5000 pages), displays a table of contents (TOC), and provides a search bar to quickly find pages.
&gt; 
&gt; Previously, the sidebar lacked a TOC, making it challenging to navigate to sections of a page. The new TOC feature helps to see the page structure clearly, as well as navigate quickly to different sections, greatly improving usability.
&gt; 
&gt; The addition of a search bar makes discovering content easier. And because the sidebar now displays all pages, you can seamlessly browse an entire wiki.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Add type attribute to issues events webhook](https://docs.gitlab.com/ee/user/project/integrations/webhook_events.html#issue-events): &lt;code&gt;Team Planning&lt;/code&gt;, &lt;code&gt;Webhooks&lt;/code&gt;, &lt;code&gt;Incident Management&lt;/code&gt;, &lt;code&gt;Service Desk&lt;/code&gt;&lt;/summary&gt;

&gt; Issues, tasks, incidents, requirements, objectives, and key results
&gt; all trigger payloads under the **Issues Events** webhook category. Until now, there has been no way to quickly determine the type of object that triggered the webhook within the event payload. This release introduces an `object_attributes.type` attribute available on payloads within the **Issues events**, **Comments**, **Confidential issues events**, and **Emoji events** triggers. 

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/create/"&gt;Create&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Pure SSH transfer protocol for LFS](https://docs.gitlab.com/ee/administration/lfs/#pure-ssh-transfer-protocol): &lt;code&gt;Source Code Management&lt;/code&gt;&lt;/summary&gt;

&gt; Back in September 2021, [`git-lfs` 3.0.0](https://github.com/git-lfs/git-lfs/blob/main/CHANGELOG.md#300-24-sep-2021)
&gt; released support for using SSH as the transfer protocol instead of HTTP.
&gt; Prior to `git-lfs` 3.0.0, HTTP was the only supported transfer protocol
&gt; which meant using `git-lfs` at GitLab was not possible for some users.
&gt; With this release, we're very excited to offer the ability to
&gt; enable support for SSH over HTTP as the transfer protocol for `git-lfs`.
&gt; 
&gt; Thank you to [Kyle Edwards](https://gitlab.com/KyleFromKitware) and
&gt; [Joe Snyder](https://gitlab.com/joe-snyder) for this contribution!

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/verify/"&gt;Verify&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Sort options for pipeline schedules](https://docs.gitlab.com/ee/ci/pipelines/schedules.html): &lt;code&gt;Continuous Integration (CI)&lt;/code&gt;&lt;/summary&gt;

&gt; You can now sort the pipeline schedules list by description, ref, next run, created date, and updated date.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[GitLab Runner 17.2](https://docs.gitlab.com/runner): &lt;code&gt;GitLab Runner Core&lt;/code&gt;&lt;/summary&gt;

&gt; We're releasing GitLab Runner 17.2 today! GitLab Runner is the lightweight, highly scalable agent that runs your CI/CD jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.
&gt; 
&gt; #### What's new:
&gt; 
&gt; - [GitLab Runner fleeting plugin for AWS EC2 instances (GA)](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/29222)
&gt; - [Permit configuration of Runner `livenessProbe` and `readinessProbe`](https://gitlab.com/gitlab-org/charts/gitlab-runner/-/issues/545)
&gt; - [Ability to enable and disable the `umask 0000` command for the Kubernetes executor](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/28867)
&gt; - [Support for Red Hat OpenShift 4.16 for the GitLab Runner Operator](https://gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/-/issues/203)
&gt; 
&gt; #### Bug Fixes:
&gt; 
&gt; - [Gitlab Runner upgrade removes all cache volumes](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/30876)
&gt; 
&gt; For a list of all changes, see the GitLab Runner [CHANGELOG](https://gitlab.com/gitlab-org/gitlab-runner/blob/17-2-stable/CHANGELOG.md).

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/package/"&gt;Package&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Document modules in the Terraform module registry](https://docs.gitlab.com/ee/user/packages/terraform_module_registry/index.html#view-terraform-modules): &lt;code&gt;Package Registry&lt;/code&gt;&lt;/summary&gt;

&gt; The Terraform module registry now displays Readme files! With this highly requested feature, you can transparently document the purpose, configuration, and requirements of each module.
&gt; 
&gt; Previously, you had to search other sources for this critical information, which made it difficult to properly evaluate and use modules. Now, with the module documentation readily available, you can quickly understand a module's capabilities before you use it. This accessibility empowers you to confidently share and reuse Terraform code across your organization.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/software_supply_chain_security/"&gt;Software supply chain security&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[OAuth 2.0 device authorization grant support](https://docs.gitlab.com/ee/api/oauth2.html#device-authorization-grant-flow): &lt;code&gt;System Access&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab now supports the [OAuth 2.0 device authorization grant flow](https://datatracker.ietf.org/doc/html/rfc8628). This flow makes it possible to securely authenticate your GitLab identity from input constrained devices where browser interactions are not an option.
&gt; This makes the device authorization grant flow ideal for users attempting to use GitLab services from headless servers or other devices with no, or limited, UI.
&gt; Thank you [John Parent](https://kitware.com/) for your contribution! 

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Identify dates when multiple access tokens expire](https://docs.gitlab.com/ee/security/token_overview.html#identify-dates-when-many-tokens-expire) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;System Access&lt;/code&gt;&lt;/summary&gt;

&gt; Administrators can now run a script that identifies dates when multiple access tokens expire. You can use this script in combination with other scripts on the [token troubleshooting page](https://docs.gitlab.com/ee/security/token_overview.html#troubleshooting) to identify and extend large batches of tokens that might be approaching their expiration date, if token rotation has not yet been implemented.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[OAuth authorization screen improvements](https://docs.gitlab.com/ee/integration/oauth_provider.html): &lt;code&gt;System Access&lt;/code&gt;&lt;/summary&gt;

&gt; The OAuth authorization screen now more clearly describes the authorization you are granting. It also includes a "verified by GitLab" section for applications that are provided by GitLab. Previously, the user experience was the same, regardless of whether an application was provided by GitLab or not. This new functionality provides an extra layer of trust.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Streamlined instance administrator setup](https://docs.gitlab.com/ee/administration/) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;User Management&lt;/code&gt;&lt;/summary&gt;

&gt; The administrator setup experience for a new install of GitLab has been streamlined and made more secure. The initial administrator root email address is now randomzied, and administrators are forced to change this email address to an account that they can access. Previously, this step could have been delayed, and an administrator might forget to change the email address.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[User API added to the Snowflake Data Connector](https://docs.gitlab.com/ee/integration/snowflake.html) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;Audit Events&lt;/code&gt;, &lt;code&gt;Compliance Management&lt;/code&gt;&lt;/summary&gt;

&gt; In GitLab 17.2, we've added support for the [Users API](https://docs.gitlab.com/ee/api/users.html#list-users) to the [GitLab Data Connector](https://app.snowflake.com/marketplace/listing/GZTYZXESENG/gitlab-gitlab-data-connector),
&gt; which is available in the Snowflake Marketplace app. You can now stream user data from self-managed GitLab instances to Snowflake using the Users API.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[`rules:changes:compare_to` now supports CI/CD variables](https://docs.gitlab.com/ee/ci/yaml/#ruleschangescompare_to): &lt;code&gt;Pipeline Composition&lt;/code&gt;, &lt;code&gt;Variables&lt;/code&gt;&lt;/summary&gt;

&gt; In GitLab 15.3 we introduced the [`compare_to` keyword](https://docs.gitlab.com/ee/ci/yaml/#ruleschangescompare_to) for `rules:change`. This made it possible to define the exact ref to compare against. Beginning in GitLab 17.2, you can now use CI/CD variables with this keyword, making it easier to define and reuse `compare_to` values in multiple jobs.

&lt;/details&gt;</content>
    <link href="https://gitlab.com/gitlab-org/gitlab-foss/-/releases/v17.2.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://gitlab.com/gitlab-org/gitlab-foss/-/releases/v17.3.0</id>
    <title>New release for GitLab: GitLab 17.3</title>
    <updated>2024-08-15T00:00:00+00:00</updated>
    <author>
      <name>gitlab-org/gitlab-foss</name>
    </author>
    <content>&lt;p&gt;&lt;img alt="21 new features" src="https://img.shields.io/static/v1?color=108548&amp;amp;label=new+features&amp;amp;labelColor=525252&amp;amp;message=21&amp;amp;style=for-the-badge" title="New features added in this release" /&gt;
&lt;img alt="2254 total badges" src="https://img.shields.io/static/v1?color=1F75CB&amp;amp;label=total+features&amp;amp;labelColor=525252&amp;amp;message=2254&amp;amp;style=for-the-badge" title="Total features" /&gt;&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;[Omnibus improvements](https://docs.gitlab.com/omnibus/) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;Omnibus Package&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab 17.3 includes packages for supporting [Raspberry Pi OS 12](https://www.raspberrypi.com/news/bookworm-the-new-version-of-raspberry-pi-os/).
&gt; 
&gt; Debian 10 has reached [EOL on June 30th, 2024](https://www.debian.org/releases/buster/). GitLab will remove support for Debian 10 in GitLab 17.6.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Improved sorting and filtering for projects and groups in Your Work](https://docs.gitlab.com/ee/user/project/working_with_projects.html#search-in-projects): &lt;code&gt;Groups &amp; Projects&lt;/code&gt;&lt;/summary&gt;

&gt; We have updated the sorting and filtering functionality of the project and group overview in **Your Work**.
&gt; Previously, in the **Your Work** page for projects, you could filter by name and language, and use a pre-defined set of sorting options. We have standardized the sorting options to include **Name**, **Created date**, **Updated date**, and **Stars**. We also added a navigation element to sort in ascending or descending order, and moved the language filter to the filter menu. Now you can find archived projects in the new **Inactive** tab. Additionally, we added a **Role** filter that allows you to search for projects you are the Owner of.
&gt; 
&gt; In the Your Work page for groups, we have standardized the sorting options to include **Name**, **Created date**, and **Updated date**, and added a navigation element to sort in ascending or descending order.
&gt; 
&gt; We welcome feedback about these changes in [#438322](https://gitlab.com/gitlab-org/gitlab/-/issues/438322).

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Kubernetes 1.30 support](https://docs.gitlab.com/ee/user/clusters/agent/#supported-kubernetes-versions-for-gitlab-features)&lt;/summary&gt;

&gt; This release adds full support for Kubernetes version 1.30, released in April 2024. If you deploy your apps to Kubernetes, you can now upgrade your connected clusters to the most recent version and take advantage of all its features.
&gt; 
&gt; You can read more about [our Kubernetes support policy and other supported Kubernetes versions](https://docs.gitlab.com/ee/user/clusters/agent/#supported-kubernetes-versions-for-gitlab-features).

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Toggle inheriting settings for integrations by using the API](https://docs.gitlab.com/ee/api/integrations.html): &lt;code&gt;Integrations&lt;/code&gt;&lt;/summary&gt;

&gt; Until now, you could only control whether a project inherited integration settings, or used its
&gt; own settings, using the UI.
&gt; 
&gt; In this milestone, we are introducing a new `use_inherited_settings` parameter to the REST API of all integrations. This parameter allows you to use the API to set
&gt; whether or not a project inherits integration settings. If not set, the default behavior is `false` (use the project's own settings).

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Find group settings by using the command palette](https://docs.gitlab.com/ee/user/search/command_palette.html): &lt;code&gt;Settings&lt;/code&gt;, &lt;code&gt;Global Search&lt;/code&gt;&lt;/summary&gt;

&gt; In 17.2, we added the ability to [search for project settings by using the command palette](https://about.gitlab.com/releases/2024/07/18/gitlab-17-2-released/#find-project-settings-by-using-the-command-palette). This change made it easier to quickly find the settings you need.
&gt; 
&gt; With 17.3, you can now search for group settings from the command palette as well. Try it out by visiting a group, selecting **Search or go to**, entering command mode with `&gt;`, and typing the name of a settings section, like **Merge request approvals**. Select a result to jump right to the setting itself.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Delete a pod from the GitLab UI](https://docs.gitlab.com/ee/ci/environments/kubernetes_dashboard.html#delete-a-pod): &lt;code&gt;Deployment Management&lt;/code&gt;&lt;/summary&gt;

&gt; Have you ever needed to restart or delete a failing pod in Kubernetes? Until now, you had to leave GitLab, use another tool to connect to the cluster, stop the pod, and wait for a new pod to start. GitLab now has built-in support for deleting pods, so you can smoothly troubleshoot your Kubernetes clusters.
&gt; 
&gt; You can stop a pod from a [dashboard for Kubernetes](https://docs.gitlab.com/ee/ci/environments/kubernetes_dashboard.html), which lists all the pods across your cluster or namespace.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Easily connect to a cluster from your local terminal](https://docs.gitlab.com/ee/user/clusters/agent/user_access.html): &lt;code&gt;Deployment Management&lt;/code&gt;&lt;/summary&gt;

&gt; Do you want to connect to a Kubernetes cluster from your local terminal or using one of the desktop Kubernetes GUI tools?
&gt; GitLab allows you to connect to a terminal using the [user access feature of the agent for Kubernetes](https://docs.gitlab.com/ee/user/clusters/agent/user_access.html). 
&gt; Previously, finding commands required navigating out of GitLab to browse the documentation. Now, GitLab provides the connect command from the UI. GitLab can even help you configure user access!
&gt; 
&gt; To retrieve the connection command, either go to a [Kubernetes dashboard](https://docs.gitlab.com/ee/ci/environments/kubernetes_dashboard.html), or to the [agent list](https://docs.gitlab.com/ee/user/clusters/agent/work_with_agent.html#view-your-agents).

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/plan/"&gt;Plan&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Add merge requests to tasks](https://docs.gitlab.com/ee/user/tasks.html#add-a-merge-request-and-automatically-close-tasks): &lt;code&gt;Team Planning&lt;/code&gt;&lt;/summary&gt;

&gt; Tasks are frequently used to break down issues into engineering implementation steps. Before this release, there was no way to connect a merge request to a task it implements. You can now use the same [closing pattern](https://docs.gitlab.com/ee/user/project/issues/managing_issues.html#closing-issues-automatically) that you would when referencing issues from a merge request description to connect a merge request to a task. From the task view, connected merge requests are visible from the sidebar. If your project has the [auto-close setting enabled](https://docs.gitlab.com/ee/user/project/issues/managing_issues.html#disable-automatic-issue-closing), the task will automatically close when the connected merge request is merged into your default branch.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Set parent items for OKRs and tasks](https://docs.gitlab.com/ee/user/okrs.html#set-an-objective-as-a-parent): &lt;code&gt;Portfolio Management&lt;/code&gt;&lt;/summary&gt;

&gt; You can now effortlessly update parent assignments for [OKRs](https://docs.gitlab.com/ee/user/okrs.html#set-an-objective-as-a-parent) and [tasks](https://docs.gitlab.com/ee/user/tasks.html#set-an-issue-as-a-parent), directly from the child record, eliminating the need to navigate back and forth. This is a great step towards our goal of [improving efficiency with your workflows](https://gitlab.com/groups/gitlab-org/-/epics/10501).

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Report abuse for task, objective and key result items](https://docs.gitlab.com/ee/user/report_abuse.html): &lt;code&gt;Team Planning&lt;/code&gt;&lt;/summary&gt;

&gt; You can now easily report abuse for work items directly from the **Actions** menu, just like you can with legacy issues. This new feature helps keep your workspace clean and safe by allowing you to quickly flag inappropriate content, ensuring a better collaborative environment for your team.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Resolve threads in tasks, objectives, and key results](https://docs.gitlab.com/ee/user/discussions/#resolve-a-thread): &lt;code&gt;Team Planning&lt;/code&gt;&lt;/summary&gt;

&gt; You can now resolve threads in tasks, objectives, and key results, making it easier to manage and track important conversations. Resolved threads are collapsed by default, helping you focus on active discussions and streamline your collaboration workflows.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/create/"&gt;Create&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Improved TLS support in JetBrains IDEs](https://docs.gitlab.com/ee/editor_extensions/jetbrains_ide/#add-a-custom-certificate-for-code-suggestions): &lt;code&gt;Editor Extensions&lt;/code&gt;&lt;/summary&gt;

&gt; For tighter security in sensitive environments, you can now configure custom HTTP agent options, including client certificates and certificate authorities, directly in your JetBrains IDE settings.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[More easily remove content from repositories](https://docs.gitlab.com/ee/user/project/repository/reducing_the_repo_size_using_git.html#remove-blobs): &lt;code&gt;Source Code Management&lt;/code&gt;&lt;/summary&gt;

&gt; Currently, the process for removing content from a repository is complicated, and you might have to force push the project to GitLab.
&gt; This is prone to errors and can cause you to temporarily turn off protections to enable the push.
&gt; It can be even harder to delete files that use too much space within the repository.
&gt; 
&gt; You can now use the new repository maintenance option in project settings to remove blobs based on a list of object IDs.
&gt; With this new method, you can selectively remove content without the need to force push a project back to GitLab.
&gt; 
&gt; In the event that secrets or other content has been pushed that needs to be redacted from a project, we're also introducing a new option to redact text.
&gt; Provide a string that GitLab will replace with `***REMOVED***` in files across the project.
&gt; After the text has been redacted, run housekeeping to remove old versions of the string.
&gt; 
&gt; This new UI streamlines the way you can manage your repositories when content needs to be removed.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/verify/"&gt;Verify&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Filter jobs by job name](https://docs.gitlab.com/ee/ci/jobs/): &lt;code&gt;Continuous Integration (CI)&lt;/code&gt;&lt;/summary&gt;

&gt; You can now quickly find a specific job by searching for a job name.
&gt; 
&gt; Previously, you could only filter the list of jobs by status, requiring manual scrolling to find a specific job. With this release, you can now enter a job name to filter the results. The results will only include jobs in pipelines that ran after the release of GitLab 17.3.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[GitLab Runner 17.3](https://docs.gitlab.com/runner): &lt;code&gt;GitLab Runner Core&lt;/code&gt;&lt;/summary&gt;

&gt; We're releasing GitLab Runner 17.3 today! GitLab Runner is the lightweight, highly scalable agent that runs your CI/CD jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.
&gt; 
&gt; #### Bug fixes:
&gt; 
&gt; - [Jobs appear to hang when canceled in the Kubernetes runner](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/37780)
&gt; - [Log level not updated when not specified](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/37490)
&gt; - [Job log adds extra newlines when using the runner Kubernetes executor](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/27099) 
&gt; 
&gt; For a list of all changes, see the GitLab Runner [changelog](https://gitlab.com/gitlab-org/gitlab-runner/blob/17-3-stable/CHANGELOG.md).

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Description and type added to CI/CD catalog component input details](https://docs.gitlab.com/ee/ci/components/#cicd-catalog): &lt;code&gt;Pipeline Composition&lt;/code&gt;&lt;/summary&gt;

&gt; The details page for a CI/CD component in the catalog provides useful information about the component. In this release we've added two more columns to the table that shows information about available inputs. The new **Description** and **Type** columns make it much easier to understand what an input is used for, and what type of value is expected.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/software_supply_chain_security/"&gt;Software supply chain security&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Filter the member list in a group or project by role](https://docs.gitlab.com/ee/user/project/members/index.html): &lt;code&gt;Permissions&lt;/code&gt;&lt;/summary&gt;

&gt; Users can now filter the Members page by role. Use the filter to find members with a specific role.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[View role details in the right drawer](https://docs.gitlab.com/ee/user/custom_roles.html): &lt;code&gt;Permissions&lt;/code&gt;&lt;/summary&gt;

&gt; Previously, if you wanted to view permissions for the custom roles of a user, you had to have the Owner role in the group. This requirement made it difficult to troubleshoot and understand what actions a user can perform when assigned a custom role. Now, any user can view the permissions of a user assigned a custom role in the Members page.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Disable personal access tokens using Admin UI](https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html#use-the-admin-ui) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;System Access&lt;/code&gt;&lt;/summary&gt;

&gt; Administrators can now disable or re-enable instance personal access tokens through the Admin UI. Previously, administrators had to use the application settings API or the GitLab Rails console to do this.  

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Bluesky identifier in user profile](https://docs.gitlab.com/ee/user/profile/#add-external-accounts-to-your-user-profile-page): &lt;code&gt;User Profile&lt;/code&gt;&lt;/summary&gt;

&gt; You can now add your Bluesky did:plc identifier to your GitLab profile.
&gt; 
&gt; Thank you [Dominique](https://domi.zip/) for your contribution!

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Subdomain cookies preserved on sign out](https://docs.gitlab.com/ee/user/profile/active_sessions.html): &lt;code&gt;System Access&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab's sign out process has been improved so that cookies from sibling subdomains are not deleted on sign out. Previously, these cookies were deleted, causing users to be signed out of other subdomain services on the same top-level domain as GitLab. For example, if a user has Kibana set up on `kibana.example.com` and GitLab set up on `gitlab.example.com`, signing out from GitLab will no longer sign the user out from Kibana.
&gt; 
&gt; Thank you [Guilherme C. Souza](https://gitlab.com/GCSBOSS) for your contribution! 

&lt;/details&gt;</content>
    <link href="https://gitlab.com/gitlab-org/gitlab-foss/-/releases/v17.3.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://gitlab.com/gitlab-org/gitlab-foss/-/releases/v17.4.0</id>
    <title>New release for GitLab: GitLab 17.4</title>
    <updated>2024-09-19T00:00:00+00:00</updated>
    <author>
      <name>gitlab-org/gitlab-foss</name>
    </author>
    <content>&lt;p&gt;&lt;img alt="17 new features" src="https://img.shields.io/static/v1?color=108548&amp;amp;label=new+features&amp;amp;labelColor=525252&amp;amp;message=17&amp;amp;style=for-the-badge" title="New features added in this release" /&gt;
&lt;img alt="2271 total badges" src="https://img.shields.io/static/v1?color=1F75CB&amp;amp;label=total+features&amp;amp;labelColor=525252&amp;amp;message=2271&amp;amp;style=for-the-badge" title="Total features" /&gt;&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;[Omnibus improvements](https://docs.gitlab.com/omnibus/) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;Omnibus Package&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab 17.4 includes PostgreSQL 16 by default for fresh installations of GitLab.
&gt; 
&gt; GitLab 17.7 will include OpenSSL V3. This will affect Omnibus instances with external integration setup's that do not meet the minimum requirements of TLS 1.2 or above for outbound connections, along with at least 112-bit encryption for TLS certificates. Please review our [OpenSSL upgrade documentation](https://docs.gitlab.com/omnibus/settings/ssl/openssl_3.html) for more information or if your are unsure if your instance will be affected.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[List groups invited to a group or project using the Groups or Projects API](https://docs.gitlab.com/ee/api/groups.html#list-a-groups-invited-groups): &lt;code&gt;Groups &amp; Projects&lt;/code&gt;&lt;/summary&gt;

&gt; We added new endpoints to the Groups API and Projects API to retrieve the groups that have been invited to a group or project. This functionality is available only on the Members page of a group or project. We hope that this addition will make it easier to automate membership management for your groups and projects. The endpoints are rate-limited to 60 requests per minute per user.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Improved source display for group and project members](https://docs.gitlab.com/ee/user/project/members/#membership-types): &lt;code&gt;Groups &amp; Projects&lt;/code&gt;&lt;/summary&gt;

&gt; We have simplified the display of the source column on the Members page for groups and projects. Direct members are still indicated as `Direct member`. Inherited members are now listed as `Inherited from` followed by the group name. Members that were added by inviting a group to the group or project are listed as `Invited group` followed by the group name. For members that inherited from an invited group that was added to a parent group, we now display the last step to keep the display actionable for users managing membership.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Trigger a Flux reconciliation from the cluster UI](https://docs.gitlab.com/ee/ci/environments/kubernetes_dashboard.html): &lt;code&gt;Deployment Management&lt;/code&gt;&lt;/summary&gt;

&gt; Although you can configure Flux to trigger reconciliations at specified intervals, there are situations where you might want an immediate reconciliation. In past releases, you could trigger the reconciliation from a CI/CD pipeline or from the command line. In GitLab 17.4, you can now trigger a reconciliation from a dashboard for Kubernetes with no additional configuration.
&gt; 
&gt; To trigger a reconciliation, go to a configured dashboard and select the Flux status badge.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Resend failed webhook requests with the API](https://docs.gitlab.com/ee/api/projects.html#resend-project-hook-event): &lt;code&gt;Webhooks&lt;/code&gt;&lt;/summary&gt;

&gt; Previously, GitLab provided the ability to resend webhook requests only in the UI, which was inefficient if many
&gt; requests failed.
&gt; 
&gt; So that you can handle failed webhook requests programmatically, in this release thanks to a community contribution, we
&gt; added API endpoints for resending them:
&gt; 
&gt; - [Project webhook requests](https://docs.gitlab.com/ee/api/projects.html#resend-project-hook-event)
&gt; - [Group webhook requests](https://docs.gitlab.com/ee/api/groups.html#resend-group-hook-event) (Premium and Ultimate tier only)
&gt; 
&gt; You can now:
&gt; 
&gt; 1. Get a list of [project hook](https://docs.gitlab.com/ee/api/projects.html#get-project-hook-events) or [group hook](https://docs.gitlab.com/ee/api/groups.html#get-group-hook-events) events.
&gt; 1. Filter the list to see failures.
&gt; 1. Use the `id` of any event to resend it.
&gt; 
&gt; Thanks to [Phawin](https://gitlab.com/lifez) for [this community contribution](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/151130)!

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Idempotency keys for webhook requests](https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#delivery-headers): &lt;code&gt;Webhooks&lt;/code&gt;&lt;/summary&gt;

&gt; From this release, we support an idempotency key in the headers of webhook requests. An idempotency key is a unique ID that remains consistent across webhook retries, which
&gt; allows webhook clients to detect retries. Use the `Idempotency-Key` header to ensure the idempotency of webhook effects on integrations.
&gt; 
&gt; Thanks to [Van](https://gitlab.com/van.m.anderson) for this [community contribution](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/160952)!

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[List Kubernetes resource events](https://docs.gitlab.com/ee/ci/environments/kubernetes_dashboard.html): &lt;code&gt;Deployment Management&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab provides a real-time view into your pods and streaming pod logs. Until now, however, we didn't show you resource-specific event information from the UI,
&gt; so you still had to use 3rd party tools to debug Kubernetes deployments.
&gt; This release adds events to the resource details view of [the dashboard for Kubernetes](https://docs.gitlab.com/ee/ci/environments/kubernetes_dashboard.html).
&gt; 
&gt; This is the first time we've added events to the UI. Currently, events are refreshed every time you open the resource details view. You can track the development of real-time event streaming in [issue 470042](https://gitlab.com/gitlab-org/gitlab/-/issues/470042).

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/plan/"&gt;Plan&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Resizable wiki sidebar](https://docs.gitlab.com/ee/user/project/wiki/): &lt;code&gt;Wiki&lt;/code&gt;&lt;/summary&gt;

&gt; You can now adjust the wiki sidebar to see longer page titles, improving the overall discoverability of 
&gt; content. As wiki content grows, having a resizable sidebar helps manage and browse through complex hierarchies or extensive 
&gt; lists of pages more efficiently.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[GitLab Pages without wildcard DNS is generally available](https://docs.gitlab.com/ee/administration/pages/#pages-domain-without-wildcard-dns) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;Pages&lt;/code&gt;&lt;/summary&gt;

&gt; Previously, to create a GitLab Pages project, you needed a domain formatted like `name.example.io`
&gt; or `name.pages.example.io`. This requirement meant you had to set up wildcard DNS records and
&gt; TLS certificate. In this release, setting up a GitLab Pages project without a DNS wildcard has
&gt; moved from beta to generally available.
&gt; 
&gt; Removing the requirement for wildcard certificates eases administrative overhead associated with
&gt; GitLab Pages. Some customers can't use GitLab Pages because of organizational restrictions on
&gt; wildcard DNS records or certificates.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/create/"&gt;Create&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[CI/CD component for code intelligence](https://docs.gitlab.com/ee/user/project/code_intelligence.html#with-the-cicd-component): &lt;code&gt;Code Review Workflow&lt;/code&gt;&lt;/summary&gt;

&gt; Code intelligence in GitLab provides code navigation features when browsing a repository. Getting started with code navigation is often complicated, as you must configure a CI/CD job. This job can require custom scripting to provide the correct output and artifacts.
&gt; 
&gt; GitLab now supports an official [Code intelligence CI/CD component](https://gitlab.com/explore/catalog/components/code-intelligence) for easier setup. Add this component to your project by following the instructions for [using a component](https://docs.gitlab.com/ee/ci/components/index.html#use-a-component). This greatly simplifies adopting code intelligence in GitLab.
&gt; 
&gt; Currently, the component supports these languages:
&gt; 
&gt;   - Go version 1.21 or later.
&gt;   - TypeScript or JavaScript.
&gt; 
&gt; We'll continue to evaluate [available SCIP indexers](https://github.com/sourcegraph/scip?tab=readme-ov-file#tools-using-scip) as we look to broaden language support for the new component. If you're interested in adding support for a language, please open a merge request in the [code intelligence component](https://gitlab.com/components/code-intelligence) project.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Linked files in merge request show first](https://docs.gitlab.com/ee/user/project/merge_requests/changes.html#show-a-linked-file-first): &lt;code&gt;Code Review Workflow&lt;/code&gt;&lt;/summary&gt;

&gt; When you share a link to a specific file in a merge request, it's often because you want the person to look at something within that file. Merge requests previously needed to load all of the files before scrolling to the specific position you've referenced. Linking directly to a file is a great way to improve the speed of collaboration in merge requests:
&gt; 
&gt; 1. Find the file you want to show first. Right-click the name of the file to copy the link to it.
&gt; 1. When you visit that link, your chosen file is shown at the top of the list. The file browser shows a link icon next to the file name.
&gt; 
&gt; Feedback about linked files can be left in [issue 439582](https://gitlab.com/gitlab-org/gitlab/-/issues/439582).

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Auto-merge when all checks pass](https://docs.gitlab.com/ee/user/project/merge_requests/auto_merge.html): &lt;code&gt;Code Review Workflow&lt;/code&gt;&lt;/summary&gt;

&gt; Merge requests have many required checks that must pass before they are mergeable. These checks can include approvals, unresolved threads, pipelines, and other items that need to be satisfied. When you're responsible for merging code, it can be hard to keep track of all of these events, and know when to come back and check to see if a merge request can be merged.
&gt; 
&gt; GitLab now supports **Auto-merge** for all checks in merge requests. Auto-merge enables any user who is eligible to merge to set a merge request to **Auto-merge**, even before all the required checks have passed. As the merge request continues through its lifecycle, the merge request automagically merges after the last failing check passes.
&gt; 
&gt; We're really excited about this improvement to accelerate your merge request workflows. You can leave feedback about this feature in [issue 438395](https://gitlab.com/gitlab-org/gitlab/-/issues/438395).

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/verify/"&gt;Verify&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[JaCoCo support for test coverage visualization available in beta](https://docs.gitlab.com/ee/ci/testing/test_coverage_visualization/jacoco.html): &lt;code&gt;Code Testing and Coverage&lt;/code&gt;&lt;/summary&gt;

&gt; You can now use JaCoCo coverage reports, a popular standard for coverage calculation, inside your merge requests. The feature is available as beta, but ready for testing by anyone who wants to use JaCoCo coverage reports right away. If you have any feedback, feel free to contribute to the [feedback issue](https://gitlab.com/gitlab-org/gitlab/-/issues/479804).

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[GitLab Runner 17.4](https://docs.gitlab.com/runner): &lt;code&gt;GitLab Runner Core&lt;/code&gt;&lt;/summary&gt;

&gt; We’re also releasing GitLab Runner 17.4 today! GitLab Runner is the highly-scalable build agent that runs your CI/CD jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.
&gt; 
&gt; #### What's new:
&gt; 
&gt; - [GitLab Runner fleeting plugin for Azure compute (GA)](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/29223)
&gt; 
&gt; #### Bug Fixes:
&gt; 
&gt; - [The entire `step_script` contents appear in the job log's `after_script` section when a Kubernetes executor job is cancelled before completion](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/37952)
&gt; 
&gt; The list of all changes is in the GitLab Runner [CHANGELOG](https://gitlab.com/gitlab-org/gitlab-runner/blob/17-4-stable/CHANGELOG.md).

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Hide CI/CD variable values in the UI](https://new.docs.gitlab.com/ci/variables/#define-a-cicd-variable-in-the-ui): &lt;code&gt;Variables&lt;/code&gt;&lt;/summary&gt;

&gt; You might not want anyone to see the value of a variable after it is saved to project settings. You can now select the new **Masked and hidden** visibility option when creating a CI/CD variable. Selecting this option will permanently mask the value of the variable in the CI/CD settings UI, restricting the value from being displayed to anyone in the future and decreasing visibility of your data.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/application_security_testing/"&gt;Application security testing&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Secret Detection support for Anthropic API keys](https://docs.gitlab.com/ee/user/application_security/secret_detection/pipeline/detected_secrets.html): &lt;code&gt;Secret Detection&lt;/code&gt;&lt;/summary&gt;

&gt; Both pipeline and client-side Secret Detection now support detection of [Anthropic](https://www.anthropic.com/) API keys.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/software_supply_chain_security/"&gt;Software supply chain security&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Optional token expiration](https://docs.gitlab.com/ee/administration/settings/account_and_limit_settings.html#require-expiration-dates-for-new-access-tokens) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;System Access&lt;/code&gt;&lt;/summary&gt;

&gt; Administrators can now decide if they want to enforce a mandatory expiration date for personal, project, and group access tokens. If administrators disable this setting, any new access token generated will not be required to have an expiration date. By default this setting is enabled, and an expiration less than that of the maximum allowed lifetime is required. This setting is available in GitLab 16.11 and later.

&lt;/details&gt;</content>
    <link href="https://gitlab.com/gitlab-org/gitlab-foss/-/releases/v17.4.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://gitlab.com/gitlab-org/gitlab-foss/-/releases/v17.5.0</id>
    <title>New release for GitLab: GitLab 17.5</title>
    <updated>2024-10-17T00:00:00+00:00</updated>
    <author>
      <name>gitlab-org/gitlab-foss</name>
    </author>
    <content>&lt;p&gt;&lt;img alt="12 new features" src="https://img.shields.io/static/v1?color=108548&amp;amp;label=new+features&amp;amp;labelColor=525252&amp;amp;message=12&amp;amp;style=for-the-badge" title="New features added in this release" /&gt;
&lt;img alt="2283 total badges" src="https://img.shields.io/static/v1?color=1F75CB&amp;amp;label=total+features&amp;amp;labelColor=525252&amp;amp;message=2283&amp;amp;style=for-the-badge" title="Total features" /&gt;&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;[GitLab chart improvements](https://docs.gitlab.com/charts/) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;Cloud Native Installation&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab 17.5 includes an update to our version of the NGINX Ingress Controller. The `nginx-controller` container image is now version 1.11.2. Please
&gt; note this includes new RBAC requirements because the new controller now uses endpointslices and requires an RBAC rule to access them.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Omnibus improvements](https://docs.gitlab.com/omnibus/) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;Omnibus Package&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab 17.5 includes support for upgrading PostgreSQL from version 14.x to 16.x for single node installations. Automatic upgrades are not enabled and
&gt; so PostgreSQL upgrades must be triggered manually.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Configure agent and GitOps environment settings with the REST API](https://docs.gitlab.com/ee/api/environments.html): &lt;code&gt;Environment Management&lt;/code&gt;, &lt;code&gt;Deployment Management&lt;/code&gt;&lt;/summary&gt;

&gt; You can check the status of your pods and Flux reconciliation from the GitLab environments UI.
&gt; However, this approach is hard to scale because the required settings are exposed only through GraphQL or the UI.
&gt; Now, GitLab ships with REST API support for configuring an agent for Kubernetes, as well as setting the namespace and Flux resource per environment.
&gt; To further improve support for dynamic environments, [issue 467912](https://gitlab.com/gitlab-org/gitlab/-/issues/467912) proposes adding support for configuring these settings in CI/CD pipelines.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Easy bootstrapping of GitLab Kubernetes integration](https://docs.gitlab.com/ee/user/clusters/agent/install/#bootstrap-the-agent-with-flux-support-recommended): &lt;code&gt;Deployment Management&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab offers flexible, reliable, and secure GitOps support with the [agent for Kubernetes](https://docs.gitlab.com/ee/user/clusters/agent/) and its [Flux integration](https://docs.gitlab.com/ee/user/clusters/agent/gitops.html).
&gt; Still, bootstrapping Flux with GitLab and setting up the agent for Kubernetes used to require a lot of documentation reading and switching between the GitLab UI and the terminal.
&gt; The GitLab CLI now offers [the `glab cluster agent bootstrap` command](https://gitlab.com/gitlab-org/cli/-/blob/main/docs/source/cluster/agent/bootstrap.md) to simplify installing the agent on top of an existing Flux installation. 
&gt; Now, you can configure Flux and the agent with just two simple commands.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Stream Kubernetes resource events](https://docs.gitlab.com/ee/ci/environments/kubernetes_dashboard.html): &lt;code&gt;Deployment Management&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab provides a real-time view of your pods, as well as pod log streaming, all through the dashboard for Kubernetes.
&gt; In GitLab 17.4, we offered a static listing of resource-specific event information from the UI.
&gt; This release further improves the dashboard for Kubernetes by letting you stream incoming events as they emerge in the cluster.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Suspend or resume GitOps reconciliation from the GitLab UI](https://docs.gitlab.com/ee/ci/environments/kubernetes_dashboard.html#suspend-or-resume-flux-reconciliation): &lt;code&gt;Deployment Management&lt;/code&gt;&lt;/summary&gt;

&gt; As a Flux user, have you ever needed to quickly stop an automatic reconciliation or drift remediation? Have you wanted to trigger a `HelmRelease` to synchronize manually removed resources? These actions are best achieved with the Flux suspend and resume functions. Until now, your best option was to use the Flux CLI, which required a context switch and several commands to ensure the right resource was affected. In GitLab 17.5, you can suspend or resume a reconciliation from the built-in dashboard for Kubernetes.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/create/"&gt;Create&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Enhanced branch rules editing capabilities](https://docs.gitlab.com/ee/user/project/repository/branches/branch_rules.html#create-a-branch-rule): &lt;code&gt;Source Code Management&lt;/code&gt;&lt;/summary&gt;

&gt; In GitLab 15.10, we introduced a [consolidated view for branch-related settings and rules](https://about.gitlab.com/releases/2023/03/22/gitlab-15-10-released/#see-all-branch-related-settings-together). This view provided you with an easy way to understand the configuration of your project across multiple settings.
&gt; 
&gt; Building on this feature, you can now directly modify specific branch rules in this view, including branch protections, approval rules, and external status check configurations. These new capabilities lay the foundation for [continued improvements](https://gitlab.com/groups/gitlab-org/-/epics/12546) in branch configuration that will allow for greater flexibility in the future.
&gt; 
&gt; We encourage you to explore these new capabilities and to provide feedback. You can do this by contributing to our dedicated [feedback issue](https://gitlab.com/gitlab-org/gitlab/-/issues/486050).

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/verify/"&gt;Verify&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[GitLab Runner 17.5](https://docs.gitlab.com/runner): &lt;code&gt;GitLab Runner Core&lt;/code&gt;&lt;/summary&gt;

&gt; We’re also releasing GitLab Runner 17.5 today! GitLab Runner is the highly-scalable build agent that runs your CI/CD jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.
&gt; 
&gt; #### What's new:
&gt; 
&gt; - [Support AWS S3 multipart uploads with scoped temporary credentials](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/26921)
&gt; 
&gt; #### Bug Fixes:
&gt; 
&gt; - [Jobs with extra services don't complete if one of the service container is not running](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/38035)
&gt; - [The `gitlab-runner-fips-17.4.0-1` package fails to run on Amazon Linux 2 and returns a glibc error](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/38034)
&gt; - [Cache doesn't work with Amazon S3 when using S3 Express One Zone endpoints](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/37394)
&gt; - [Jobs are unable to pull base images if the `DOCKER_AUTH_CONFIG` variable has multiple registries](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/28073)

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/package/"&gt;Package&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Enhance API performance when working with container registry tags](https://docs.gitlab.com/ee/api/container_registry.html#list-registry-repository-tags): &lt;code&gt;Container Registry&lt;/code&gt;&lt;/summary&gt;

&gt; We're excited to announce a significant improvement to our Container Registry API for self-managed GitLab instances. With the release of GitLab 17.5, we've implemented keyset pagination for the `:id/registry/repositories/:repository_id/tags` endpoint, bringing it in line with the functionality already available on GitLab.com. This enhancement is part of our ongoing efforts to improve API performance and provide a consistent experience across all GitLab deployments.
&gt; 
&gt; Keyset pagination offers a more efficient method for handling large datasets, resulting in improved performance and a better user experience. This update is particularly useful when managing large container registries, as it allows for smoother navigation through repository tags. In order to use this feature, self-managed instances must upgrade to the [next-generation container registry](https://docs.gitlab.com/ee/administration/packages/container_registry_metadata_database.html).

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/software_supply_chain_security/"&gt;Software supply chain security&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Improved user management summary](https://docs.gitlab.com/ee/user/profile/account/create_accounts.html#create-users-in-admin-area) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;User Management&lt;/code&gt;&lt;/summary&gt;

&gt; Administrators now have an enhanced, summarized view of the following critical pieces of information about the users on their instance:
&gt; 
&gt; - Pending approval.
&gt; - Without two-factor authentication.
&gt; - Administrators.
&gt; 
&gt; This increases user management efficiency, because administrators can quickly see how many users are in these states from the summary view, and filter on them.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[View token associations using API](https://docs.gitlab.com/ee/api/personal_access_tokens.html#list-token-associations): &lt;code&gt;System Access&lt;/code&gt;&lt;/summary&gt;

&gt; You can now view which groups, subgroups, and projects a token is associated with. This makes it easier to determine the impact of token expirations or revocations, and to understand where a token is able to be used.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Selective SAML single sign-on enforcement](https://docs.gitlab.com/ee/administration/settings/sign_in_restrictions.html#disable-password-authentication-for-users-with-an-sso-identity) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;User Management&lt;/code&gt;&lt;/summary&gt;

&gt; Previously, when SAML SSO was enabled, groups could choose to enforce SSO, which required all members to use SSO
&gt; authentication to access the group. However, some groups want the security of SSO enforcement for employees or
&gt; group members, while still allowing outside collaborators or contractors to access their groups without SSO.
&gt; 
&gt; Now, groups with SAML SSO enabled have SSO automatically enforced for all members
&gt; who have a SAML identity. Group members without SAML identities are not required to
&gt; use SSO unless SSO enforcement is explicitly enabled.
&gt; 
&gt; A member has a SAML identity if one or both of the following are true:
&gt; 
&gt; - They signed in to GitLab using their GitLab group's single sign-on URL.
&gt; - They were provisioned by SCIM.
&gt; 
&gt; To ensure smooth operation of the selective SSO enforcement feature, ensure your SAML configuration is
&gt; working properly before selecting the **Enable SAML authentication for this group** checkbox.

&lt;/details&gt;</content>
    <link href="https://gitlab.com/gitlab-org/gitlab-foss/-/releases/v17.5.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://gitlab.com/gitlab-org/gitlab-foss/-/releases/v17.6.0</id>
    <title>New release for GitLab: GitLab 17.6</title>
    <updated>2024-11-21T00:00:00+00:00</updated>
    <author>
      <name>gitlab-org/gitlab-foss</name>
    </author>
    <content>&lt;p&gt;&lt;img alt="16 new features" src="https://img.shields.io/static/v1?color=108548&amp;amp;label=new+features&amp;amp;labelColor=525252&amp;amp;message=16&amp;amp;style=for-the-badge" title="New features added in this release" /&gt;
&lt;img alt="2299 total badges" src="https://img.shields.io/static/v1?color=1F75CB&amp;amp;label=total+features&amp;amp;labelColor=525252&amp;amp;message=2299&amp;amp;style=for-the-badge" title="Total features" /&gt;&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;[Add support for values to the `glab agent bootstrap` command](https://gitlab.com/gitlab-org/cli/-/blob/main/docs/source/cluster/agent/bootstrap.md#options): &lt;code&gt;Deployment Management&lt;/code&gt;&lt;/summary&gt;

&gt; In the last release, we introduced support for easy agent bootstrapping to the GitLab CLI tool. GitLab 17.6 further improves the `glab cluster agent bootstrap` command with support for custom Helm values. You can use the `--helm-release-values` and `--helm-release-values-from` flags to customize the generated `HelmRelease` resource.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Select a GitLab agent for an environment in a CI/CD job](https://docs.gitlab.com/ee/ci/environments/kubernetes_dashboard.html#configure-a-dashboard-for-a-dynamic-environment): &lt;code&gt;Environment Management&lt;/code&gt;&lt;/summary&gt;

&gt; To use the dashboard for Kubernetes, you need to select an agent for Kubernetes connection from the environment settings. Until now, you could select the agent only from the UI or (from GitLab 17.5) the API, which made configuring a dashboard from CI/CD difficult. In GitLab 17.6, you can configure an agent connection with the `environment.kubernetes.agent` syntax.
&gt; In addition, [issue 500164](https://gitlab.com/gitlab-org/gitlab/-/issues/500164) proposes to add support for selecting a namespace and Flux resource from your CI/CD configuration.
&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Display release notes on deployment details page](https://docs.gitlab.com/ee/ci/environments/deployment_approvals.html#view-blocked-deployments): &lt;code&gt;Continuous Delivery&lt;/code&gt;&lt;/summary&gt;

&gt; Have you ever wondered what might be included in a deployment you've been asked to approve? In past versions, you could create a release with a detailed description about its content and instructions for testing, but the related environment-specific deployment did not show this data. We are happy to share that GitLab now displays the release notes under the related deployment details page.
&gt; 
&gt; Because GitLab releases are always created from a Git tag, the release notes are shown only on deployments related to the tag-triggered pipeline.
&gt; 
&gt; This feature was contributed to GitLab by [Anton Kalmykov](https://gitlab.com/antonkalmykov). Thank you!

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/plan/"&gt;Plan&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Deploy your Pages site with any CI/CD job](https://docs.gitlab.com/ee/user/project/pages/#user-defined-job-names): &lt;code&gt;Pages&lt;/code&gt;&lt;/summary&gt;

&gt; To give you more flexibility in designing your pipelines, you no longer 
&gt; need to name your Pages deploy job `pages`. You can now simply use the 
&gt; `pages` attribute in any CI/CD job to trigger a Pages deployment.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Easily remove closed items from your view](https://docs.gitlab.com/ee/user/group/epics/manage_epics.html): &lt;code&gt;Portfolio Management&lt;/code&gt;&lt;/summary&gt;

&gt; You can now hide closed items from the linked and child items lists by turning off the **Show closed items** toggle. With this addition, you have greater control over your view and can focus on active work while reducing visual clutter in complex projects.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/create/"&gt;Create&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Merge at a scheduled date and time](https://docs.gitlab.com/ee/user/project/merge_requests/auto_merge.html#prevent-merge-before-a-specific-date): &lt;code&gt;Code Review Workflow&lt;/code&gt;&lt;/summary&gt;

&gt; Some merge requests may need to be held for merging until after a certain date or time. When that date and time does pass you need to find someone with permissions to merge and hope they're available to take care of it for you. If this is after hours or the timeline is critical you may need to prepare folks well in advance for the task.
&gt; 
&gt; Now, when you create or edit a merge request you can specify a `merge after` date. This date will be used to prevent the merge request from being merged until it has passed. Using this new capability with our previously released [improvements to auto-merge](https://about.gitlab.com/releases/2024/09/19/gitlab-17-4-released/#auto-merge-when-all-checks-pass) gives you the flexibility to schedule merge requests to merge in the future.
&gt; 
&gt; A big thank you to [Niklas van Schrick](https://gitlab.com/Taucher2003) for the amazing contribution!

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Enhanced merge request reviewer assignments](https://docs.gitlab.com/ee/user/project/merge_requests/reviews/#request-a-review): &lt;code&gt;Code Review Workflow&lt;/code&gt;&lt;/summary&gt;

&gt; After you've carefully crafted your changes and prepared a merge request, the next step is to identify reviewers who can help move it forward. Identifying the right reviewers for your merge request involves understanding who the right approvers are, and who might be a subject matter expert (CODEOWNER) for the changes you're proposing. 
&gt; 
&gt; Now, when assigning reviewers, the sidebar creates a connection between the approval requirements for your merge request and reviewers. View each approval rule, then select from approvers who can satisfy that approval rule and move the merge request forward for you. If you use [optional CODEOWNER sections](https://docs.gitlab.com/ee/user/project/codeowners/#make-a-code-owners-section-optional) those rules are also shown in the sidebar to help you identify appropriate subject matter experts for your changes.
&gt; 
&gt; Enhanced reviewer assignments is the next evolution of applying intelligence to assigned reviewers in GitLab. This iteration builds on what we've learned from suggested reviewers, and how to effectively identify the best reviewers for moving a merge request forward. In [upcoming iterations](https://gitlab.com/groups/gitlab-org/-/epics/14808) of reviewer assignments, we'll continue to enhance the intelligence used to recommend and rank possible reviewers.

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/verify/"&gt;Verify&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[JaCoCo test coverage visualization now generally available](https://docs.gitlab.com/ee/ci/testing/test_coverage_visualization/jacoco.html): &lt;code&gt;Code Testing and Coverage&lt;/code&gt;&lt;/summary&gt;

&gt; You can now see JaCoCo test coverage results directly in your merge request diff view. This visualization allows you to quickly identify which lines are covered by tests and which need additional coverage before merging. 

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[GitLab Runner 17.6](https://docs.gitlab.com/runner): &lt;code&gt;GitLab Runner Core&lt;/code&gt;&lt;/summary&gt;

&gt; We’re also releasing GitLab Runner 17.6 today! GitLab Runner is the highly-scalable build agent that runs your CI/CD jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.
&gt; 
&gt; #### Bug Fixes:
&gt; 
&gt; - [In GitLab Runner 17.5.0, pods fail to become attachable](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/38260)
&gt; - [Runner crashes with `exec format error` when installing the fleeting plugin](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/38247)
&gt; - [Kubernetes executor pods with cgroup v2 enabled hang when OOMKilled](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/38244)
&gt; - [Runner defaults are not honoured when registering runner with a configuration template](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/38231)
&gt; - [GitLab Runner waits for Kubernetes pods to become attachable during the polling period when using exec mode](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/37244)
&gt; - [Authentication issues occur when the feature flag `FF_GIT_URLS_WITHOUT_TOKENS` is enabled](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/38268)

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/software_supply_chain_security/"&gt;Software supply chain security&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Audit events for privileged actions](https://docs.gitlab.com/ee/user/compliance/audit_event_types.html#groups-and-projects) &lt;i&gt;(self-managed only)&lt;/i&gt;&lt;/summary&gt;

&gt; There are now additional audit events for privileged settings-related administrator actions. A record of when these settings were changed can help improve security by providing an audit trail.

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Disable OTP authenticator and WebAuthn devices independently](https://docs.gitlab.com/ee/user/profile/account/two_factor_authentication.html#disable-two-factor-authentication): &lt;code&gt;System Access&lt;/code&gt;&lt;/summary&gt;

&gt; It is now possible to disable the OTP authenticator and WebAuthn devices individually or simultaneously. Previously, if you disabled the OTP authenticator, the WebAuthn device(s) were also disabled. Because the two now operate independently, there is more granular control over these authentication methods. 

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Use API to get information about tokens](https://docs.gitlab.com/ee/api/admin/token.html) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;System Access&lt;/code&gt;&lt;/summary&gt;

&gt; Administrators can use the new token information API to get information about personal access tokens, deploy tokens, and feed tokens. Unlike other API endpoints that expose token information, this endpoint allows administrators to retrieve token information without knowing the type of the token.
&gt; 
&gt; Thank you [Nicholas Wittstruck](https://gitlab.com/nwittstruck) and the rest of the crew from Siemens for your contribution!

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[More information in sign in emails from new locations](https://docs.gitlab.com/ee/user/profile/notifications.html#notifications-for-unknown-sign-ins) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;System Access&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab optionally sends an email when a sign-in from a new location is detected. Previously, this email only contained the IP address, which is difficult to correlate to a location. This email now contains city and country location information as well.
&gt; 
&gt; Thank you [Henry Helm](https://gitlab.com/shangsuru) for your contribution! 

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Admin setting to enforce CI/CD job token allowlist](https://docs.gitlab.com/ee/administration/settings/continuous_integration.html#job-token-permissions) &lt;i&gt;(self-managed only)&lt;/i&gt;: &lt;code&gt;Secrets Management&lt;/code&gt;&lt;/summary&gt;

&gt; Previously, we announced that the default CI/CD job token (`CI_JOB_TOKEN`) behavior [will change in GitLab 18.0](https://docs.gitlab.com/ee/update/deprecations.html#default-cicd-job-token-ci_job_token-scope-changed), requiring you to explicitly add indvidual [projects or groups to your project's job token allowlist](https://docs.gitlab.com/ee/ci/jobs/ci_job_token.html#add-a-group-or-project-to-the-job-token-allowlist) if you want them to continue to be able to access your project.
&gt; 
&gt; Now, we are giving self-managed and Dedicated instance administrators the ability to enforce this more secure setting on all projects on an instance. After you enable this setting, all projects will need to make use of their allowlist if they want to use CI/CD job tokens for authentication. _Note: We recommend enabling this setting as part of a strong security policy._

&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;[Track CI/CD job token authentications](https://docs.gitlab.com/ee/ci/jobs/ci_job_token.html#job-token-authentication-log): &lt;code&gt;Secrets Management&lt;/code&gt;&lt;/summary&gt;

&gt; Previously it was difficult to track which other projects were using accessing your project by authenticating with CI/CD job tokens. To make it easier for you to audit and control access to your project, we've added an authentication log.
&gt; 
&gt; With this authentication log, you can view the list of other projects that have used a job token to authenticate with your project, both in the UI and as a downloadable CSV file. This data can be used to audit project access and aid in populating the job token allowlist to enable stronger [control over which projects can access your project](https://docs.gitlab.com/ee/ci/jobs/ci_job_token.html#control-job-token-access-to-your-project). 

&lt;/details&gt;

&lt;h5&gt;&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/modelops/"&gt;Modelops&lt;/a&gt;&lt;/h5&gt;
&lt;details&gt;&lt;summary&gt;[Model registry now generally available](https://docs.gitlab.com/ee/user/project/ml/model_registry/): &lt;code&gt;MLOps&lt;/code&gt;&lt;/summary&gt;

&gt; GitLab's model registry, now generally available, is your centralized hub for managing machine learning models as part of your existing GitLab workflow. You can track model versions, store artifacts and metadata, and maintain comprehensive documentation in the model card.
&gt; 
&gt; Built for seamless integration, the model registry works natively with [MLflow clients]( https://docs.gitlab.com/ee/user/project/ml/experiment_tracking/mlflow_client.html) and connects directly to your CI/CD pipelines, enabling automated model deployment and testing. Data scientists can manage models through an intuitive UI or existing MLflow workflows, while MLOps teams can leverage semantic versioning and CI/CD integration for streamlined production deployments all within the [GitLab API](https://docs.gitlab.com/ee/api/model_registry.html).
&gt; 
&gt;  Please feel free to drop us a note in our [feedback issue](https://gitlab.com/gitlab-org/gitlab/-/issues/504458) and we'll get back in touch! Get started today by going to **Deploy &gt; Model registry** in your GitLab instance.

&lt;/details&gt;</content>
    <link href="https://gitlab.com/gitlab-org/gitlab-foss/-/releases/v17.6.0" rel="alternate"/>
  </entry>
</feed>
