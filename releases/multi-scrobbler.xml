<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://selfh.st/apps</id>
  <title>Multi-Scrobbler Releases</title>
  <updated>2025-03-16T02:33:58.828788-04:00</updated>
  <author>
    <name>selfh.st</name>
    <email>contact@selfh.st</email>
  </author>
  <link href="https://selfh.st/apps" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <subtitle>Self-hosted software releases generated by selfh.st</subtitle>
  <entry>
    <id>https://github.com/FoxxMD/multi-scrobbler/releases/tag/0.8.6</id>
    <title>New release for Multi-Scrobbler: v0.8.6</title>
    <updated>2024-10-16T12:51:58-04:00</updated>
    <author>
      <name>FoxxMD/multi-scrobbler</name>
    </author>
    <content>&lt;h1&gt;What's New?&lt;/h1&gt;
&lt;h2&gt;Jellyfin API Improvements&lt;/h2&gt;
&lt;p&gt;The new Jellyfin API Source was missing a decent amount of polishing from its &lt;a href="https://github.com/FoxxMD/multi-scrobbler/releases/tag/0.8.4"&gt;initial release&lt;/a&gt; (#196 #200 #209). This release fixes many bugs and also introduces &lt;a href="https://foxxmd.github.io/multi-scrobbler/docs/configuration/?configType=env#jellyfin"&gt;new configuration&lt;/a&gt; for allow/block scrobbling by library and media type enforcement.&lt;/p&gt;
&lt;h2&gt;Configuration Validation Improvements&lt;/h2&gt;
&lt;p&gt;The maintenance-mode &lt;a href="https://github.com/YousefED/typescript-json-schema"&gt;typescript-json-schema&lt;/a&gt; library that was being used to validate configuration has been replaced with the much improved &lt;a href="https://github.com/vega/ts-json-schema-generator"&gt;ts-json-schema-generator&lt;/a&gt;. Validation rules are now generated at runtime instead of using static files from the project which will make maintenance easier. This change, along with refactored validation logic, should make validation errors in logs easier to read and more specific.&lt;/p&gt;
&lt;h2&gt;Album Art&lt;/h2&gt;
&lt;p&gt;Players in Sources on the dashboard now support album art. This has been implemented for Jellyfin and Spotify so far. Other sources will have album art implemented in the future.&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://github.com/user-attachments/assets/5920c7a1-f48c-455e-bbc4-68b1b127d042" /&gt;&lt;/p&gt;
&lt;h2&gt;Github Issues&lt;/h2&gt;
&lt;p&gt;The issues template have been refactored to use &lt;a href="https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/configuring-issue-templates-for-your-repository#creating-issue-forms"&gt;forms&lt;/a&gt; and additional templates have been added for feature requests and source/client suggestions. The &lt;a href="https://github.com/FoxxMD/multi-scrobbler/issues/new/choose"&gt;new templates&lt;/a&gt; should help make bug issues easier to write for new users and easier for me to read!&lt;/p&gt;
&lt;h1&gt;Full Changelog&lt;/h1&gt;
&lt;h3&gt;Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;(jellyfin)&lt;/em&gt; Add debug options for media data troubleshooting&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(jellyfin)&lt;/em&gt; Support and enforce library collection type&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(ui)&lt;/em&gt; Improve player ui when in stopped state&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Improve client/source schema validation generation and error handling&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Implement platform output when building track info&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Bug Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;(jellyfin)&lt;/em&gt; Guard against undefined playback data #209&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(jellyfin)&lt;/em&gt; Guard against active session without now playing data #209&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(jellyfin)&lt;/em&gt; Fix not handling stopped session state preventing last play in playlist from scrobbling #209&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(jellyfin)&lt;/em&gt; Enforce media type when determining session validity&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(jellyfin)&lt;/em&gt; Detect theme song extras play and discard #209&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(ytmusic)&lt;/em&gt; Allow authUser to be number or string&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(player)&lt;/em&gt; Fix missing calculated status on player stop&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Fix some source schemas to reflect documentation WRT optional properties&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Fix example configs so they pass validation tests&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Documentation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Update jellyfin instructions in quickstart to use API Source&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Update/fix docker-compose usage&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Fix link typo for flatpak&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Enable parsing json5 for AIO examples&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Miscellaneous Tasks&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;(vscode)&lt;/em&gt; Add markdown extension to devcontainer&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Migrate bug report template to form&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Add templates for feature request and new source/client&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Add issue template config&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Use silent logger for source config tests&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Missing schema package in regular deps and freeze ts version&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Replace typescript-json-schema with ts-json-schema-generator&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Testing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;(jellyfin)&lt;/em&gt; Update valid activity tests&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Add tests for example configs and test parsing/validation&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Add long timeout to first config parse due to slow schema generation&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Ci&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Add ACT run for just backend test&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Make test workflow reusable and add run sanity check&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Fix sanity test checkout ref and shorten APP_VERSION sha usage for PRs&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/FoxxMD/multi-scrobbler/releases/tag/0.8.6" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/FoxxMD/multi-scrobbler/releases/tag/0.8.7</id>
    <title>New release for Multi-Scrobbler: v0.8.7</title>
    <updated>2024-10-29T13:43:41-04:00</updated>
    <author>
      <name>FoxxMD/multi-scrobbler</name>
    </author>
    <content>&lt;h1&gt;What's New?&lt;/h1&gt;
&lt;h2&gt;Plex API Source&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://foxxmd.github.io/multi-scrobbler/docs/configuration/?plexType=api#plex"&gt;A new Source&lt;/a&gt; has been implemented for Plex that uses the official API instead of &lt;a href="https://support.plex.tv/articles/115002267687-webhooks"&gt;webhooks&lt;/a&gt;. There are many benefits to the new source:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Does not require Plex Pass (webhooks are Plex Pass only) so all users can use it&lt;/li&gt;
&lt;li&gt;Simplified networking and setup&lt;/li&gt;
&lt;li&gt;Leverage MS's calculated player to better record listening activity instead of relying on Plex's scrobble behavior&lt;/li&gt;
&lt;li&gt;Automatic scrobbling user filtering based on authentication&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The old webhook-based Plex Source has been deprecated. &lt;a href="https://foxxmd.github.io/multi-scrobbler/docs/configuration/?plexType=webhook#plex"&gt;See the documentation for migration steps.&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Tautulli Deprecation&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://foxxmd.github.io/multi-scrobbler/docs/configuration/#tautulli"&gt;Tautulli Source&lt;/a&gt; was initially implemented as a way for non Plex Pass users to monitor Plex. I am considering deprecating it for maintainability of the project and because the new Plex API Source should replace it. &lt;a href="https://github.com/FoxxMD/multi-scrobbler/issues/217"&gt;Please provide feedback&lt;/a&gt; if you think it should not be deprecated or what else needs to be implemented for the new Plex source to accommodate your use case.&lt;/p&gt;
&lt;h2&gt;MS Player Improvements&lt;/h2&gt;
&lt;p&gt;The internal logic for MS's "player", which is used for calculating play state and listening activity for Source's that report Player position, has had a major rework to leverage a "real-time" simulation of the Source rather than relying on timestamps. There should be no functional change for end-users besides more accurate player reporting. If you notice any regression in behavior or bugs please create an issue.&lt;/p&gt;
&lt;h2&gt;Daylight Savings Time Fix&lt;/h2&gt;
&lt;p&gt;Thanks to the users in #214 for discovering and isolating an issue with MS's logging library that caused empty files to be created on dates that transitioned from Standard Time to DST. This release bumps the logging library version that includes a fix for this issue that should save American users the headache European users had to endure :sweat_smile: &lt;/p&gt;
&lt;h1&gt;Full Changelog&lt;/h1&gt;
&lt;h3&gt;Bug Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Bump @foxxmd/logging to fix DST rolling file issue&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Documentation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;(plex)&lt;/em&gt; Clean up api/webhook sections and add migration guide&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(tautulli)&lt;/em&gt; Add deprecation notice and discussion link&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Fix Jellyfin API migration version&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;(player)&lt;/em&gt; Implement real-time positional state tracking&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(plex)&lt;/em&gt; Initial Plex API Source implementation&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(plex)&lt;/em&gt; Add track progress tracking to api source&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(plex)&lt;/em&gt; Implement album art for UI&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(ui)&lt;/em&gt; Show indeterminate state for non-positional players&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Reduce drop reason logging noise for jellyfin/plex API sources&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Improved filtering for platform players with multiple states&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/FoxxMD/multi-scrobbler/releases/tag/0.8.7" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/FoxxMD/multi-scrobbler/releases/tag/0.8.8</id>
    <title>New release for Multi-Scrobbler: v0.8.8</title>
    <updated>2024-10-30T13:55:28-04:00</updated>
    <author>
      <name>FoxxMD/multi-scrobbler</name>
    </author>
    <content>&lt;p&gt;See &lt;a href="https://github.com/FoxxMD/multi-scrobbler/releases/tag/0.8.7"&gt;0.8.7&lt;/a&gt; for the recent major changes.
* Fix handling of local (not signed in) users in the new &lt;a href="https://foxxmd.github.io/multi-scrobbler/docs/configuration/#plex"&gt;Plex API Source&lt;/a&gt; #218&lt;/p&gt;</content>
    <link href="https://github.com/FoxxMD/multi-scrobbler/releases/tag/0.8.8" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/FoxxMD/multi-scrobbler/releases/tag/0.9.0</id>
    <title>New release for Multi-Scrobbler: v0.9.0</title>
    <updated>2025-01-15T11:09:25-05:00</updated>
    <author>
      <name>FoxxMD/multi-scrobbler</name>
    </author>
    <content>&lt;h1&gt;What's New?&lt;/h1&gt;
&lt;p&gt;It's a big release! Happy 2025!&lt;/p&gt;
&lt;h2&gt;Youtube Music&lt;/h2&gt;
&lt;h3&gt;Auth Fixes&lt;/h3&gt;
&lt;p&gt;Migrated YTM source communication from &lt;code&gt;youtube-music-ts-api&lt;/code&gt; to &lt;a href="https://github.com/LuanRT/YouTube.js/"&gt;&lt;code&gt;youtubei.js&lt;/code&gt;&lt;/a&gt; which is actively developed and has fixed code for authenticating with cookies. Users using cookies are recommended to refresh their cookies using the &lt;a href="https://foxxmd.github.io/multi-scrobbler/docs/configuration/?ytmAuth=cookie#youtube-music"&gt;newer guidance in the docs&lt;/a&gt; to help ensure they are not invalidated.&lt;/p&gt;
&lt;p&gt;This new library also supports &lt;a href="https://foxxmd.github.io/multi-scrobbler/docs/configuration/?ytmAuth=oauth#youtube-music"&gt;&lt;strong&gt;OAuth&lt;/strong&gt; authentication&lt;/a&gt; which may be a more stable alternative for users experiencing constant authorization failures.&lt;/p&gt;
&lt;h3&gt;Scrobble Improvements&lt;/h3&gt;
&lt;p&gt;The code used for detecting YTM history has been overhauled with more sophisticated change detection which should prevent more false positive scrobbles. If you still experience scrobble issues please read through the &lt;a href="https://foxxmd.github.io/multi-scrobbler/docs/FAQ/#youtube-music-misses-or-duplicates-scrobbles"&gt;updated FAQ section for YTM&lt;/a&gt; to enable detailed logging and guidance on how to report these issues in a useful way.&lt;/p&gt;
&lt;h3&gt;ENV Support&lt;/h3&gt;
&lt;p&gt;YTM source config now has full &lt;a href="https://foxxmd.github.io/multi-scrobbler/docs/configuration/?configType=env#configuration-10"&gt;ENV support.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Plex and Jellyfin Improvements&lt;/h2&gt;
&lt;p&gt;A number of bugs related to the new Jellyfin and Plex API sources have been fixed which should incidentally improve scrobbling experiences for all polling-type sources.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DEPRECATION&lt;/strong&gt;: The legacy (webhook-based) sources for Jellyfin, Plex, and Tautulli have all now been officially deprecated. These will be removed in an upcoming release. If you are still using these (from MS &amp;lt; 0.8.4) please consult the respective &lt;a href="https://foxxmd.github.io/multi-scrobbler/docs/configuration/"&gt;configuration docs&lt;/a&gt; for migration steps and migrate as soon as possible.&lt;/p&gt;
&lt;h2&gt;Improved Source/Client Start and Restart&lt;/h2&gt;
&lt;p&gt;Code related to initializing and restarting sources/clients has been overhauled to enable restart from basically any error state. You should no longer need to restart multi-scrobbler in the event a single component fails. The UI now includes a&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Restart &lt;strong&gt;(Force)&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;button on each component. Using &lt;strong&gt;Force&lt;/strong&gt; will cause the component to be initialized from scratch.&lt;/p&gt;
&lt;p&gt;Incidentally, this overhaul paves the way for eventually reloading config changes into MS without restarting, in a future release. :eyes:&lt;/p&gt;
&lt;h2&gt;Debug Mode&lt;/h2&gt;
&lt;p&gt;A new, global &lt;strong&gt;Debug Mode&lt;/strong&gt; option has been implemented to help with troubleshooting multi-scrobbler. Instead of needing a file configuration to enable optional, "debugging" options for logging on a specific component, etc... users can now simply use the ENV &lt;code&gt;DEBUG_MODE=true&lt;/code&gt; to enable &lt;strong&gt;all&lt;/strong&gt; options at once. This can also be configured from the AIO &lt;code&gt;config.json&lt;/code&gt;. See the new &lt;a href="https://foxxmd.github.io/multi-scrobbler/docs/configuration/#debug-mode"&gt;&lt;strong&gt;Debug Mode&lt;/strong&gt; docs.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Config Explorer and Validation Improvements&lt;/h2&gt;
&lt;p&gt;The new configuration migration from &lt;a href="https://github.com/FoxxMD/multi-scrobbler/releases/tag/0.8.6"&gt;v0.8.7&lt;/a&gt; has enabled improving the built-in &lt;a href="https://foxxmd.github.io/multi-scrobbler/playground/"&gt;configuration explorer found in the docs.&lt;/a&gt; The explorer is now always up to date with whatever docker tag or branch it is used on and is automatically generated on docs build. The explorer should also now have more friendly names and a simpler structure making it actually useful.&lt;/p&gt;
&lt;h1&gt;Changelog&lt;/h1&gt;
&lt;h3&gt;Bug Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;(jellyfin)&lt;/em&gt; Fix missing check for undefined play #239&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(plex)&lt;/em&gt; Use track artist from response data when album artist is present #241&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(source)&lt;/em&gt; Implement player cleanup with play discovery for stale platforms #223 &lt;/li&gt;
&lt;li&gt;&lt;em&gt;(spotify)&lt;/em&gt; Album artists no longer missing @Fratt &lt;/li&gt;
&lt;li&gt;&lt;em&gt;(ui)&lt;/em&gt; Wording for non-polling sources start/restart&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(ytm)&lt;/em&gt; Implement bump-only list change detection #248 #227 #228 #226&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(ytm)&lt;/em&gt; Use diff type to restrict valid history changes #248 #227 #228 #226&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(ytm)&lt;/em&gt; Compare recent changed history to detect outdated responses #248 #227 #228 #226&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Fix WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match @CodeWithMa &lt;/li&gt;
&lt;li&gt;Remove deprecated version from docker-compose.yml @CodeWithMa &lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Default positional listen range to 0 position if none is provided #245&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Documentation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;(ytm)&lt;/em&gt; Add new auth docs and update FAQ&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(ytm)&lt;/em&gt; Clearer wording for troubleshooting content&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Improve schema generation and compatibility #208 #202&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Add lnav config&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Add debug mode information #244&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Add final deprecation notices for Plex/Tautull/Jellyfin legacy sources&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Update kitchensink with newer jellyfin/plex examples&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;(jellyfin)&lt;/em&gt; Bump client major version&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(jellyfin)&lt;/em&gt; More robust connection check and logging&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(notifications)&lt;/em&gt; Make init more granular and always complete init #216 #215&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(source)&lt;/em&gt; Add experimental file logging&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(source)&lt;/em&gt; Ensure delay on close-interval for scrobbling is less than interval&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(ui)&lt;/em&gt; Disable minifiying frontend identifiers&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(ytm)&lt;/em&gt; &lt;strong&gt;BREAKING&lt;/strong&gt; Use oauth-based api library for better stability #236 #195 #229&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(ytm)&lt;/em&gt; Add config option to always log diff&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(ytm)&lt;/em&gt; Re-implement auth with cookie and oauth #236 #195 #229&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(ytm)&lt;/em&gt; Implement ENV config&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(ytm)&lt;/em&gt; Conservative skip detection #248 #227 #228 #226&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(ytm)&lt;/em&gt; Use durations to generate play dates for interim tracks #248 #227 #228 #226&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(ytm)&lt;/em&gt; Debug mode enables log diffs&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(ytm)&lt;/em&gt; Add more innertube options to user configuration&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(ytm)&lt;/em&gt; Custom redirectUri checks&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Add stage Error classes and cause chain for notification&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Initialize usage refactored everywhere #221 #220 #231&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Implement start/restart/force init from UI regardless of status #216 #215&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Fully implement use of DEBUG_MODE #244&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Reduce polling log noise&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Log player state when using debug mode #244&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Include comment in play diff when present&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Miscellaneous Tasks&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;(deps)&lt;/em&gt; Bump the npm_and_yarn group across 2 directories with 3 updates&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Add docker-compose dev file and vscode task&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Generate schema files during docker build for docsite #208 #202&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Bump plexjs version&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Refactor&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;(ytm)&lt;/em&gt; Clean up tests and history parsing functions&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(ytm)&lt;/em&gt; Improve auth handling for reauthentication&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Testing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;(spotify)&lt;/em&gt; Test album artist parsing&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Ci&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;(No Category)&lt;/em&gt; Generate schema files for docsite in GH docs deploy workflow #208 #202&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;New Contributors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;@CodeWithMa made their first contribution in https://github.com/FoxxMD/multi-scrobbler/pull/235&lt;/li&gt;
&lt;li&gt;@Fratt made their first contribution in https://github.com/FoxxMD/multi-scrobbler/pull/240&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/FoxxMD/multi-scrobbler/compare/0.8.8...0.9.0&lt;/p&gt;</content>
    <link href="https://github.com/FoxxMD/multi-scrobbler/releases/tag/0.9.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/FoxxMD/multi-scrobbler/releases/tag/0.9.1</id>
    <title>New release for Multi-Scrobbler: v0.9.1</title>
    <updated>2025-01-21T10:11:48-05:00</updated>
    <author>
      <name>FoxxMD/multi-scrobbler</name>
    </author>
    <content>&lt;h1&gt;What's New?&lt;/h1&gt;
&lt;h2&gt;Fix Spotify Bug&lt;/h2&gt;
&lt;p&gt;A bug introduced with 0.9.0 could cause the last Spotify scrobble to fail if the player became stale. 0.9.1 fixes #254&lt;/p&gt;
&lt;h2&gt;Github Actions and Install Improvements&lt;/h2&gt;
&lt;p&gt;Project setup (&lt;code&gt;npm install&lt;/code&gt;, etc..) now has an optional, parallel track that installs the application and builds the docsite at the same time. This, along with upgrading Docusarus to leverage &lt;code&gt;@docusaurus/faster&lt;/code&gt;, has greatly reduced the time it takes to build MS from scratch.&lt;/p&gt;
&lt;p&gt;Additionally, MS now uses a refactored Github Actions workflow that leverages a native ARM runner instead of emulating the ARM docker build, as well as parallelizing the build.&lt;/p&gt;
&lt;p&gt;The end result is a workflow runtime on GHA that decreased from 20 minutes to 4 minutes :tada: &lt;/p&gt;
&lt;h2&gt;Changelog Highlights&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;docs: Update to Docusaurs 3.6 to improve build times by @FoxxMD in https://github.com/FoxxMD/multi-scrobbler/pull/251&lt;/li&gt;
&lt;li&gt;feat(docker): Paralellize npm install and build processes by @FoxxMD in https://github.com/FoxxMD/multi-scrobbler/pull/252&lt;/li&gt;
&lt;li&gt;Implement multi-runner image build for multi-arch improvements by @FoxxMD in https://github.com/FoxxMD/multi-scrobbler/pull/246&lt;/li&gt;
&lt;li&gt;fix(spotify): Generate played object from cleanup with correct TS by @FoxxMD in https://github.com/FoxxMD/multi-scrobbler/pull/255&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/FoxxMD/multi-scrobbler/compare/0.9.0...0.9.1&lt;/p&gt;</content>
    <link href="https://github.com/FoxxMD/multi-scrobbler/releases/tag/0.9.1" rel="alternate"/>
  </entry>
</feed>
