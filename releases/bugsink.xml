<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://selfh.st/apps</id>
  <title>Bugsink Releases</title>
  <updated>2025-03-19T19:35:13.051786-04:00</updated>
  <author>
    <name>selfh.st</name>
    <email>contact@selfh.st</email>
  </author>
  <link href="https://selfh.st/apps" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <subtitle>Self-hosted software releases generated by selfh.st</subtitle>
  <entry>
    <id>https://github.com/bugsink/bugsink/releases/tag/1.3.0</id>
    <title>New release for Bugsink: 1.3.0</title>
    <updated>2025-02-22T04:35:46-05:00</updated>
    <author>
      <name>bugsink/bugsink</name>
    </author>
    <content>&lt;h2&gt;1.3.0 (20 February 2025)&lt;/h2&gt;
&lt;h3&gt;Introduce FileEventStorage&lt;/h3&gt;
&lt;p&gt;An (optional) way to store the &lt;code&gt;event_data&lt;/code&gt; (full event as JSON)
outside the DB. This is expected to be useful for larger setups,
because it gives you:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A more portable database (e.g. backups); (depeding on event size
  the impact on your DB is ~50x.&lt;/li&gt;
&lt;li&gt;Less worries about hitting "physical" limits (e.g. disk size, max
  file size) for your DB.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Presumably (more testing will happen going forwards) it will:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Speed up migrations (especially on sqlite, which does full table copies)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;However: Ingestion speed does not seem to notacibly changed (either
way) with this change.&lt;/p&gt;
&lt;p&gt;Related utilities:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;migrate_to_current_eventstorage&lt;/code&gt; command: a command to move data over.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cleanup_eventstorage&lt;/code&gt; command: a "vacuum" of sorts.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Further Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Pagination on the Issues list&lt;/li&gt;
&lt;li&gt;Event-detail UI for Logentries: show &lt;code&gt;logentry.message&lt;/code&gt; and &lt;code&gt;logentry.params&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;UI: thousand-separators for counts&lt;/li&gt;
&lt;li&gt;Support for top-level &lt;code&gt;message&lt;/code&gt; in events (See #43)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nuke_events&lt;/code&gt; command improvements: more consistent behavior, better confirmation.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make_consistent&lt;/code&gt; command improvements: more affected cases, run in transaction&lt;/li&gt;
&lt;li&gt;&lt;code&gt;migrate&lt;/code&gt; command: always shows timings&lt;/li&gt;
&lt;li&gt;&lt;code&gt;showstat&lt;/code&gt; command: &lt;code&gt;digestion_speed&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Send welcome email: as a command&lt;/li&gt;
&lt;li&gt;Support for CORS&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;transaction semaphore: ensure release for exceptions while &lt;em&gt;entering&lt;/em&gt; the transaction&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Cleanup / refactoring&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Move MoreLoudlyFailingTransport out of the default 'eat_your_own_dogfood' conf&lt;/li&gt;
&lt;li&gt;allow long-running queries on long-running commands (&lt;code&gt;nuke_events&lt;/code&gt;, &lt;code&gt;make_consistent&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;DB indexes for the issue-lists (including filters)&lt;/li&gt;
&lt;li&gt;Don't 'eat your own dogfood' (send errors to backend) while running tests&lt;/li&gt;
&lt;li&gt;&lt;code&gt;delete_with_limit&lt;/code&gt; was removed; this removes one tie-in to MySQL/Sqlite (See #21)&lt;/li&gt;
&lt;li&gt;Print task's name in Snappea log when "Done"&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/bugsink/bugsink/releases/tag/1.3.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/bugsink/bugsink/releases/tag/1.4.0</id>
    <title>New release for Bugsink: 1.4.0</title>
    <updated>2025-03-13T10:35:44-04:00</updated>
    <author>
      <name>bugsink/bugsink</name>
    </author>
    <content>&lt;h2&gt;1.4.0 (13 March 2025)&lt;/h2&gt;
&lt;h3&gt;Introducing (Tag-based) Search&lt;/h3&gt;
&lt;p&gt;Bugsink 1.4.0 &lt;a href="https://www.bugsink.com/blog/introducing-search/"&gt;introduces tag-based search&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Support for searching both &lt;strong&gt;Issues&lt;/strong&gt; and individual &lt;strong&gt;Events&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Search is built entirely on &lt;strong&gt;tags&lt;/strong&gt; (both user-supplied and deduced from event properties).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Simple query language&lt;/strong&gt;: &lt;code&gt;key:value&lt;/code&gt; pairs for structured filtering.&lt;/li&gt;
&lt;li&gt;Search is &lt;strong&gt;implemented directly in the database&lt;/strong&gt;, ensuring a simple and efficient architecture.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Because tags take such a key role in the implementation of search, the introduction of search is coupled with per-issue
tag overviews, see #36 &amp;amp; #12. i.e. per issue pages show a breakdown-by-tag; and a special page (showing up to 25 values)
for tags is introduced.&lt;/p&gt;
&lt;p&gt;NOTE: when upgrading to 1.4.0 tags for already-seen events are not automatically calculated (for large databases, this
could make migrating very annoying). You can either wait a while (the tags for as of yet unseen events will be added)
or run the &lt;code&gt;init_tags&lt;/code&gt; command to determine the tags for the already-existing issues and events.&lt;/p&gt;
&lt;h3&gt;Further Features &amp;amp; Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Postgres: experimental support: our testsuite now runs against postgres, and configuring the Docker image to run with
  a postgres backend is possible. No further testing has been done, but this at least makes such experiments possible.
  See #21&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Createsuperuser pre-start: don't do that when &lt;em&gt;any&lt;/em&gt; users exist in the DB (Fixes #54)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Show remaining (in db, AKA 'available') number of events in the issue-list (when some events have been evicted from
  the DB, the issue list shows the &lt;em&gt;actually availale&lt;/em&gt; number of events in a smaller font next to the total seen number.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Details page: be robust for top-level message-as-string (Fixes #55)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add 'level' to logentry event details&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Issue.calculated_* fields: fix lengths (fixes an issue on MySQL)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/bugsink/bugsink/releases/tag/1.4.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/bugsink/bugsink/releases/tag/1.4.1</id>
    <title>New release for Bugsink: 1.4.1</title>
    <updated>2025-03-17T11:04:20-04:00</updated>
    <author>
      <name>bugsink/bugsink</name>
    </author>
    <content>&lt;h2&gt;1.4.1 (17 March 2025)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Bugfixes on the experimental postgres support, see #21, #61&lt;/li&gt;
&lt;li&gt;sqlite: per-query timeout configurable&lt;/li&gt;
&lt;li&gt;Make &lt;code&gt;EMAIL_TIMEOUT&lt;/code&gt; configurable on Docker, fixes #60&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/bugsink/bugsink/releases/tag/1.4.1" rel="alternate"/>
  </entry>
</feed>
