<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://selfh.st/apps</id>
  <title>Logto Releases</title>
  <updated>2025-02-21T07:33:03.139308-05:00</updated>
  <author>
    <name>selfh.st</name>
    <email>contact@selfh.st</email>
  </author>
  <link href="https://selfh.st/apps" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <subtitle>Self-hosted software releases generated by selfh.st</subtitle>
  <entry>
    <id>https://github.com/logto-io/logto/releases/tag/v1.22.0</id>
    <title>New release for Logto: v1.22.0</title>
    <updated>2024-11-22T04:34:00-05:00</updated>
    <author>
      <name>logto-io/logto</name>
    </author>
    <content>&lt;p&gt;&lt;img alt="Cover-changelog 2024 11" src="https://github.com/user-attachments/assets/7f810eb3-28ba-4976-b36e-d5ae9c67854e" /&gt;&lt;/p&gt;
&lt;h2&gt;Account API&lt;/h2&gt;
&lt;p&gt;The new Account API is now available, giving end users direct API access without needing to go through the Management API. With this new API:
- Users can directly manage their profiles, including basic information, password, email, and phone
- Admins have full control over access settings for each field
- Integration is simple with &lt;code&gt;client.getAccessToken()&lt;/code&gt; for authorization
- Social identities management is supported out of the box&lt;/p&gt;
&lt;p&gt;Check out the &lt;a href="https://docs.logto.io/docs/recipes/interact-with-account-api/"&gt;Interact with Account API&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h2&gt;Microsoft EntraID SSO connector enhancement&lt;/h2&gt;
&lt;p&gt;Added &lt;code&gt;trustUnverifiedEmail&lt;/code&gt; setting for Microsoft EntraID OIDC SSO connector.&lt;/p&gt;
&lt;p&gt;This addresses a common issue where email addresses from EntraID weren't being synced to Logto because they lacked explicit verification.&lt;/p&gt;
&lt;p&gt;Organizations can now choose to trust these email addresses, enabling smoother user onboarding through EntraID SSO.&lt;/p&gt;
&lt;p&gt;You can configure this setting in the &lt;strong&gt;EntraID OIDC SSO connector&lt;/strong&gt; settings page in the Logto console or through the management API.&lt;/p&gt;
&lt;h2&gt;Sign-in experience improvements&lt;/h2&gt;
&lt;h3&gt;Support contact information&lt;/h3&gt;
&lt;p&gt;Added support email and website information display on error pages.&lt;/p&gt;
&lt;p&gt;When users encounter issues (like 404 errors or social callback failures), they can now easily find ways to contact support for assistance.&lt;/p&gt;
&lt;p&gt;You may configure the support email and website info in the &lt;strong&gt;Sign-in experience &amp;gt; Content &amp;gt; Support&lt;/strong&gt; settings in the Logto Console or through the management API.&lt;/p&gt;
&lt;h3&gt;Unknown session handling&lt;/h3&gt;
&lt;p&gt;Introduced unknown session redirect URL configuration.
This helps users who land on sign-in pages with expired sessions or through bookmarked URLs - instead of seeing a 404 error, they can be automatically redirected to a specified URL to restart their authentication process.&lt;/p&gt;
&lt;p&gt;You may configure the unknown session redirect URL in the &lt;strong&gt;Sign-in experience &amp;gt; Sign-up and sign-in &amp;gt; Advanced options&lt;/strong&gt; settings in the Logto Console or through the management API.&lt;/p&gt;</content>
    <link href="https://github.com/logto-io/logto/releases/tag/v1.22.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/logto-io/logto/releases/tag/v1.23.0</id>
    <title>New release for Logto: v1.23.0</title>
    <updated>2025-01-02T01:57:53-05:00</updated>
    <author>
      <name>logto-io/logto</name>
    </author>
    <content>&lt;p&gt;&lt;img alt="logto-changelog-2025-01" src="https://github.com/user-attachments/assets/b35196c7-3a33-4e22-bcbb-543a195201f6" /&gt;&lt;/p&gt;
&lt;h2&gt;Customizable MFA prompt policy&lt;/h2&gt;
&lt;p&gt;You can now customize the MFA prompt policy in the Console.&lt;/p&gt;
&lt;p&gt;First, choose if you want to enable &lt;strong&gt;Require MFA&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Enable&lt;/strong&gt;: Users will be prompted to set up MFA during the sign-in process, which cannot be skipped. If the user fails to set up MFA or deletes their MFA settings, they will be locked out of their account until they set up MFA again.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Disable&lt;/strong&gt;: Users can skip the MFA setup process during the sign-up or sign-in flow.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you choose to &lt;strong&gt;Disable&lt;/strong&gt;, you can continue to choose the MFA setup prompt:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Do not ask users to set up MFA.&lt;/li&gt;
&lt;li&gt;Ask users to set up MFA during registration (skippable, one-time prompt). &lt;strong&gt;The same prompt as the previous policy (UserControlled)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Ask users to set up MFA on their next sign-in attempt after registration (skippable, one-time prompt).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Relaxed redirect URI restrictions&lt;/h2&gt;
&lt;p&gt;We have been following the industry best practices for OAuth2.0 and OIDC from the start. However, in the real world, there are things we cannot control, like third-party services or operation systems like Windows.&lt;/p&gt;
&lt;p&gt;This update relaxes restrictions on redirect URIs to allow the following:
- A mix of native and HTTP(S) redirect URIs. For example, a native app can now use a redirect URI like &lt;code&gt;https://example.com/&lt;/code&gt;.
- Native schemes without a period (&lt;code&gt;.&lt;/code&gt;). For example, &lt;code&gt;myapp://callback&lt;/code&gt; is now allowed.&lt;/p&gt;
&lt;p&gt;When such URIs are configured, Logto Console will display a prominent warning. This change is backward-compatible and will not affect existing applications.&lt;/p&gt;
&lt;p&gt;We hope this change will make it easier for you to integrate Logto with your applications.&lt;/p&gt;
&lt;h2&gt;New connectors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;3fa2b796e Added Xiaomi social connector (credit @u0x01 ).&lt;/li&gt;
&lt;li&gt;3004ae9a6 Added YunPian SMS connector (credit @u0x01 ).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Bug fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;217858950 Fixed the CLI command for fetching official connectors by updating the npm registry API integration.&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/logto-io/logto/releases/tag/v1.23.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/logto-io/logto/releases/tag/v1.23.1</id>
    <title>New release for Logto: v1.23.1</title>
    <updated>2025-01-23T03:03:14-05:00</updated>
    <author>
      <name>logto-io/logto</name>
    </author>
    <content>&lt;h2&gt;Support custom endpoint and addressing style for S3&lt;/h2&gt;
&lt;p&gt;Add support for configurable S3 endpoint and addressing style (path-style/virtual-hosted)
to improve compatibility with S3-compatible storage services.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add forcePathStyle option to control URL addressing style&lt;/li&gt;
&lt;li&gt;Fix custom endpoint support implementation&lt;/li&gt;
&lt;li&gt;Improve URL generation logic for different configurations&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Bug fixes&lt;/h2&gt;
&lt;h3&gt;Fix the broken image on Logto console sign-in page&lt;/h3&gt;
&lt;p&gt;Remove the image element's &lt;code&gt;cross-origin="anonymous"&lt;/code&gt; attribute.&lt;/p&gt;
&lt;p&gt;Some public image resources may not have the proper cross-origin headers configured, those images may fail to load when the &lt;code&gt;cross-origin="anonymous" attribute is present.&lt;/code&gt;
Since sign-in page image elements are only used for display purposes, Logto does not need to access the image data, so the &lt;code&gt;cross-origin="anonymous"&lt;/code&gt; attribute is not necessary.To make the image elements more compatible with public image resources, remove the attribute from the image elements.&lt;/p&gt;</content>
    <link href="https://github.com/logto-io/logto/releases/tag/v1.23.1" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/logto-io/logto/releases/tag/v1.24.0</id>
    <title>New release for Logto: v1.24.0</title>
    <updated>2025-02-07T02:18:44-05:00</updated>
    <author>
      <name>logto-io/logto</name>
    </author>
    <content>&lt;p&gt;&lt;img alt="logto-changelog-2025-02" src="https://github.com/user-attachments/assets/9b88d729-b8f9-49d5-8af4-7c33771518be" /&gt;&lt;/p&gt;
&lt;h2&gt;Support SAML applications&lt;/h2&gt;
&lt;p&gt;Logto now supports acting as a SAML identity provider (IdP), enabling enterprise users to achieve secure Single Sign-On (SSO) through the standardized SAML protocol. Key features include:
&lt;img alt="saml-app-demo" src="https://github.com/user-attachments/assets/ed134fc2-979c-47c8-99f8-c766698964c9" /&gt;
- Full support for SAML 2.0 protocol
- Flexible attribute mapping configuration
- Metadata auto-configuration support
- Enterprise-grade encryption and signing&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.logto.io/integrate-logto/saml-app"&gt;View full documentation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h2&gt;Add HTTP email connector&lt;/h2&gt;
&lt;p&gt;Users can now use HTTP email connector for sending emails.
The HTTP email connector allows you to send emails via HTTP call. To use the HTTP email connector, you'll need to have your own email service that expose an HTTP API for sending emails. Logto will call this API when it needs to send an email. For example, when a user registers, Logto will call the HTTP API to send a verification email.&lt;/p&gt;
&lt;h2&gt;Bug fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;62eb8ed Fixed the issue where the CLI could not correctly initialize the Logto instance or deploy database alterations.&lt;/li&gt;
&lt;li&gt;bf2d300 Fixed the bug that a user accepts an invitation and join an organization does not trigger the &lt;code&gt;Organization.Membership.Updated&lt;/code&gt; webhook.&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/logto-io/logto/releases/tag/v1.24.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/logto-io/logto/releases/tag/v1.24.1</id>
    <title>New release for Logto: v1.24.1</title>
    <updated>2025-02-21T02:50:20-05:00</updated>
    <author>
      <name>logto-io/logto</name>
    </author>
    <content>&lt;h2&gt;New connectors:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;X (Twitter) social connector&lt;/li&gt;
&lt;li&gt;Slack social connector&lt;/li&gt;
&lt;li&gt;LinkedIn social connector&lt;/li&gt;
&lt;li&gt;Line social connector&lt;/li&gt;
&lt;li&gt;Amazon social connector&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Bug fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/logto-io/logto/commit/cb261024b6d8ce1a708d2359d8843aa052aaff01: fix cli add offical connectors command missing connectors bug
  Fix the bug when running the cli commend logto connectors add --official, only 8 connectors are fetched from npm registry.
  This fix update logic to query additional pages of results when fetching connectors from the npm registry.&lt;/li&gt;
&lt;li&gt;https://github.com/logto-io/logto/commit/0b785ee0d8e1156607f5185c51e9a21fbae76a4d: display JWKS URI on application details page&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;https://github.com/logto-io/logto/commit/e7accfdab9c646dfe60dd0728c9566823fe18188: prevent i18n context contamination by using request-scoped instances
  This bug fix resolves a concurrency issue in i18n handling by moving from a global i18next instance to request-scoped instances.&lt;/p&gt;
&lt;h3&gt;Problem&lt;/h3&gt;
&lt;p&gt;When handling concurrent requests:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The shared global &lt;code&gt;i18next&lt;/code&gt; instance's language was being modified via &lt;code&gt;changeLanguage()&lt;/code&gt; calls.&lt;/li&gt;
&lt;li&gt;This could lead to race conditions where requests might receive translations in unexpected languages.&lt;/li&gt;
&lt;li&gt;Particularly problematic in multi-tenant environments with different language requirements.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Updated &lt;code&gt;koaI18next&lt;/code&gt; middleware to create a cloned i18next instance for each request.&lt;/li&gt;
&lt;li&gt;Attach the request-scoped instance to Koa context (&lt;code&gt;ctx.i18n&lt;/code&gt;) All subsequent middleware and handlers should now use &lt;code&gt;ctx.i18n&lt;/code&gt; instead of the global &lt;code&gt;i18next&lt;/code&gt; instance.&lt;/li&gt;
&lt;li&gt;Maintains the global instance for initialization while preventing cross-request contamination&lt;/li&gt;
&lt;li&gt;a5990ec57: fixes an incorrect condition check in the verification code flow where &lt;code&gt;isNewIdentifier&lt;/code&gt; was using inverted logic for email and phone comparisons.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Corrected &lt;code&gt;isNewIdentifier&lt;/code&gt; boolean logic to use &lt;code&gt;identifier.value !== user.primaryEmail&lt;/code&gt; for email checks&lt;/li&gt;
&lt;li&gt;Fixed phone number comparison to properly use &lt;code&gt;identifier.value !== user.primaryPhone&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;This fixes a regression where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Verification codes for existing emails/phones were incorrectly using the&lt;code&gt;BindNewIdentifier&lt;/code&gt; template&lt;/li&gt;
&lt;li&gt;New identifiers were mistakenly getting the &lt;code&gt;UserPermissionValidation&lt;/code&gt; template&lt;/li&gt;
&lt;li&gt;Affected both email and phone verification flows&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;28643c1f1: fix the email/phone identifier conflict handling logic during user registration.&lt;/p&gt;
&lt;p&gt;When a user attempts to register with an email/phone that already exists:&lt;/p&gt;
&lt;h3&gt;Previous Behavior&lt;/h3&gt;
&lt;p&gt;"Sign in instead" modal will be shown when:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The email/phone identifier has been verified through a verification code validation&lt;/li&gt;
&lt;li&gt;Identifier type (email/phone) was enabled in sign-in methods&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This caused an issue when:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Only password authentication method was enabled in the sign-in method settings.&lt;/li&gt;
&lt;li&gt;When users clicked "Sign in instead" action button, the API call will throw an sign-in method not enabled error. Which is confusing for the user.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Expected behavior: Show the "Email/phone already exists" error modal directly. If only password authentication is enabled. User should not be able to sign in with email/phone directly.&lt;/p&gt;
&lt;h3&gt;Fixed Behavior&lt;/h3&gt;
&lt;p&gt;Shows the "Sign in instead" modal if:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The email/phone identifier type is enabled in the sign-in method settings and the verification code is enabled for the identifier.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Otherwise, shows the "Email/phone already exists" error modal directly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;bd18da4cf: properly filter WeChat connectors by platform (Web | Native) in SSR sign-in experience settings&lt;/p&gt;
&lt;p&gt;Previously, platform-based social connector filtering was applied during the sign-in experience settings fetch process but not in the SSR sign-in experience data. As a result, platform-specific connectors were not correctly filtered when rendering the page using SSR data.&lt;/p&gt;
&lt;p&gt;This update ensures that the same filtering logic is applied to SSR sign-in experience data, resolving the issue.&lt;/p&gt;
&lt;p&gt;Affected connectors: WeChat Web and WeChat Native.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/logto-io/logto/releases/tag/v1.24.1" rel="alternate"/>
  </entry>
</feed>
