<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://selfh.st/apps</id>
  <title>Logto Releases</title>
  <updated>2024-12-14T07:32:50.825550-05:00</updated>
  <author>
    <name>selfh.st</name>
    <email>contact@selfh.st</email>
  </author>
  <link href="https://selfh.st/apps" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <subtitle>Self-hosted software releases generated by selfh.st</subtitle>
  <entry>
    <id>https://github.com/logto-io/logto/releases/tag/v1.18.0</id>
    <title>New release for Logto: v1.18.0</title>
    <updated>2024-07-05T23:01:13-04:00</updated>
    <author>
      <name>logto-io/logto</name>
    </author>
    <content>&lt;p align="center"&gt;
&lt;img src="https://github.com/logto-io/logto/assets/14722250/598da75f-6cfb-456f-be22-b6fce1411391" alt="Cover" width="800" /&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[!Note]
Our &lt;a href="https://logto.productlane.com/roadmap"&gt;public roadmap&lt;/a&gt; has come back. Upvote the features you need and feel free to leave comments!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Compliance&lt;/h2&gt;
&lt;p&gt;We are SOC 2 Type I compliant, officially! ðŸŽ‰ A Type II audit is on the horizon.&lt;/p&gt;
&lt;p&gt;&lt;img alt="SOC 2 Type I" src="https://github.com/logto-io/logto/assets/14722250/db4a796f-7a85-43f1-bd55-99c84ca5064c" /&gt;&lt;/p&gt;
&lt;h2&gt;Just-in-Time provisioning for organizations&lt;/h2&gt;
&lt;p&gt;This feature allows users to automatically join the organization and be assigned roles upon their first sign-in through some authentication methods. You can set requirements to meet for Just-in-Time provisioning.&lt;/p&gt;
&lt;p&gt;To use this feature, head to the organization settings and find the "Just-in-Time provisioning" section. Management APIs are also available to configure this feature via routes under &lt;code&gt;/api/organizations/{id}/jit&lt;/code&gt;. To learn more, see &lt;a href="https://docs.logto.io/docs/recipes/organizations/just-in-time-provisioning/"&gt;Just-in-Time provisioning&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Organization Just-in-Time provisioning" src="https://github.com/logto-io/logto/assets/14722250/d4c68349-3ef8-4324-b2a1-e5d56822ae17" /&gt;&lt;/p&gt;
&lt;h3&gt;Email domains&lt;/h3&gt;
&lt;p&gt;New users will automatically join organizations with Just-in-Time provisioning if they:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sign up with verified email addresses, or;&lt;/li&gt;
&lt;li&gt;Use social sign-in with verified email addresses.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This applies to organizations that have the same email domain configured.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Click to expand&lt;/summary&gt;

To enable this feature, you can add email domain via the Management API or the Logto Console:

- We added the following new endpoints to the Management API:
  - `GET /organizations/{organizationId}/jit/email-domains`
  - `POST /organizations/{organizationId}/jit/email-domains`
  - `PUT /organizations/{organizationId}/jit/email-domains`
  - `DELETE /organizations/{organizationId}/jit/email-domains/{emailDomain}`
- In the Logto Console, you can manage email domains in the organization details page -&gt; "Just-in-Time provisioning" section.

&lt;/details&gt;

&lt;h3&gt;SSO connectors&lt;/h3&gt;
&lt;p&gt;New or existing users signing in through enterprise SSO for the first time will automatically join organizations that have Just-in-Time provisioning configured for the SSO connector.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Click to expand&lt;/summary&gt;

To enable this feature, you can add SSO connectors via the Management API or the Logto Console:

- We added the following new endpoints to the Management API:
  - `GET /organizations/{organizationId}/jit/sso-connectors`
  - `POST /organizations/{organizationId}/jit/sso-connectors`
  - `PUT /organizations/{organizationId}/jit/sso-connectors`
  - `DELETE /organizations/{organizationId}/jit/sso-connectors/{ssoConnectorId}`
- In the Logto Console, you can manage SSO connectors in the organization details page -&gt; "Just-in-Time provisioning" section.

&lt;/details&gt;

&lt;h3&gt;Default organization roles&lt;/h3&gt;
&lt;p&gt;You can also configure the default roles for users provisioned via this feature. The default roles will be assigned to the user when they are provisioned.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Click to expand&lt;/summary&gt;

To enable this feature, you can set the default roles via the Management API or the Logto Console:

- We added the following new endpoints to the Management API:
  - `GET /organizations/{organizationId}/jit/roles`
  - `POST /organizations/{organizationId}/jit/roles`
  - `PUT /organizations/{organizationId}/jit/roles`
  - `DELETE /organizations/{organizationId}/jit/roles/{organizationRoleId}`
- In the Logto Console, you can manage default roles in the organization details page -&gt; "Just-in-Time provisioning" section.

&lt;/details&gt;

&lt;h2&gt;Machine-to-machine apps for organizations&lt;/h2&gt;
&lt;p&gt;This feature allows machine-to-machine apps to be associated with organizations, and be assigned with organization roles.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;OpenID Connect grant&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;client_credentials&lt;/code&gt; grant type is now supported for organizations. You can use this grant type to obtain an access token for an organization.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Click to expand Console updates&lt;/summary&gt;

- Add a new "machine-to-machine" type to organization roles. All existing roles are now "user" type.
- You can manage machine-to-machine apps in the organization details page -&gt; Machine-to-machine apps section.
- You can view the associated organizations in the machine-to-machine app details page.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Click to expand Management API updates&lt;/summary&gt;

A set of new endpoints are added to the Management API:

- `/api/organizations/{id}/applications` to manage machine-to-machine apps.
- `/api/organizations/{id}/applications/{applicationId}` to manage a specific machine-to-machine app in an organization.
- `/api/applications/{id}/organizations` to view the associated organizations of a machine-to-machine app.

&lt;/details&gt;

&lt;h2&gt;Swagger (OpenAPI) improvements&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;[!Note]
Shout out to @mostafa for bringing these amazing improvements to Logto!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Build &lt;code&gt;operationId&lt;/code&gt; for Management API in OpenAPI response&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As per &lt;a href="https://swagger.io/docs/specification/paths-and-operations/"&gt;the specification&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;operationId&lt;/code&gt; is an optional unique string used to identify an operation. If provided, these IDs must be unique among all operations described in your API.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This greatly simplifies the creation of client SDKs in different languages, because it generates more meaningful function names instead of auto-generated ones, like the following examples:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;diff
- org, _, err := s.Client.OrganizationsAPI.ApiOrganizationsIdGet(ctx, req.GetId()).Execute()
+ org, _, err := s.Client.OrganizationsAPI.GetOrganization(ctx, req.GetId()).Execute()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;diff
- users, _, err := s.Client.OrganizationsAPI.ApiOrganizationsIdUsersGet(ctx, req.GetId()).Execute()
+ users, _, err := s.Client.OrganizationsAPI.ListOrganizationUsers(ctx, req.GetId()).Execute()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fixed OpenAPI schema returned by the &lt;code&gt;GET /api/swagger.json&lt;/code&gt; endpoint&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;:&lt;/code&gt; character is invalid in parameter names, such as &lt;code&gt;organizationId:root&lt;/code&gt;. These characters have been replaced with &lt;code&gt;-&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;tenantId&lt;/code&gt; parameter of the &lt;code&gt;/api/.well-known/endpoints/{tenantId}&lt;/code&gt; route was missing from the generated OpenAPI spec document, resulting in validation errors. This has been fixed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Backchannel logout support&lt;/h2&gt;
&lt;p&gt;We've enabled the support of &lt;a href="https://openid.net/specs/openid-connect-backchannel-1_0.html"&gt;OpenID Connect Back-Channel Logout 1.0&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To register for backchannel logout, navigate to the application details page in the Logto Console and locate the "Backchannel logout" section. Enter the backchannel logout URL of your RP and click "Save".&lt;/p&gt;
&lt;p&gt;You can also enable session requirements for backchannel logout. When enabled, Logto will include the &lt;code&gt;sid&lt;/code&gt; claim in the logout token.&lt;/p&gt;
&lt;p&gt;For programmatic registration, you can set the &lt;code&gt;backchannelLogoutUri&lt;/code&gt; and &lt;code&gt;backchannelLogoutSessionRequired&lt;/code&gt; properties in the application &lt;code&gt;oidcClientMetadata&lt;/code&gt; object.&lt;/p&gt;
&lt;h2&gt;Sign-in experience&lt;/h2&gt;
&lt;h3&gt;Support Google One Tap&lt;/h3&gt;
&lt;p&gt;When you added Google as a social connector, you can now enable Google One Tap to provide a smoother sign-in experience for your users with Google accounts.&lt;/p&gt;
&lt;p&gt;Head to the Google connector settings in the Logto Console and switch on the "Google One Tap" option.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Google One Tap settings" src="https://github.com/logto-io/logto/assets/14722250/f43c3edd-bb67-440e-b340-b4f98239cecc" /&gt;&lt;/p&gt;
&lt;p&gt;To learn more about Google One Tap, see &lt;a href="https://docs.logto.io/docs/recipes/configure-connectors/social-connector/enable-google-one-tap/"&gt;Enable Google One Tap&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Allow skipping manual account linking during sign-in&lt;/h3&gt;
&lt;p&gt;You can find this configuration in Console -&amp;gt; Sign-in experience -&amp;gt; Sign-up and sign-in -&amp;gt; Social sign-in -&amp;gt; Automatic account linking.&lt;/p&gt;
&lt;p&gt;When switched on, if a user signs in with a social identity that is new to the system, and there is exactly one existing account with the same identifier (e.g., email), Logto will automatically link the account with the social identity instead of prompting the user for account linking.&lt;/p&gt;
&lt;h3&gt;Agree to terms polices for sign-in experience&lt;/h3&gt;
&lt;p&gt;We've added a new configuration to allow you to set the terms of service agreement policy for sign-in experience:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Automatic&lt;/strong&gt;: Users automatically agree to terms by continuing to use the service.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ManualRegistrationOnly&lt;/strong&gt;: Users must agree to terms by checking a box during registration, and don't need to agree when signing in.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Manual&lt;/strong&gt;: Users must agree to terms by checking a box during registration or signing in.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Console improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Added Ruby and Chrome extension guide.&lt;/li&gt;
&lt;li&gt;Display OIDC issuer endpoint in the application details form.&lt;/li&gt;
&lt;li&gt;Application guides have been reorganized to provide a better developer experience.&lt;/li&gt;
&lt;li&gt;Now you can view and update user's &lt;code&gt;profile&lt;/code&gt; property in the user settings page.&lt;/li&gt;
&lt;li&gt;Improved machine-to-machine application integration user experience.&lt;/li&gt;
&lt;li&gt;Fixed a regression bug that error toasts pop up in audit log when logs are associated with deleted applications.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Other improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Added &lt;code&gt;hasPassword&lt;/code&gt; to custom JWT user context.&lt;/li&gt;
&lt;li&gt;Connector: Google and Azure AD connectors now support custom &lt;code&gt;prompt&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Support per-organization multi-factor authentication requirement:&lt;/li&gt;
&lt;li&gt;An organization can now require its member to have multi-factor authentication (MFA) configured. If an organization has this requirement and a member does not have MFA configured, the member will not be able to fetch the organization access token.&lt;/li&gt;
&lt;li&gt;A dev panel is available after you sign in to the live preview.&lt;/li&gt;
&lt;li&gt;Pagination is now optional for &lt;code&gt;GET /api/organizations/{id}/users/{userId}/roles&lt;/code&gt;. If you don't provide &lt;code&gt;page&lt;/code&gt; and &lt;code&gt;limit&lt;/code&gt; query parameters, the API will return all roles.&lt;/li&gt;
&lt;li&gt;Added user detail data payload to the &lt;code&gt;User.Deleted&lt;/code&gt; webhook event.&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/logto-io/logto/releases/tag/v1.18.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/logto-io/logto/releases/tag/v1.19.0</id>
    <title>New release for Logto: v1.19.0</title>
    <updated>2024-08-08T02:59:50-04:00</updated>
    <author>
      <name>logto-io/logto</name>
    </author>
    <content>&lt;p align="center"&gt;
&lt;img src="https://github.com/user-attachments/assets/21b5695d-4b21-4703-b4b2-71507899366c" witdh="800" /&gt;
&lt;/p&gt;

&lt;h2&gt;User impersonation (RFC 8693: OAuth 2.0 Token Exchange)&lt;/h2&gt;
&lt;p&gt;Added support for user impersonation via Token Exchange:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;New Management API endpoint &lt;code&gt;POST /subject-tokens&lt;/code&gt; to request a &lt;code&gt;subject_token&lt;/code&gt; for token exchange use.&lt;/li&gt;
&lt;li&gt;Updated the OIDC &lt;code&gt;POST /oidc/token&lt;/code&gt; endpoint with a new grant type &lt;code&gt;urn:ietf:params:oauth:grant-type:token-exchange&lt;/code&gt; to exchange a &lt;code&gt;subject_token&lt;/code&gt; for a user-impersonated &lt;code&gt;access_token&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href="https://docs.logto.io/docs/recipes/impersonation/"&gt;User impersonation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h2&gt;Application level &lt;code&gt;custom_data&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Added a new arbitrary object field &lt;code&gt;custom_data&lt;/code&gt; to applications. This field can store any additional information not defined in the standard &lt;code&gt;Application&lt;/code&gt; schema.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Click to expand Management API updates&lt;/summary&gt;

- New `PATCH /api/applications/{applicationId}/custom-data` endpoint to patch update the `custom_data` field of an application.
- Update `PATCH /api/applications/{applicationId}` endpoint to allow overwriting the `custom_data` field.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Click to expand Console updates&lt;/summary&gt;

Added a new custom data JSON editor to the application details page (except for Protected Apps).

&lt;/details&gt;

&lt;h2&gt;Multiple app secrets management&lt;/h2&gt;
&lt;p&gt;Secure apps (machine-to-machine, traditional web, Protected) can now have multiple app secrets with expiration. This allows for secret rotation and provides an even safer experience.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!Note]
The legacy secret created before this feature can still be used for client authentication. However, it is recommended to delete the old ones and create new secrets with expiration for enhanced security.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;details&gt;
&lt;summary&gt;Click to expand management API updates&lt;/summary&gt;

- `GET /api/applications/{applicationId}/secrets`: List all the secrets of an application.
- `POST /api/applications/{applicationId}/secrets`: Create a new secret for an application.
- `DELETE /api/applications/{applicationId}/secrets/{name}`: Delete a secret of an application by name.
- `PATCH /api/applications/{applicationId}/secrets/{name}`: Update a secret of an application by name.
- `DELETE /api/applications/{applicationId}/legacy-secret`: Delete the legacy secret of an application and replace it with a new one.

&lt;/details&gt;

&lt;details&gt;
&lt;summary&gt;Click to expand Console updates&lt;/summary&gt;

To manage your application secrets, go to Logto Console -&gt; Applications -&gt; Application Details -&gt; Endpoints &amp; Credentials.

The original app secret read-only input field is now replaced with a new secrets management table. You can create, update, and delete secrets in this table.

&lt;/details&gt;

&lt;h2&gt;Organization and application level branding&lt;/h2&gt;
&lt;h3&gt;Organization logo&lt;/h3&gt;
&lt;p&gt;Now it's able to set light and dark logos for organizations. You can upload the logos in the organization settings page.&lt;/p&gt;
&lt;p&gt;Also, it's possible to override the sign-in experience logo from an organization. Simply add the &lt;code&gt;organization_id&lt;/code&gt; parameter to the authentication request. In most Logto SDKs, it can be done by using the &lt;code&gt;extraParams&lt;/code&gt; field in the &lt;code&gt;signIn&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;For example, in the JavaScript SDK:&lt;/p&gt;
&lt;p&gt;```js
import LogtoClient from '@logto/client';&lt;/p&gt;
&lt;p&gt;const logtoClient = new LogtoClient(/&lt;em&gt; your configuration &lt;/em&gt;/);&lt;/p&gt;
&lt;p&gt;logtoClient.signIn({
  redirectUri: 'https://your-app.com/callback',
  extraParams: {
    organization_id: '&lt;organization-id&gt;',
  },
});
```&lt;/p&gt;
&lt;p&gt;The value &lt;code&gt;&amp;lt;organization-id&amp;gt;&lt;/code&gt; can be found in the organization settings page.&lt;/p&gt;
&lt;p&gt;If you could not find the &lt;code&gt;extraParams&lt;/code&gt; field in the SDK you are using, please let us know.&lt;/p&gt;
&lt;h3&gt;Application level branding&lt;/h3&gt;
&lt;p&gt;You can now set logos, favicons, and colors for your app. These settings will be used in the sign-in experience when the app initiates the authentication flow. For apps that have no branding settings, the omni sign-in experience branding will be used.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;organization_id&lt;/code&gt; is provided in the authentication request, the app-level branding settings will be overridden by the organization's branding settings, if available.&lt;/p&gt;
&lt;h2&gt;Performance improvements&lt;/h2&gt;
&lt;h3&gt;Support experience app server-side rendering&lt;/h3&gt;
&lt;p&gt;Logto now injects the sign-in experience settings and phrases into the &lt;code&gt;index.html&lt;/code&gt; file for better first-screen performance. The experience app will still fetch the settings and phrases from the server if:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The server didn't inject the settings and phrases.&lt;/li&gt;
&lt;li&gt;The parameters in the URL are different from server-rendered data.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Package build improvements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;tsup&lt;/code&gt; to build the connector packages. This will make the build process faster, and should not affect the functionality of the packages.&lt;/li&gt;
&lt;li&gt;User &lt;code&gt;Vite&lt;/code&gt; for transpilation and bundling of the &lt;code&gt;@logto/console&lt;/code&gt;, &lt;code&gt;@logto/demo-app&lt;/code&gt;, and &lt;code&gt;@logto/experience&lt;/code&gt; packages. Removed ParcelJS and replaced with Vite. No breaking changes should be expected.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Bug fixes&lt;/h2&gt;
&lt;h3&gt;Fix the jsonb update behavior of the &lt;code&gt;PATCH /api/applications/{applicationId}&lt;/code&gt; endpoint&lt;/h3&gt;
&lt;p&gt;All the jsonb fields of the &lt;code&gt;Application&lt;/code&gt; object should be updated in the &lt;code&gt;replace&lt;/code&gt; mode instead of the &lt;code&gt;merge&lt;/code&gt; mode. This change will make the &lt;code&gt;PATCH&lt;/code&gt; method more predictable and consistent with the Restful API design.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Update the jsonb field update mode from &lt;code&gt;merge&lt;/code&gt; to &lt;code&gt;replace&lt;/code&gt; in the &lt;code&gt;PATCH /api/applications/{applicationId}&lt;/code&gt; endpoint.&lt;/li&gt;
&lt;li&gt;Update the API jsonb field input parameters validation from &lt;code&gt;partial&lt;/code&gt; to &lt;code&gt;full&lt;/code&gt; in the &lt;code&gt;PATCH /api/applications/{applicationId}&lt;/code&gt; endpoint.&lt;/li&gt;
&lt;li&gt;Affected fields: &lt;code&gt;oidc_client_metadata&lt;/code&gt;, &lt;code&gt;custom_client_metadata&lt;/code&gt;, &lt;code&gt;protected_app_metadata&lt;/code&gt; and &lt;code&gt;custom_data&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;[!Note]
If you are using Logto console to update the &lt;code&gt;Application&lt;/code&gt; settings, you should not be affected by this change. API users who are using the &lt;code&gt;PATCH&lt;/code&gt; method to update the &lt;code&gt;Application&lt;/code&gt; jsonb field settings should be aware of this change. The &lt;code&gt;PATCH&lt;/code&gt; method will now replace the whole jsonb field with the new input data. Any partial input data of the affected fields will be rejected.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Fix some of the webhooks event payload always return API response status 404 bug&lt;/h3&gt;
&lt;p&gt;Affected webhook events: &lt;code&gt;Role.Scopes.Updated&lt;/code&gt;, &lt;code&gt;Organizations.Membership.Updates&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The API response status code returned from the webhook event payload was always 404. That was caused by inserting the webhook event payload before the API response context was set.&lt;/p&gt;
&lt;p&gt;Since we only trigger the webhook when the event is successfully processed, the status code should always be 2xx.&lt;/p&gt;
&lt;p&gt;This issue have been fixed by moving the webhook event payload insertion after the API response context is set.&lt;/p&gt;
&lt;h2&gt;Other improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The favicon for the dark theme now can be set in the sign-in experience branding settings.&lt;/li&gt;
&lt;li&gt;Add new password digest algorithms: &lt;code&gt;Argon2d&lt;/code&gt; and &lt;code&gt;Argon2id&lt;/code&gt;. Users with those algorithms will be migrated to &lt;code&gt;Argon2i&lt;/code&gt; upon successful sign-in.&lt;/li&gt;
&lt;li&gt;The browser list configuration for &lt;code&gt;@logto/experience&lt;/code&gt; has been synced with what is stated in &lt;code&gt;README.md&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Improve swagger auth description. Use the native OpenAPI OAuth2 security scheme instead of the custom HTTP header-based security schema.&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/logto-io/logto/releases/tag/v1.19.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/logto-io/logto/releases/tag/v1.20.0</id>
    <title>New release for Logto: v1.20.0</title>
    <updated>2024-09-13T22:20:32-04:00</updated>
    <author>
      <name>logto-io/logto</name>
    </author>
    <content>&lt;p align="center"&gt;
&lt;img src="https://github.com/user-attachments/assets/edb07a08-6ae7-4bde-8856-896a62a9f27c" alt="September release" /&gt;
&lt;/p&gt;

&lt;h2&gt;Arabic translation and RTL support&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h1&gt;6422 Added new Arabic language translation to both Console and Experience UI (credit @zaaakher).&lt;/h1&gt;
&lt;/li&gt;
&lt;li&gt;Improved UI layout and details to better support RTL languages.
&lt;img width="1386" alt="image" src="https://github.com/user-attachments/assets/31cef491-e3b4-44b0-9276-379384a7f3e2"&gt;
&lt;img width="1482" alt="image" src="https://github.com/user-attachments/assets/86ede193-bdec-4788-8c6c-ea1813abb9ee"&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Personal access token (PAT)&lt;/h2&gt;
&lt;p&gt;Personal access tokens (PATs) provide a secure way for users to grant access tokens without using their credentials and interactive sign-in.&lt;/p&gt;
&lt;p&gt;You can create a PAT by going to the user's detail page in Console or using the Management API &lt;code&gt;POST /users/:userId/personal-access-tokens&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Refer to &lt;a href="https://docs.logto.io/docs/recipes/manage-users/personal-access-token/"&gt;documentation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h2&gt;Support additional first-screen options&lt;/h2&gt;
&lt;p&gt;In addition to &lt;code&gt;sign-in&lt;/code&gt; and &lt;code&gt;register&lt;/code&gt;, we now enabled more options that allowing developers to customize the initial screen presented to users. These new first-screen options are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;identifier:sign_in&lt;/code&gt;: Only display specific identifier-based sign-in methods to users.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;identifier:register&lt;/code&gt;: Only display specific identifier-based registration methods to users.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reset_password&lt;/code&gt;: Allow users to directly access the password reset page.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;single_sign_on&lt;/code&gt;: Allow users to directly access the single sign-on (SSO) page.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Refer to &lt;a href="https://docs.logto.io/docs/references/openid-connect/authentication-parameters/#first-screen"&gt;documentation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h2&gt;New connectors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h1&gt;6227 Added Kook connector (credit @Misaka-L).&lt;/h1&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h1&gt;6514 Added Patreon connector (credit @devtekve).&lt;/h1&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h1&gt;6529 Added GitLab connector (credit @devtekve).&lt;/h1&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h1&gt;6400 Supported &lt;code&gt;login_hint&lt;/code&gt; as additional sign-in parameter.&lt;/h1&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h1&gt;6445 Implemented well-known swagger endpoints.&lt;/h1&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h1&gt;6451 Split &lt;code&gt;translate&lt;/code&gt; command from &lt;code&gt;@logto/cli&lt;/code&gt; to make the CLI small and simple.&lt;/h1&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h1&gt;6451 Added a dedicated &lt;code&gt;@logto/translate&lt;/code&gt; package to translate i18n phrases in Console and Experience.&lt;/h1&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h1&gt;6523 Supported entering name while creating a user in Console.&lt;/h1&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h1&gt;6525 Added new query parameter &lt;code&gt;parse_error&lt;/code&gt; and explicitly set it to &lt;code&gt;false&lt;/code&gt; to return raw OIDC error message only.&lt;/h1&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h1&gt;6532 Added &lt;code&gt;denyAccess()&lt;/code&gt; api to custom JWT context in order to conditionally block user token request.&lt;/h1&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h1&gt;6534 Supported nested attribute profile mapping in OAuth connector (credit @devtekve).&lt;/h1&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h1&gt;6543 Added &lt;code&gt;hasPassword&lt;/code&gt; property to &lt;code&gt;/users&lt;/code&gt; Management API response.&lt;/h1&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h1&gt;6544 Added user password information in user details. Admin can easily check if a user has set password or not, and can then perform set/reset action accordingly.&lt;/h1&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h1&gt;6567 Added new management API to check password against current password policy settings.&lt;/h1&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h1&gt;6425 Prevented potential error caused by cached identifiers across Experience pages.&lt;/h1&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h1&gt;6441 Fixed the issue that blocked users from creating Custom JWT.&lt;/h1&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h1&gt;6481 Fixed wecom connector platform. Use &lt;code&gt;Universal&lt;/code&gt; instead of &lt;code&gt;null&lt;/code&gt;.&lt;/h1&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h1&gt;6536 Set &lt;code&gt;lang&lt;/code&gt; attribute correctly to &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; in Console, preventing unexpected browser translator prompt.&lt;/h1&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h1&gt;6560 Allowed linking new social identity to an existing user account when registration is disabled.&lt;/h1&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h1&gt;6576 Prevented user registration and profile fulfillment with SSO-only email domains.&lt;/h1&gt;
&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/logto-io/logto/releases/tag/v1.20.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/logto-io/logto/releases/tag/v1.21.0</id>
    <title>New release for Logto: v1.21.0</title>
    <updated>2024-10-28T00:48:54-04:00</updated>
    <author>
      <name>logto-io/logto</name>
    </author>
    <content>&lt;p&gt;&lt;img alt="image" src="https://github.com/user-attachments/assets/7d961d02-e7de-484d-b0d1-59f4f9c72dbb" /&gt;&lt;/p&gt;
&lt;h2&gt;GatewayAPI SMS connector&lt;/h2&gt;
&lt;p&gt;You can now send SMS messages via GatewayAPI.&lt;/p&gt;
&lt;h2&gt;Australia region&lt;/h2&gt;
&lt;p&gt;The Australia region is now available in Logto Cloud.&lt;/p&gt;
&lt;h2&gt;Improvements and fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h1&gt;6734 update Google Connector default &lt;code&gt;prompts&lt;/code&gt; to be &lt;code&gt;select_account&lt;/code&gt;&lt;/h1&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h1&gt;6630 fix an issue that prevent mp4 video from playing in custom sign-in pages on Safari browser&lt;/h1&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h1&gt;6674 add environment variable to override default database connection timeout&lt;/h1&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;New Contributors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;@michaelgiraldo made their first contribution in https://github.com/logto-io/logto/pull/6615&lt;/li&gt;
&lt;li&gt;@bpow made their first contribution in https://github.com/logto-io/logto/pull/6328&lt;/li&gt;
&lt;li&gt;@GeisonPiegas made their first contribution in https://github.com/logto-io/logto/pull/6642&lt;/li&gt;
&lt;li&gt;@buchen made their first contribution in https://github.com/logto-io/logto/pull/6655&lt;/li&gt;
&lt;li&gt;@luis815 made their first contribution in https://github.com/logto-io/logto/pull/6674&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Coming Soon: Account API&lt;/h2&gt;
&lt;p&gt;The new Account API is on its way, designed to give end users direct API access without needing to go through the Management API. Hereâ€™s a sneak peek of what you can expect:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Direct access: The Account API empowers end users to directly access and manage their own account profile without requiring the relay of Management API.&lt;/li&gt;
&lt;li&gt;User profile and identities management: Users can fully manage their profiles and security settings, including the ability to update identity information like email, phone, and password, as well as manage social link connections. May also support MFA and SSO in the future.&lt;/li&gt;
&lt;li&gt;Global access control: Admin will have full, global control over access settings, can customize each fields.&lt;/li&gt;
&lt;li&gt;Seamless authorization: Authorizing is easier than ever! Simply use &lt;code&gt;client.getAccessToken()&lt;/code&gt; to obtain an access token and attach it to the Authorization header.&lt;/li&gt;
&lt;/ol&gt;</content>
    <link href="https://github.com/logto-io/logto/releases/tag/v1.21.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/logto-io/logto/releases/tag/v1.22.0</id>
    <title>New release for Logto: v1.22.0</title>
    <updated>2024-11-22T04:34:00-05:00</updated>
    <author>
      <name>logto-io/logto</name>
    </author>
    <content>&lt;p&gt;&lt;img alt="Cover-changelog 2024 11" src="https://github.com/user-attachments/assets/7f810eb3-28ba-4976-b36e-d5ae9c67854e" /&gt;&lt;/p&gt;
&lt;h2&gt;Account API&lt;/h2&gt;
&lt;p&gt;The new Account API is now available, giving end users direct API access without needing to go through the Management API. With this new API:
- Users can directly manage their profiles, including basic information, password, email, and phone
- Admins have full control over access settings for each field
- Integration is simple with &lt;code&gt;client.getAccessToken()&lt;/code&gt; for authorization
- Social identities management is supported out of the box&lt;/p&gt;
&lt;p&gt;Check out the &lt;a href="https://docs.logto.io/docs/recipes/interact-with-account-api/"&gt;Interact with Account API&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h2&gt;Microsoft EntraID SSO connector enhancement&lt;/h2&gt;
&lt;p&gt;Added &lt;code&gt;trustUnverifiedEmail&lt;/code&gt; setting for Microsoft EntraID OIDC SSO connector.&lt;/p&gt;
&lt;p&gt;This addresses a common issue where email addresses from EntraID weren't being synced to Logto because they lacked explicit verification.&lt;/p&gt;
&lt;p&gt;Organizations can now choose to trust these email addresses, enabling smoother user onboarding through EntraID SSO.&lt;/p&gt;
&lt;p&gt;You can configure this setting in the &lt;strong&gt;EntraID OIDC SSO connector&lt;/strong&gt; settings page in the Logto console or through the management API.&lt;/p&gt;
&lt;h2&gt;Sign-in experience improvements&lt;/h2&gt;
&lt;h3&gt;Support contact information&lt;/h3&gt;
&lt;p&gt;Added support email and website information display on error pages.&lt;/p&gt;
&lt;p&gt;When users encounter issues (like 404 errors or social callback failures), they can now easily find ways to contact support for assistance.&lt;/p&gt;
&lt;p&gt;You may configure the support email and website info in the &lt;strong&gt;Sign-in experience &amp;gt; Content &amp;gt; Support&lt;/strong&gt; settings in the Logto Console or through the management API.&lt;/p&gt;
&lt;h3&gt;Unknown session handling&lt;/h3&gt;
&lt;p&gt;Introduced unknown session redirect URL configuration.
This helps users who land on sign-in pages with expired sessions or through bookmarked URLs - instead of seeing a 404 error, they can be automatically redirected to a specified URL to restart their authentication process.&lt;/p&gt;
&lt;p&gt;You may configure the unknown session redirect URL in the &lt;strong&gt;Sign-in experience &amp;gt; Sign-up and sign-in &amp;gt; Advanced options&lt;/strong&gt; settings in the Logto Console or through the management API.&lt;/p&gt;</content>
    <link href="https://github.com/logto-io/logto/releases/tag/v1.22.0" rel="alternate"/>
  </entry>
</feed>
