<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://selfh.st/apps</id>
  <title>Meilisearch Releases</title>
  <updated>2025-04-24T17:33:30.362426-04:00</updated>
  <author>
    <name>selfh.st</name>
    <email>contact@selfh.st</email>
  </author>
  <link href="https://selfh.st/apps" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <subtitle>Self-hosted software releases generated by selfh.st</subtitle>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.13.0</id>
    <title>New release for Meilisearch: v1.13.0 üïäÔ∏è</title>
    <updated>2025-02-17T03:29:36-05:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;p&gt;Meilisearch v1.13 stabilizes AI-powered search integration! üéâ This release also introduces two new experimental features: upgrading to new Meilisearch releases without generating a dump and making federated requests across multiple Meilisearch instances.&lt;/p&gt;
&lt;!-- The following lines should NOT be put in the PRE-release changelogs --&gt;
&lt;p&gt;üß∞ All official Meilisearch integrations (including SDKs, clients, and other tools) are compatible with this Meilisearch release. Integration deployment takes 4 to 48 hours after a new version becomes available.&lt;/p&gt;
&lt;!-- The following lines should NOT be put in the PRE-release changelogs --&gt;
&lt;p&gt;Some SDKs might not include all new features. Consult the project repository for detailed information. Is a feature you need missing from your chosen SDK? Create an issue letting us know you need it, or, for open-source karma points, open a PR implementing it (we'll love you for that ‚ù§Ô∏è).&lt;/p&gt;
&lt;h1&gt;New features and updates üî•&lt;/h1&gt;
&lt;h2&gt;AI-powered search and vector store stabilization&lt;/h2&gt;
&lt;p&gt;With v1.13, AI-powered search is available to all users by default and no longer requires manual activation.&lt;/p&gt;
&lt;h3&gt;Breaking Changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vectorStore&lt;/code&gt; is no longer an accepted value for the &lt;code&gt;/experimental-features&lt;/code&gt; route&lt;/li&gt;
&lt;li&gt;Ollama URLs must end with either &lt;code&gt;/api/embed&lt;/code&gt; or &lt;code&gt;/api/embeddings&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Modified error codes:&lt;/li&gt;
&lt;li&gt;&lt;code&gt;invalid_embedder&lt;/code&gt; has been split into &lt;code&gt;invalid_search_embedder&lt;/code&gt; and &lt;code&gt;invalid_similar_embedder&lt;/code&gt;. These codes are returned when the &lt;code&gt;embedder&lt;/code&gt; parameter of a request to &lt;code&gt;/search&lt;/code&gt;, &lt;code&gt;/multi-search&lt;/code&gt; or &lt;code&gt;/similar&lt;/code&gt; specifies a non-existing embedder or is not a string&lt;/li&gt;
&lt;li&gt;&lt;code&gt;invalid_hybrid_query&lt;/code&gt; has been renamed to &lt;code&gt;invalid_search_hybrid_query&lt;/code&gt;. It is returned when the &lt;code&gt;hybrid&lt;/code&gt; parameter contains unknown keys or is not either &lt;code&gt;null&lt;/code&gt; or an object&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Done by @dureuill in https://github.com/meilisearch/meilisearch/pull/5232 &amp;amp; https://github.com/meilisearch/meilisearch/pull/5234&lt;/p&gt;
&lt;h2&gt;Experimental feature: Dumpless upgrades&lt;/h2&gt;
&lt;p&gt;Use &lt;code&gt;--experimental-dumpless-upgrade&lt;/code&gt; after updating the Meilisearch binary to migrate to a new release:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sh
./meilisearch --experimental-dumpless-upgrade&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This faster and more efficient process does not require you to generate a dump and pass it to Meilisearch when upgrading to a new release.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!WARNING]
Meilisearch strongly recommends you generate a backup snapshot before migrating. This is an experimental feature, and failed upgrades may lead to database corruption.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Read more about it &lt;a href="https://github.com/orgs/meilisearch/discussions/804"&gt;on the dedicated product discussion&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Done by @irevoire and @dureuill in https://github.com/meilisearch/meilisearch/pull/5264&lt;/p&gt;
&lt;h2&gt;Experimental feature: Remote federated search requests&lt;/h2&gt;
&lt;p&gt;Use remote federated search requests together with the &lt;code&gt;/multi-search&lt;/code&gt; route to query multiple Meilisearch instances simultaneously. This is particularly useful when handling very large databases.&lt;/p&gt;
&lt;p&gt;First, use the &lt;code&gt;/experimental-features&lt;/code&gt; route to enable &lt;code&gt;network&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sh
curl \
  -X PATCH 'MEILISEARCH_URL/experimental-features/' \
  -H 'Content-Type: application/json'  \
  --data-binary '{
    "network": true
  }'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Next, set up your network of Meilisearch instances with a call to &lt;code&gt;PATCH /network&lt;/code&gt; configuring one &lt;code&gt;self&lt;/code&gt; and multiple &lt;code&gt;remotes&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sh
curl \
  -X PATCH 'MEILISEARCH_URL/network/' \
  -H 'Content-Type: application/json'  \
  --data-binary '{
    "remotes": {
      "ms-0": {
        "url": "http://ms-1235.example.meilisearch.io",
        "searchApiKey": "Ecd1SDDi4pqdJD6qYLxD3y7VZAEb4d9j6LJgt4d6xas"
      },
      "ms-1": {
        "url": "http://ms-4242.example.meilisearch.io",
        "searchApiKey": "hrVu-OMcjPGElK7692K7bwriBoGyHXTMvB5NmZkMKqQ"
      }
    },
    "self": "ms-0"
  }'&lt;/code&gt;
Repeat this process with every instance in your network, then add documents. Do not send the same documents to different instances.
Finally, make a &lt;code&gt;/multi-search&lt;/code&gt; query with the new &lt;code&gt;federationOptions.remote&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sh
curl \
  -X PATCH 'MEILISEARCH_URL/multi-search/' \
  -H 'Content-Type: application/json'  \
  --data-binary '{
    "federation": {},
    "queries": [
        {
            "q": "Batman returns dark",
            "indexUid": "movies",
            "federationOptions": {
                "remote": "ms-0"
            }
        },
        {
            "q": "Batman returns dark",
            "indexUid": "movies",
            "federationOptions": {
                "remote": "ms-1"
            }
        }
    ]
}'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Find more information about this feature on the &lt;a href="https://meilisearch.notion.site/API-usage-Remote-search-request-f64fae093abf409e9434c9b9c8fab6f3?pvs=74"&gt;public usage page&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Other improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Improve task auto-batching by exposing a way to limit the total size of a batch by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5223&lt;/li&gt;
&lt;li&gt;Add Prometheus metrics to measure task queue latency by @takaebato in https://github.com/meilisearch/meilisearch/pull/5178&lt;/li&gt;
&lt;li&gt;Speed up the request to list indexes by @irevoire in https://github.com/meilisearch/meilisearch/pull/5166&lt;/li&gt;
&lt;li&gt;Add support for &lt;code&gt;GITHUB_TOKEN&lt;/code&gt; authentication in installation script by @Sherlouk in https://github.com/meilisearch/meilisearch/pull/5216&lt;/li&gt;
&lt;li&gt;Expose a new &lt;code&gt;usedDatabaseSize&lt;/code&gt; field on the &lt;code&gt;/stats&lt;/code&gt; route by @ManyTheFish in https://github.com/meilisearch/meilisearch/pull/5314&lt;/li&gt;
&lt;li&gt;Expose embeddings info on the &lt;code&gt;/stats&lt;/code&gt; route by @ManyTheFish in https://github.com/meilisearch/meilisearch/pull/5341&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Fixes üêû&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Improve error message when an attribute is not filterable by @jameshiew in https://github.com/meilisearch/meilisearch/pull/5135&lt;/li&gt;
&lt;li&gt;Make sure indexing embeddings is using the right number of threads by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5322&lt;/li&gt;
&lt;li&gt;Dumpless upgrade will no longer corrupt the database in case of early stop by @irevoire in https://github.com/meilisearch/meilisearch/pull/5316&lt;/li&gt;
&lt;li&gt;Fix export/import dump that contains batches data by @irevoire in https://github.com/meilisearch/meilisearch/pull/5310&lt;/li&gt;
&lt;li&gt;Make sure indexing geo points works with PUT requests by @dureuill in https://github.com/meilisearch/meilisearch/pull/5332&lt;/li&gt;
&lt;li&gt;Add back semantic search timeout from v1.11.3 by @dureuill in https://github.com/meilisearch/meilisearch/pull/5339&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Misc&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Dependency updates&lt;/li&gt;
&lt;li&gt;Upgrade dependencies to fix the &lt;code&gt;idna&lt;/code&gt; severity issue by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5218&lt;/li&gt;
&lt;li&gt;CIs and tests&lt;/li&gt;
&lt;li&gt;Split tests into separate files by @K-Kumar-01 in https://github.com/meilisearch/meilisearch/pull/5134, https://github.com/meilisearch/meilisearch/pull/5171, https://github.com/meilisearch/meilisearch/pull/5174&lt;/li&gt;
&lt;li&gt;Remove obsolete test code by @K-Kumar-01 in https://github.com/meilisearch/meilisearch/pull/5173&lt;/li&gt;
&lt;li&gt;Fix flaky batches test by @irevoire in https://github.com/meilisearch/meilisearch/pull/5175&lt;/li&gt;
&lt;li&gt;Remove hard coded task IDs to prevent flaky tests by @mhmoudr in https://github.com/meilisearch/meilisearch/pull/5182&lt;/li&gt;
&lt;li&gt;Improve test performance of get_index.rs by @DerTimonius in https://github.com/meilisearch/meilisearch/pull/5210&lt;/li&gt;
&lt;li&gt;Other&lt;/li&gt;
&lt;li&gt;Instruct users to create custom reports on the benchboard by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5029&lt;/li&gt;
&lt;li&gt;Fix typo in a comment by @eltociear in https://github.com/meilisearch/meilisearch/pull/5184&lt;/li&gt;
&lt;li&gt;Replace hardcoded string with constants by @Gnosnay in https://github.com/meilisearch/meilisearch/pull/5169&lt;/li&gt;
&lt;li&gt;Refactor index-scheduler by @irevoire in https://github.com/meilisearch/meilisearch/pull/5199&lt;/li&gt;
&lt;li&gt;Refactor indexer by @dureuill in https://github.com/meilisearch/meilisearch/pull/5168&lt;/li&gt;
&lt;li&gt;Auto-generate OpenAPI spec by @irevoire in https://github.com/meilisearch/meilisearch/pull/4867 &amp;amp; https://github.com/meilisearch/meilisearch/pull/5231&lt;/li&gt;
&lt;li&gt;Merge bitmaps by using &lt;code&gt;Extend::extend&lt;/code&gt; by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5221&lt;/li&gt;
&lt;li&gt;Fix issue introduced by dumpless upgrade by @manojks1999 in https://github.com/meilisearch/meilisearch/pull/5284&lt;/li&gt;
&lt;li&gt;Send the OSS analytics once per day instead of once per hour by @irevoire in https://github.com/meilisearch/meilisearch/pull/5312&lt;/li&gt;
&lt;li&gt;Log more metrics around HTTP embedder requests and ANNs in arroy by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5288&lt;/li&gt;
&lt;li&gt;Fix internal error when not correctly using the &lt;code&gt;documentTemplateMaxBytes&lt;/code&gt; parameter by @dureuill in https://github.com/meilisearch/meilisearch/pull/5306&lt;/li&gt;
&lt;li&gt;When a batch is deleted it no longer keeps some internal data in the DB @Kerollmops and @irevoire in https://github.com/meilisearch/meilisearch/pull/5272&lt;/li&gt;
&lt;li&gt;Fix a rare stack overflow when using remote embedders by @Kerollmops with the help of @dureuill https://github.com/meilisearch/meilisearch/pull/5294 (from v1.12.8)&lt;/li&gt;
&lt;li&gt;Fix Dotnet tests in sdks-tests.yml by @curquiza in https://github.com/meilisearch/meilisearch/pull/5291&lt;/li&gt;
&lt;li&gt;Debug log the channel congestion by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5177&lt;/li&gt;
&lt;li&gt;Improve unexpected panic message by @irevoire in https://github.com/meilisearch/meilisearch/pull/5300&lt;/li&gt;
&lt;li&gt;Introduce a compaction subcommand in meilitool by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5235&lt;/li&gt;
&lt;li&gt;Expose a route to get the file content associated with a task by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5326&lt;/li&gt;
&lt;li&gt;Fix workload sha for the benchmark by @ManyTheFish in https://github.com/meilisearch/meilisearch/pull/5342&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;‚ù§Ô∏è Thanks again to our external contributors:
- &lt;a href="https://github.com/meilisearch/meilisearch"&gt;Meilisearch&lt;/a&gt;: @takaebato, @Sherlouk, @jameshiew, @K-Kumar-01, @mhmoudr, @eltociear, @Gnosnay, @DerTimonius, @manojks1999, @ellnix, @Guikingone, @migueltarga&lt;/p&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.13.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.13.1</id>
    <title>New release for Meilisearch: v1.13.1 üïäÔ∏è</title>
    <updated>2025-02-26T07:23:21-05:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;h2&gt;What's Changed&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Hotfix typo tolerance bug by @ManyTheFish in https://github.com/meilisearch/meilisearch/pull/5346&lt;/li&gt;
&lt;li&gt;Bump mini-dashboard to v0.2.17 by @Strift in https://github.com/meilisearch/meilisearch/pull/5367&lt;/li&gt;
&lt;li&gt;Documents database stats by @ManyTheFish in https://github.com/meilisearch/meilisearch/pull/5325&lt;/li&gt;
&lt;li&gt;Fix the dumpless upgrade log by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5360&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/meilisearch/meilisearch/compare/v1.13.0...v1.13.1&lt;/p&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.13.1" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.13.2</id>
    <title>New release for Meilisearch: v1.13.2 üïäÔ∏è</title>
    <updated>2025-02-27T07:15:53-05:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;h2&gt;What's Changed&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Support dumpless upgrade for all v1.13 patches by @dureuill in https://github.com/meilisearch/meilisearch/pull/5376&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/meilisearch/meilisearch/compare/v1.13.1...v1.13.2&lt;/p&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.13.2" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.13.3</id>
    <title>New release for Meilisearch: v1.13.3 üïäÔ∏è</title>
    <updated>2025-03-05T03:47:03-05:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;h2&gt;What's Changed&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Bump mini-dashboard v0.2.18 by @Strift in https://github.com/meilisearch/meilisearch/pull/5385&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/meilisearch/meilisearch/compare/v1.13.2...v1.13.3&lt;/p&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.13.3" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.14.0</id>
    <title>New release for Meilisearch: v1.14.0 ü¶´</title>
    <updated>2025-04-14T04:29:13-04:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;p&gt;Meilisearch v1.14 gives more granular control over which parts of filters you can disable for indexing performance optimization. This release also includes composite embedders, which can improve embedding generation during search and indexing, and a new route to retrieve multiple documents by their IDs.&lt;/p&gt;
&lt;p&gt;üß∞ All official Meilisearch integrations (including SDKs, clients, and other tools) are compatible with this Meilisearch release. Integration deployment happens between 4 to 48 hours after a new version becomes available.&lt;/p&gt;
&lt;p&gt;Some SDKs might not include all new features. Consult the project repository for detailed information. Is a feature you need missing from your chosen SDK? Create an issue letting us know you need it, or, for open-source karma points, open a PR implementing it (we'll love you for that ‚ù§Ô∏è).&lt;/p&gt;
&lt;h1&gt;New features and updates üî•&lt;/h1&gt;
&lt;h2&gt;Granular filterable attribute settings&lt;/h2&gt;
&lt;p&gt;v1.14 gives you more control over which types of filter you want to disable in your searches. This allows you to further optimize indexing speeds by letting you activate only the filter features you need.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;PATCH /indexes/INDEX_NAME/settings&lt;/code&gt; to specify which filters you want to enable for each attribute in your documents:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json
{
    "filterableAttributes": [
      {
        "attributePatterns": ["genre", "artist"],
        "features": {
          "facetSearch": true,
          "filter": {
            "equality": true,
            "comparison": false
          }
        }
      },
      {
        "attributePatterns": ["rank"],
        "features": {
          "facetSearch": false,
          "filter": {
            "equality": true,
            "comparison": true
          }
        }
      }
    ]
}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For more details about this feature, please refer to &lt;a href="https://www.meilisearch.com/docs/reference/api/settings#filterable-attribute-object"&gt;the dedicated documentation page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Done by @ManyTheFish in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5254"&gt;#5254&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Composite embedders&lt;/h2&gt;
&lt;p&gt;This feature allows using different embedders at search and indexing time. This can be useful when optimizing AI-powered search performance. For example, you may prefer to use:
- A remote embedder during indexing, as remote embedders have higher bandwidth and can generate more embeddings per second
- A local embedder when answering to search queries, as local embedders have lower latency and can respond more quickly to user input&lt;/p&gt;
&lt;p&gt;To use the feature, follow these steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Enable the &lt;code&gt;Composite embedders&lt;/code&gt; feature with the Meilisearch Cloud interface, or with the &lt;code&gt;/experimental-features&lt;/code&gt; route:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;sh
curl MEILISEARCH_URL/experimental-features \
  -H 'Content-Type: application/json'  \
  -d '{"compositeEmbedders": true}'&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Next, create an embedder, setting its &lt;code&gt;source&lt;/code&gt; to &lt;code&gt;"composite"&lt;/code&gt; and defining one &lt;code&gt;searchEmbedder&lt;/code&gt; and one &lt;code&gt;indexingEmbedder&lt;/code&gt;:
&lt;code&gt;jsonc
{
  "embedders": {
    "text": {
      "source": "composite",
      "searchEmbedder": {
        "source": "huggingFace",
        "model": "baai/bge-base-en-v1.5",
        "revision": "a5beb1e3e68b9ab74eb54cfd186867f64f240e1a"
      },
      "indexingEmbedder": {
        "source": "rest",
        "url": "https://URL.endpoints.huggingface.cloud",
        "apiKey": "hf_XXXXXXX",
        "documentTemplate": "Your {{doc.template}}",
        "request": {
          "inputs": [
            "{{text}}",
            "{{..}}"
          ]
        },
        "response": [
          "{{embedding}}",
          "{{..}}"
        ]
      }
    }
  }
}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once the composite embedder has been created, Meilisearch will use its &lt;code&gt;indexingEmbedder&lt;/code&gt; during indexing and &lt;code&gt;searchEmbedder&lt;/code&gt; when responding to user queries&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For more details about this feature, please refer to its &lt;a href="https://www.notion.so/meilisearch/Composite-embedder-usage-14a4b06b651f81859dc3df21e8cd02a0?pvs=4#19f4b06b651f809ab3ecc0daae7d5856"&gt;public usage page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Done by @dureuill in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5371"&gt;#5371&lt;/a&gt; and &lt;a href="https://github.com/meilisearch/meilisearch/pull/5401"&gt;#5401&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Retrieve multiple documents by ID&lt;/h2&gt;
&lt;p&gt;It is now possible to retrieve multiple documents by their IDs:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -H 'Content-Type: application/json' MEILISEARCH_URL/indexes/INDEX_UID/documents -d '{ "ids": ["cody", "finn", "brandy", "gambit"] }'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json
{
  "results": [
    {
      "id": "brandy",
      "info": 13765493
    },
    {
      "id": "finn",
      "info": 35863
    },
    {
      "id": "cody",
      "info": 122263
    },
    {
      "id": "gambit",
      "info": 22222
    }
  ],
  "offset": 0,
  "limit": 20,
  "total": 4
}&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!WARNING]
Documents are &lt;em&gt;not&lt;/em&gt; returned in the queried order. Non-existent documents are ignored.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Done by @dureuill in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5384"&gt;#5384&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Other improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Batch together &lt;code&gt;/documents&lt;/code&gt; requests using either &lt;code&gt;PUT&lt;/code&gt; or &lt;code&gt;POST&lt;/code&gt; by @Kerollmops in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5293"&gt;#5293&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Display timestamped internal indexing steps on the &lt;code&gt;/batches&lt;/code&gt; route by @Kerollmops in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5356"&gt;#5356&lt;/a&gt; and &lt;a href="https://github.com/meilisearch/meilisearch/pull/5364"&gt;#5364&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Introduce &lt;code&gt;exhaustiveFacetCount&lt;/code&gt; parameter to &lt;code&gt;/facet-search&lt;/code&gt; route to retrieve an exhaustive facet count by @ManyTheFish in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5369"&gt;#5369&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Reduce RAM consumption of arroy by @irevoire in https://github.com/meilisearch/arroy/pull/105&lt;/li&gt;
&lt;li&gt;Experimental feature: Cache embeddings during search (Read more in the &lt;a href="https://github.com/orgs/meilisearch/discussions/818"&gt;feature discussion&lt;/a&gt;) by @dureuill in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5418"&gt;#5418&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Extend batch progress view to include indexing of vectors by @irevoire in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5420"&gt;#5420&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Armenian characters are no longer case-sensitive by @ManyTheFish in https://github.com/meilisearch/meilisearch/pull/5454&lt;/li&gt;
&lt;li&gt;Avoid reindexing searchables when the order changes by @ManyTheFish in https://github.com/meilisearch/meilisearch/pull/5402&lt;/li&gt;
&lt;li&gt;Accept cancellation tasks even when the disk is full by @irevoire in https://github.com/meilisearch/meilisearch/pull/5492&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Fixes&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Geo update bug by @ManyTheFish in https://github.com/meilisearch/meilisearch/pull/5407&lt;/li&gt;
&lt;li&gt;Fix prefix search on attributes listed in &lt;code&gt;disabledOnAttributes&lt;/code&gt; settings by @ManyTheFish in https://github.com/meilisearch/meilisearch/pull/5415 (fixes &lt;a href="https://github.com/meilisearch/meilisearch/issues/5347"&gt;#5347&lt;/a&gt; and &lt;a href="https://github.com/meilisearch/meilisearch/issues/5452"&gt;#5452&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix CI to work with merge queues by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5456&lt;/li&gt;
&lt;li&gt;Support fetching the pooling method from the model configuration by @dureuill in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5355"&gt;#5355&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Delete unused prefixes by @Kerollmops in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5413"&gt;#5413&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fixes mini dashboard to prevent the panel from popping up every time by @curquiza in https://github.com/meilisearch/meilisearch/pull/5436&lt;/li&gt;
&lt;li&gt;Enabling &lt;code&gt;rankingScoreThreshold&lt;/code&gt; no longer causes &lt;code&gt;_rankingScore&lt;/code&gt; to be miscalculated by @barloes and @dureuill in https://github.com/meilisearch/meilisearch/pull/5313&lt;/li&gt;
&lt;li&gt;Validate dimensions of embedding when receiving documents with &lt;code&gt;_vectors&lt;/code&gt; by @dureuill in https://github.com/meilisearch/meilisearch/pull/5478&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Misc&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Dependencies updates&lt;/li&gt;
&lt;li&gt;Bump Ubuntu in the CI from 20.04 to 22.04 by @Kerollmops in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5338"&gt;#5338&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bump heed to v0.22 by @irevoire and @Kerollmops in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5406"&gt;#5406&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bump ring to v0.17.14 to compile on old aarch64 by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5423&lt;/li&gt;
&lt;li&gt;Bump zip from 2.2.2 to 2.3.0 by @dependabot in https://github.com/meilisearch/meilisearch/pull/5426&lt;/li&gt;
&lt;li&gt;CIs and tests&lt;/li&gt;
&lt;li&gt;Improve test performance of get_index.rs  by @DerTimonius in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5210"&gt;#5210&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ollama Integration Tests by @Kerollmops in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5308"&gt;#5308&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ensure the settings routes are properly configured when a new field is added to the Settings struct by @MichaScant in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5149"&gt;#5149&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Skip a snapshot test on Windows by @Kerollmops in &lt;a href="https://github.com/meilisearch/meilisearch/pull/5383"&gt;#5383&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix CI to work with merge queues by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5456&lt;/li&gt;
&lt;li&gt;Accept total batch size in human size by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5421&lt;/li&gt;
&lt;li&gt;Add more progress levels to measure merging and post-processing by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5422 and https://github.com/meilisearch/meilisearch/pull/5468&lt;/li&gt;
&lt;li&gt;Isolate word fst usage to dedicate it to typo-correction by @ManyTheFish in https://github.com/meilisearch/meilisearch/pull/5415&lt;/li&gt;
&lt;li&gt;Show database sizes batches by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5457 and https://github.com/meilisearch/meilisearch/pull/5464&lt;blockquote&gt;
&lt;p&gt;‚ö†Ô∏è Please consider that the batches stats content can change anytime.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;Improve performance of computing document stats by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5465&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;‚ù§Ô∏è Thanks again to our external contributors:
- &lt;a href="https://github.com/meilisearch/meilisearch"&gt;Meilisearch&lt;/a&gt;: @MichaScant
- &lt;a href="https://github.com/meilisearch/heed"&gt;Heed&lt;/a&gt;: @oXtxNt9U
- &lt;a href="https://github.com/meilisearch/arroy"&gt;Arroy&lt;/a&gt;: @ptondereau
- &lt;a href="https://github.com/meilisearch/charabia"&gt;Charabia&lt;/a&gt;: @NarHakobyan, @mosuka&lt;/p&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.14.0" rel="alternate"/>
  </entry>
</feed>
