<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://selfh.st/apps</id>
  <title>Meilisearch Releases</title>
  <updated>2025-01-17T03:33:28.716988-05:00</updated>
  <author>
    <name>selfh.st</name>
    <email>contact@selfh.st</email>
  </author>
  <link href="https://selfh.st/apps" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <subtitle>Self-hosted software releases generated by selfh.st</subtitle>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.12.0</id>
    <title>New release for Meilisearch: v1.12.0 ü¶ó</title>
    <updated>2024-12-23T03:57:05-05:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;p&gt;Meilisearch v1.12 introduces significant indexing speed improvements, almost halving the time required to index large datasets. This release also introduces new settings to customize and potentially further increase indexing speed.&lt;/p&gt;
&lt;p&gt;üß∞ All official Meilisearch integrations (including SDKs, clients, and other tools) are compatible with this Meilisearch release. Integration deployment happens between 4 to 48 hours after a new version becomes available.&lt;/p&gt;
&lt;p&gt;Some SDKs might not include all new features. Consult the project repository for detailed information. Is a feature you need missing from your chosen SDK? Create an issue letting us know you need it, or, for open-source karma points, open a PR implementing it (we'll love you for that ‚ù§Ô∏è).&lt;/p&gt;
&lt;h1&gt;New features and updates üî•&lt;/h1&gt;
&lt;h2&gt;Improve indexing speed&lt;/h2&gt;
&lt;p&gt;Indexing time is improved across the board!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Performance is maintained or better on smaller machines&lt;/li&gt;
&lt;li&gt;On bigger machines with multiple cores and good IO, Meilisearch v1.12 is much faster than Meilisearch v1.11&lt;ul&gt;
&lt;li&gt;More than twice as fast for raw document insertion tasks.&lt;/li&gt;
&lt;li&gt;More than x4 as fast for incrementally updating documents in a large database.&lt;/li&gt;
&lt;li&gt;Embeddings generation was also improved up to x1.5 for some workloads.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The new indexer also makes task cancellation faster.&lt;/p&gt;
&lt;p&gt;Done by @dureuill, @ManyTheFish, and @Kerollmops in #4900.&lt;/p&gt;
&lt;h2&gt;New index settings: use &lt;code&gt;facetSearch&lt;/code&gt; and &lt;code&gt;prefixSearch&lt;/code&gt; to improve indexing speed&lt;/h2&gt;
&lt;p&gt;v1.12 introduces two new index settings: &lt;code&gt;facetSearch&lt;/code&gt; and &lt;code&gt;prefixSearch&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Both settings allow you to skip parts of the indexing process. This leads to significant improvements to indexing speed, but may negatively impact search experience in some use cases.&lt;/p&gt;
&lt;p&gt;Done by @ManyTheFish in #5091&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;facetSearch&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Use this setting to toggle &lt;a href="https://www.meilisearch.com/docs/learn/filtering_and_sorting/search_with_facet_filters#searching-facet-values"&gt;facet search&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
curl \
  -X PUT 'http://localhost:7700/indexes/books/settings/facet-search' \
  -H 'Content-Type: application/json' \
  --data-binary 'true'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The default value for &lt;code&gt;facetSearch&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;. When set to &lt;code&gt;false&lt;/code&gt;, this setting disables facet search for all filterable attributes in an index.&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;prefixSearch&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Use this setting to configure the ability to &lt;a href="https://www.meilisearch.com/docs/learn/engine/prefix"&gt;search a word by prefix&lt;/a&gt; on an index:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
curl \
  -X PUT 'http://localhost:7700/indexes/books/settings/prefix-search' \
  -H 'Content-Type: application/json' \
  --data-binary 'disabled'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;prefixSearch&lt;/code&gt; accepts one of the following values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;"indexingTime"&lt;/code&gt;: enables prefix processing during indexing. This is the default Meilisearch behavior&lt;/li&gt;
&lt;li&gt;&lt;code&gt;"disabled"&lt;/code&gt;: deactivates prefix search completely&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Disabling prefix search means the query &lt;code&gt;he&lt;/code&gt; will no longer match the word &lt;code&gt;hello&lt;/code&gt;. This may significantly impact search result relevancy, but speeds up the indexing process.&lt;/p&gt;
&lt;h2&gt;New API route: &lt;code&gt;/batches&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The new &lt;code&gt;/batches&lt;/code&gt; endpoint allow you to query information about task batches.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GET&lt;/code&gt; &lt;code&gt;/batches&lt;/code&gt; returns a list of batch objects:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sh
curl  -X GET 'http://localhost:7700/batches'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This endpoint accepts the same parameters as &lt;code&gt;GET&lt;/code&gt; &lt;code&gt;/tasks&lt;/code&gt; route, allowing you to narrow down which batches you want to see. Parameters used with &lt;code&gt;GET&lt;/code&gt; &lt;code&gt;/batches&lt;/code&gt; apply to the tasks, not the batches themselves. For example, &lt;code&gt;GET /batches?uid=0&lt;/code&gt; returns batches containing tasks with a &lt;code&gt;taskUid&lt;/code&gt; of &lt;code&gt;0&lt;/code&gt; , not batches with a &lt;code&gt;batchUid&lt;/code&gt; of &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You may also query &lt;code&gt;GET&lt;/code&gt; &lt;code&gt;/batches/:uid&lt;/code&gt; to retrieve information about a single batch object:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sh
curl  -X GET 'http://localhost:7700/batches/BATCH_UID'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/batches/:uid&lt;/code&gt; does not accept any parameters.&lt;/p&gt;
&lt;p&gt;Batch objects contain the following fields:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json5
{
  "uid": 160,
  "progress": {
    "steps": [
      {
        "currentStep": "processing tasks",
        "finished": 0,
        "total": 2
      },
      {
        "currentStep": "indexing",
        "finished": 2,
        "total": 3
      },
      {
        "currentStep": "extracting words",
        "finished": 3,
        "total": 13
      },
      {
        "currentStep": "document",
        "finished": 12300,
        "total": 19546
      }
    ],
    "percentage": 37.986263
  },
  "details": {
    "receivedDocuments": 19547,
    "indexedDocuments": null
  },
  "stats": {
    "totalNbTasks": 1,
    "status": {
      "processing": 1
    },
    "types": {
      "documentAdditionOrUpdate": 1
    },
    "indexUids": {
      "mieli": 1
    }
  },
  "duration": null,
  "startedAt": "2024-12-12T09:44:34.124726733Z",
  "finishedAt": null
}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Additionally, task objects now include a new field, &lt;code&gt;batchUid&lt;/code&gt;. Use this field together with &lt;code&gt;/batches/:uid&lt;/code&gt; to retrieve data on a specific batch.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json5
{
  "uid": 154,
  "batchUid": 142,
  "indexUid": "movies_test2",
  "status": "succeeded",
  "type": "documentAdditionOrUpdate",
  "canceledBy": null,
  "details": {
    "receivedDocuments": 1,
    "indexedDocuments": 1
  },
  "error": null,
  "duration": "PT0.027766819S",
  "enqueuedAt": "2024-12-02T14:07:34.974430765Z",
  "startedAt": "2024-12-02T14:07:34.99021667Z",
  "finishedAt": "2024-12-02T14:07:35.017983489Z"
}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Done by @irevoire in #5060, #5070, #5080&lt;/p&gt;
&lt;h2&gt;Other improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;New query parameter for &lt;code&gt;GET&lt;/code&gt;‚ÄØ&lt;code&gt;/tasks&lt;/code&gt;: &lt;code&gt;reverse&lt;/code&gt;. If &lt;code&gt;reverse&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, tasks will be returned in reversed order, from oldest to newest tasks. Done by @irevoire in #5048&lt;/li&gt;
&lt;li&gt;Phrase searches with&lt;code&gt;showMatchesPosition&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; give a single location for the whole phrase @flevi29 in #4928&lt;/li&gt;
&lt;li&gt;New Prometheus metrics by @PedroTurik in #5044&lt;/li&gt;
&lt;li&gt;When a query finds matching terms in document fields with array values,  Meilisearch now includes an &lt;code&gt;indices&lt;/code&gt; field to &lt;code&gt;_matchesPosition&lt;/code&gt; specifying which array elements contain the matches by @LukasKalbertodt in #5005&lt;/li&gt;
&lt;li&gt;‚ö†Ô∏è Breaking &lt;code&gt;vectorStore&lt;/code&gt; change: field distribution no longer contains &lt;code&gt;_vectors&lt;/code&gt;. Its value used to be incorrect, and there is no current use case for the fixed, most likely empty, value. Done as part of #4900&lt;/li&gt;
&lt;li&gt;Improve error message by adding index name in #5056 by @airycanon&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Fixes üêû&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Return appropriate error when primary key is greater than 512 bytes, by @flevi29 in #4930&lt;/li&gt;
&lt;li&gt;Fix issue where numbers were segmented in different ways depending on tokenizer, by @dqkqd in https://github.com/meilisearch/charabia/pull/311&lt;/li&gt;
&lt;li&gt;Fix pagination when embedding fails by @dureuill in https://github.com/meilisearch/meilisearch/pull/5063&lt;/li&gt;
&lt;li&gt;Fix issue causing Meilisearch to ignore stop words in some cases by @ManyTheFish in #5062&lt;/li&gt;
&lt;li&gt;Fix phrase search with &lt;code&gt;attributesToSearchOn&lt;/code&gt; in #5062 by @ManyTheFish&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Misc&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Dependencies updates&lt;/li&gt;
&lt;li&gt;Update benchmarks to match the new crates subfolder by @Kerollmops in #5021&lt;/li&gt;
&lt;li&gt;Fix the benchmarks by @irevoire in #5037&lt;/li&gt;
&lt;li&gt;Bump Swatinem/rust-cache from 2.7.1 to 2.7.5 in #5030&lt;/li&gt;
&lt;li&gt;Update charabia v0.9.2 by @ManyTheFish in #5098&lt;/li&gt;
&lt;li&gt;Update mini-dashboard to v0.2.16 version by @curquiza in #5102&lt;/li&gt;
&lt;li&gt;CIs and tests&lt;/li&gt;
&lt;li&gt;Improve performance of &lt;code&gt;delete_index.rs&lt;/code&gt; by @DerTimonius in #4963&lt;/li&gt;
&lt;li&gt;Improve performance of &lt;code&gt;create_index.rs&lt;/code&gt; by @DerTimonius in #4962&lt;/li&gt;
&lt;li&gt;Improve performance of &lt;code&gt;get_documents.rs&lt;/code&gt; by @PedroTurik in #5025&lt;/li&gt;
&lt;li&gt;Improve performance of &lt;code&gt;formatted.rs&lt;/code&gt; by @PedroTurik in #5043&lt;/li&gt;
&lt;li&gt;Fix the path used in the flaky tests CI by @Kerollmops in #5049&lt;/li&gt;
&lt;li&gt;Misc&lt;/li&gt;
&lt;li&gt;Rollback the Meilisearch Kawaii logo by @Kerollmops in #5017&lt;/li&gt;
&lt;li&gt;Add image source label to Dockerfile by @wuast94 in #4990&lt;/li&gt;
&lt;li&gt;Hide code complexity into a subfolder by @Kerollmops in #5016&lt;/li&gt;
&lt;li&gt;Internal tool: implement offline upgrade from v1.10 to v1.11 by @irevoire in #5034&lt;/li&gt;
&lt;li&gt;Internal tool: implement offline upgrade from v1.11 to v1.12 by @ManyTheFish in  #5146&lt;/li&gt;
&lt;li&gt;Meilisearch is now able to retrieve Katakana words from a Hiragana query by @tats-u in https://github.com/meilisearch/charabia/pull/312&lt;/li&gt;
&lt;li&gt;Improve error handling when writing into LMDB by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5089&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;‚ù§Ô∏è Thanks again to our external contributors:
- &lt;a href="https://github.com/meilisearch/meilisearch"&gt;Meilisearch&lt;/a&gt;: @airycanon, @DerTimonius, @flevi29, @LukasKalbertodt, @PedroTurik, @wuast94
- &lt;a href="https://github.com/meilisearch/charabia"&gt;Charabia&lt;/a&gt;: @dqkqd @tats-u&lt;/p&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.12.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.12.1</id>
    <title>New release for Meilisearch: v1.12.1</title>
    <updated>2025-01-02T05:07:21-05:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;h2&gt;Fixes&lt;/h2&gt;
&lt;p&gt;There was a bug in the engine when adding an empty payload, it was making the batch fails.
Fixed by @irevoire in https://github.com/meilisearch/meilisearch/pull/5192&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/meilisearch/meilisearch/compare/v1.12.0...v1.12.1&lt;/p&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.12.1" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.12.2</id>
    <title>New release for Meilisearch: v1.12.2 ü¶ó </title>
    <updated>2025-01-09T03:26:18-05:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;h2&gt;ü™≤ Fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Fix a performance regression introduced in v1.12.0 when updating a small number of documents in indexes that contain &lt;code&gt;sortableAttributes&lt;/code&gt; or &lt;code&gt;filterableAttributes&lt;/code&gt;. By @dureuill in https://github.com/meilisearch/meilisearch/pull/5205&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/meilisearch/meilisearch/compare/v1.12.1...v1.12.2&lt;/p&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.12.2" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.12.3</id>
    <title>New release for Meilisearch: v1.12.3 ü¶ó</title>
    <updated>2025-01-13T11:14:53-05:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;h2&gt;What's Changed&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Field distribution is no longer miscomputed when sending incremental updates to documents via the &lt;code&gt;PUT&lt;/code&gt; route by @dureuill in https://github.com/meilisearch/meilisearch/pull/5224&lt;/li&gt;
&lt;li&gt;Improve the panic message when deleting an unknown entry by @Kerollmops in https://github.com/meilisearch/meilisearch/pull/5229&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/meilisearch/meilisearch/compare/v1.12.2...v1.12.3&lt;/p&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.12.3" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/meilisearch/meilisearch/releases/tag/v1.12.4</id>
    <title>New release for Meilisearch: v1.12.4 ü¶ó</title>
    <updated>2025-01-16T09:59:00-05:00</updated>
    <author>
      <name>meilisearch/meilisearch</name>
    </author>
    <content>&lt;h2&gt;Fixes ü™≤&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The indexing process no longer starts an infinite loop in some circumstances by @dureuill in https://github.com/meilisearch/meilisearch/pull/5242&lt;/li&gt;
&lt;li&gt;The indexing process no longer fails task when attempting to delete keys that are not in the DB, also in https://github.com/meilisearch/meilisearch/pull/5242&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/meilisearch/meilisearch/compare/v1.12.3...v1.12.4&lt;/p&gt;</content>
    <link href="https://github.com/meilisearch/meilisearch/releases/tag/v1.12.4" rel="alternate"/>
  </entry>
</feed>
