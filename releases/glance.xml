<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://selfh.st/apps</id>
  <title>Glance Releases</title>
  <updated>2025-03-28T03:33:20.418854-04:00</updated>
  <author>
    <name>selfh.st</name>
    <email>contact@selfh.st</email>
  </author>
  <link href="https://selfh.st/apps" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <subtitle>Self-hosted software releases generated by selfh.st</subtitle>
  <entry>
    <id>https://github.com/glanceapp/glance/releases/tag/v0.7.4</id>
    <title>New release for Glance: v0.7.4</title>
    <updated>2025-03-12T14:11:07-04:00</updated>
    <author>
      <name>glanceapp/glance</name>
    </author>
    <content>&lt;h2&gt;What's Changed&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Made a number of accessibility improvements that should hopefully make Glance available to a wider audience&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Fixed&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Currency symbol not being properly set for some markets (thanks @hkrob)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;New Contributors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;@DavisYe made their first contribution in https://github.com/glanceapp/glance/pull/372&lt;/li&gt;
&lt;li&gt;@legoraft made their first contribution in https://github.com/glanceapp/glance/pull/382&lt;/li&gt;
&lt;li&gt;@KadoBOT made their first contribution in https://github.com/glanceapp/glance/pull/399&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/glanceapp/glance/releases/tag/v0.7.4" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/glanceapp/glance/releases/tag/v0.7.5</id>
    <title>New release for Glance: v0.7.5</title>
    <updated>2025-03-15T15:06:23-04:00</updated>
    <author>
      <name>glanceapp/glance</name>
    </author>
    <content>&lt;h2&gt;What's Changed&lt;/h2&gt;
&lt;p&gt;Added support for Pi-hole version 6 via:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yaml
- type: dns-stats
  service: pihole-v6
  url: ${PIHOLE_URL}
  password: ${PIHOLE_PASSWORD}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(thanks to @KallanX and @ralphocdol)&lt;/p&gt;
&lt;p&gt;Where &lt;code&gt;${PIHOLE_PASSWORD}&lt;/code&gt; is either the admin dashboard password or the application password which can be created from:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Settings -&amp;gt; Web Interface / API -&amp;gt; Configure app password&lt;/code&gt;&lt;/p&gt;</content>
    <link href="https://github.com/glanceapp/glance/releases/tag/v0.7.5" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/glanceapp/glance/releases/tag/v0.7.6</id>
    <title>New release for Glance: v0.7.6</title>
    <updated>2025-03-15T15:43:53-04:00</updated>
    <author>
      <name>glanceapp/glance</name>
    </author>
    <content>&lt;p&gt;Fixed an issue with the previous release for the DNS stats widget when using &lt;code&gt;service: pihole-v6&lt;/code&gt;&lt;/p&gt;</content>
    <link href="https://github.com/glanceapp/glance/releases/tag/v0.7.6" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/glanceapp/glance/releases/tag/v0.7.7</id>
    <title>New release for Glance: v0.7.7</title>
    <updated>2025-03-16T22:24:06-04:00</updated>
    <author>
      <name>glanceapp/glance</name>
    </author>
    <content>&lt;h2&gt;What's changed&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Improved accessibility of the Docker containers widget (thanks @Lanie-Carmelo)&lt;/li&gt;
&lt;li&gt;Reduced the contrast of calendar dates to better match the design language of other widgets&lt;/li&gt;
&lt;li&gt;Added more info to error messages of DNS stats widget when using &lt;code&gt;service: pihole-v6&lt;/code&gt; to help with debugging issues&lt;/li&gt;
&lt;li&gt;Changed the integer type in the Custom API widget to &lt;code&gt;int&lt;/code&gt; from &lt;code&gt;int64&lt;/code&gt; so that you can now perform calculations on the result of the &lt;code&gt;len&lt;/code&gt; function (thanks @titembaatar)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Fixed&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Videos widget with style &lt;code&gt;vertical-list&lt;/code&gt; not opening links in new tab (thanks @aliaghil)&lt;/li&gt;
&lt;li&gt;DNS stats widget "Top blocked domains" in the UI having an additional triangle on the left on Safari (thanks @lukpep)&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/glanceapp/glance/releases/tag/v0.7.7" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/glanceapp/glance/releases/tag/v0.7.8</id>
    <title>New release for Glance: v0.7.8</title>
    <updated>2025-03-26T15:59:07-04:00</updated>
    <author>
      <name>glanceapp/glance</name>
    </author>
    <content>&lt;p&gt;The &lt;code&gt;custom-api&lt;/code&gt; widget has received a lot of positive feedback since its introduction in v0.7.0. Many people have made and shared their own widgets over at the new &lt;a href="https://github.com/glanceapp/community-widgets"&gt;&lt;code&gt;community-widgets&lt;/code&gt;&lt;/a&gt; repository as well as the Discord server. This release includes many improvements based on feedback from the community that will make it even more capable and easier to use.&lt;/p&gt;
&lt;h2&gt;New&lt;/h2&gt;
&lt;h3&gt;Insecure requests&lt;/h3&gt;
&lt;p&gt;You can now allow insecure requests (those to APIs behind a self-signed certificate) via a &lt;code&gt;allow-insecure&lt;/code&gt; property:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yaml
- type: custom-api
  url: https://api.example.com
  allow-insecure: true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(thanks @ralphocdol)&lt;/p&gt;
&lt;h3&gt;Parameters&lt;/h3&gt;
&lt;p&gt;You can now specify query parameters via a &lt;code&gt;parameters&lt;/code&gt; property:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yaml
- type: custom-api
  url: https://api.example.com
  parameters:
    foo: bar
    baz: qux&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!NOTE]&lt;/p&gt;
&lt;p&gt;Using the parameters property will override any query parameters specified in the URL.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(thanks @ralphocdol)&lt;/p&gt;
&lt;h3&gt;Request method and body&lt;/h3&gt;
&lt;p&gt;You can now specify the request method and body via the &lt;code&gt;method&lt;/code&gt;, &lt;code&gt;body-type&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt; properties:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yaml
- type: custom-api
  url: https://api.example.com
  method: POST
  body-type: json
  body:
    foo: bar
    baz: qux&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If you set a &lt;code&gt;body&lt;/code&gt;, the &lt;code&gt;method&lt;/code&gt; will automatically be set to &lt;code&gt;POST&lt;/code&gt; and the &lt;code&gt;body-type&lt;/code&gt; will be set to &lt;code&gt;json&lt;/code&gt;, so you don't have to specify them explicitly.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yaml
- type: custom-api
  url: https://api.example.com
  body-type: string
  body: |
    foo=bar&amp;amp;baz=qux&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(thanks @not-first)&lt;/p&gt;
&lt;h3&gt;Subrequests&lt;/h3&gt;
&lt;p&gt;You can now make multiple requests in a single &lt;code&gt;custom-api&lt;/code&gt; widget via a &lt;code&gt;subrequests&lt;/code&gt; property:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yaml
- type: custom-api
  url: https://api.example.com
  subrequests:
    another-one:
      url: https://api.example.com/another-one
    and-another-one:
      url: https://api.example.com/and-another-one&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Subrequests can take all of the same properties as the main request, such as: &lt;code&gt;parameters&lt;/code&gt;, &lt;code&gt;headers&lt;/code&gt;, &lt;code&gt;method&lt;/code&gt;, &lt;code&gt;body-type&lt;/code&gt;, &lt;code&gt;body&lt;/code&gt; and &lt;code&gt;allow-insecure&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To access the JSON of a subrequest, you can use &lt;code&gt;.Subrequest "key"&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;{{ (.Subrequest "another-one").JSON.String "foo" }}&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;This can get cumbersome to write if you need to reference the subrequest in multiple places, so you can instead assign it to a variable:&lt;/p&gt;
&lt;p&gt;```html
{{ $anotherOne := .Subrequest "another-one" }}&lt;/p&gt;
&lt;p&gt;{{ $anotherOne.JSON.String "foo" }}&lt;/p&gt;
&lt;p&gt;{{ $anotherOne.JSON.Int "bar" }}&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;You can also access the response as you would on the main request:&lt;/p&gt;
&lt;p&gt;```html
{{ $andAnotherOne := .Subrequest "and-another-one" }}&lt;/p&gt;
&lt;p&gt;{{ $andAnotherOne.Response.StatusCode }}&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;(thanks @ralphocdol)&lt;/p&gt;
&lt;h3&gt;New functions&lt;/h3&gt;
&lt;h4&gt;&lt;code&gt;trimPrefix&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;json
{"foo": "bazbar"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;{{ .JSON.String "foo" | trimPrefix "baz" }}&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;bar&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;trimSuffix&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;json
{"foo": "barbaz"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;{{ .JSON.String "foo" | trimSuffix "baz" }}&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;bar&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;trimSpace&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;json
{"foo": "  bar  "}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;{{ .JSON.String "foo" | trimSpace }}&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;bar&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;replaceAll&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;json
{"foo": "barbazbar"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;{{ .JSON.String "foo" | replaceAll "baz" "bar" }}&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;barbarbar&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;findMatch&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;json
{"foo": "bar-123456-baz"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;{{ .JSON.String "foo" | findMatch "\\d+" }}&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;The pattern is a regular expression, although note that backslashes need to be escaped, so &lt;code&gt;\d&lt;/code&gt; in a normal regular expression would be &lt;code&gt;\\d&lt;/code&gt; here.&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;123456&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;findSubmatch&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;json
{"foo": "bar-unknown-value"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;{{ .JSON.String "foo" | findSubmatch "bar-(.*)" }}&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;The pattern is a regular expression, and only the first submatch is returned.&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;unknown-value&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;parseTime&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;json
{"foo": "2021-01-02T15:04:05Z"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```html
{{ $parsedTime := .JSON.String "foo" | parseTime "rfc3339" }}&lt;/p&gt;
&lt;p&gt;Year: {{ $parsedTime.Year }}&lt;/p&gt;
&lt;p&gt;Month: {{ $parsedTime.Month }}&lt;/p&gt;
&lt;p&gt;Day: {{ $parsedTime.Day }}&lt;/p&gt;
&lt;p&gt;Hour: {{ $parsedTime.Hour }}&lt;/p&gt;
&lt;p&gt;Minute: {{ $parsedTime.Minute }}&lt;/p&gt;
&lt;p&gt;Second: {{ $parsedTime.Second }}&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Other accepted time formats are &lt;code&gt;unix&lt;/code&gt;, &lt;code&gt;rfc3339nano&lt;/code&gt;, &lt;code&gt;datetime&lt;/code&gt;, &lt;code&gt;dateonly&lt;/code&gt; or a custom format using Go's &lt;a href="https://pkg.go.dev/time#pkg-constants"&gt;date formatting&lt;/a&gt;. The returned object is Go's &lt;a href="https://pkg.go.dev/time#Time"&gt;&lt;code&gt;time.Time&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;Year: 2021&lt;/p&gt;
&lt;p&gt;Month: January&lt;/p&gt;
&lt;p&gt;Day: 2&lt;/p&gt;
&lt;p&gt;Hour: 15&lt;/p&gt;
&lt;p&gt;Minute: 4&lt;/p&gt;
&lt;p&gt;Second: 5&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;toRelativeTime&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;json
{"foo": "2021-01-02T15:04:05Z"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p {{ .JSON.String "foo" | parseTime "rfc3339" | toRelativeTime }}&gt;&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!NOTE]&lt;/p&gt;
&lt;p&gt;The return value of this function must be placed within a tag's attributes, not within its content.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p data-dynamic-relative-time="1609602245"&gt;&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;This will automatically be converted to &lt;code&gt;1d&lt;/code&gt;, &lt;code&gt;2h&lt;/code&gt;, etc. on the client side.&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;parseRelativeTime&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;This is just a shorthand for parsing time and converting it to relative time. Instead of:&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p {{ .JSON.String "foo" | parseTime "rfc3339" | toRelativeTime }}&gt;&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;You can simply do:&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p {{ .JSON.String "foo" | parseRelativeTime "rfc3339" }}&gt;&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;sortByString&lt;/code&gt;, &lt;code&gt;sortByInt&lt;/code&gt;, &lt;code&gt;sortByFloat&lt;/code&gt;, &lt;code&gt;sortByTime&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;json
{"students": [
  {"name": "Bob", "age": 20},
  {"name": "Alice", "age": 30},
  {"name": "Charlie", "age": 10}
]}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```html
{{ range .JSON.Array "students" | sortByString "name" "asc" }}
&lt;br /&gt;
&lt;p&gt;{{ .String "name" }}&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;{{ end }}
```&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;Alice&lt;/p&gt;
&lt;p&gt;Bob&lt;/p&gt;
&lt;p&gt;Charlie&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;```html
{{ range .JSON.Array "students" | sortByInt "age" "desc" }}
&lt;br /&gt;
&lt;p&gt;{{ .Int "age" }}&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;{{ end }}
```&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;30&lt;/p&gt;
&lt;p&gt;20&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;&lt;code&gt;json
{"students": [
  {"name": "Bob", "gpa": 3.5},
  {"name": "Alice", "gpa": 4.0},
  {"name": "Charlie", "gpa": 2.0}
]}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```html
{{ range .JSON.Array "students" | sortByFloat "gpa" "asc" }}
&lt;br /&gt;
&lt;p&gt;{{ .Float "gpa" }}&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;{{ end }}
```&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3.5&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;&lt;code&gt;json
{"students": [
  {"name": "Bob", "dob": "2000-01-01"},
  {"name": "Alice", "dob": "1990-01-01"},
  {"name": "Charlie", "dob": "2010-01-01"}
]}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```html
{{ range .JSON.Array "students" | sortByTime "dob" "dateonly" "asc"  }}
&lt;br /&gt;
&lt;p&gt;{{ .String "name" }}&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;{{ end }}
```&lt;/p&gt;
&lt;p&gt;Here, &lt;code&gt;dateonly&lt;/code&gt; is the same format that you would use with &lt;code&gt;parseTime&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;Alice&lt;/p&gt;
&lt;p&gt;Bob&lt;/p&gt;
&lt;p&gt;Charlie&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h2&gt;Other additions&lt;/h2&gt;
&lt;h3&gt;Extension widget &lt;code&gt;headers&lt;/code&gt; property&lt;/h3&gt;
&lt;p&gt;You can now specify headers in the &lt;code&gt;extension&lt;/code&gt; widget:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yaml
- type: extension
  headers:
    Authorization: Bearer token&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Fixed being unable to parse an empty response body in the &lt;code&gt;custom-api&lt;/code&gt; widget&lt;/li&gt;
&lt;li&gt;Fixed always overriding query parameters in the &lt;code&gt;extension&lt;/code&gt; widget, they will now only be overridden if the &lt;code&gt;parameters&lt;/code&gt; property is set&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/glanceapp/glance/releases/tag/v0.7.8" rel="alternate"/>
  </entry>
</feed>
