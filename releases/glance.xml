<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://selfh.st/apps</id>
  <title>Glance Releases</title>
  <updated>2025-04-13T08:33:12.897841-04:00</updated>
  <author>
    <name>selfh.st</name>
    <email>contact@selfh.st</email>
  </author>
  <link href="https://selfh.st/apps" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <subtitle>Self-hosted software releases generated by selfh.st</subtitle>
  <entry>
    <id>https://github.com/glanceapp/glance/releases/tag/v0.7.6</id>
    <title>New release for Glance: v0.7.6</title>
    <updated>2025-03-15T15:43:53-04:00</updated>
    <author>
      <name>glanceapp/glance</name>
    </author>
    <content>&lt;p&gt;Fixed an issue with the previous release for the DNS stats widget when using &lt;code&gt;service: pihole-v6&lt;/code&gt;&lt;/p&gt;</content>
    <link href="https://github.com/glanceapp/glance/releases/tag/v0.7.6" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/glanceapp/glance/releases/tag/v0.7.7</id>
    <title>New release for Glance: v0.7.7</title>
    <updated>2025-03-16T22:24:06-04:00</updated>
    <author>
      <name>glanceapp/glance</name>
    </author>
    <content>&lt;h2&gt;What's changed&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Improved accessibility of the Docker containers widget (thanks @Lanie-Carmelo)&lt;/li&gt;
&lt;li&gt;Reduced the contrast of calendar dates to better match the design language of other widgets&lt;/li&gt;
&lt;li&gt;Added more info to error messages of DNS stats widget when using &lt;code&gt;service: pihole-v6&lt;/code&gt; to help with debugging issues&lt;/li&gt;
&lt;li&gt;Changed the integer type in the Custom API widget to &lt;code&gt;int&lt;/code&gt; from &lt;code&gt;int64&lt;/code&gt; so that you can now perform calculations on the result of the &lt;code&gt;len&lt;/code&gt; function (thanks @titembaatar)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Fixed&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Videos widget with style &lt;code&gt;vertical-list&lt;/code&gt; not opening links in new tab (thanks @aliaghil)&lt;/li&gt;
&lt;li&gt;DNS stats widget "Top blocked domains" in the UI having an additional triangle on the left on Safari (thanks @lukpep)&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/glanceapp/glance/releases/tag/v0.7.7" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/glanceapp/glance/releases/tag/v0.7.8</id>
    <title>New release for Glance: v0.7.8</title>
    <updated>2025-03-26T15:59:07-04:00</updated>
    <author>
      <name>glanceapp/glance</name>
    </author>
    <content>&lt;p&gt;The &lt;code&gt;custom-api&lt;/code&gt; widget has received a lot of positive feedback since its introduction in v0.7.0. Many people have made and shared their own widgets over at the new &lt;a href="https://github.com/glanceapp/community-widgets"&gt;&lt;code&gt;community-widgets&lt;/code&gt;&lt;/a&gt; repository as well as the Discord server. This release includes many improvements based on feedback from the community that will make it even more capable and easier to use.&lt;/p&gt;
&lt;h2&gt;New&lt;/h2&gt;
&lt;h3&gt;Insecure requests&lt;/h3&gt;
&lt;p&gt;You can now allow insecure requests (those to APIs behind a self-signed certificate) via a &lt;code&gt;allow-insecure&lt;/code&gt; property:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yaml
- type: custom-api
  url: https://api.example.com
  allow-insecure: true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(thanks @ralphocdol)&lt;/p&gt;
&lt;h3&gt;Parameters&lt;/h3&gt;
&lt;p&gt;You can now specify query parameters via a &lt;code&gt;parameters&lt;/code&gt; property:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yaml
- type: custom-api
  url: https://api.example.com
  parameters:
    foo: bar
    baz: qux&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!NOTE]&lt;/p&gt;
&lt;p&gt;Using the parameters property will override any query parameters specified in the URL.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(thanks @ralphocdol)&lt;/p&gt;
&lt;h3&gt;Request method and body&lt;/h3&gt;
&lt;p&gt;You can now specify the request method and body via the &lt;code&gt;method&lt;/code&gt;, &lt;code&gt;body-type&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt; properties:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yaml
- type: custom-api
  url: https://api.example.com
  method: POST
  body-type: json
  body:
    foo: bar
    baz: qux&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If you set a &lt;code&gt;body&lt;/code&gt;, the &lt;code&gt;method&lt;/code&gt; will automatically be set to &lt;code&gt;POST&lt;/code&gt; and the &lt;code&gt;body-type&lt;/code&gt; will be set to &lt;code&gt;json&lt;/code&gt;, so you don't have to specify them explicitly.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yaml
- type: custom-api
  url: https://api.example.com
  body-type: string
  body: |
    foo=bar&amp;amp;baz=qux&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(thanks @not-first)&lt;/p&gt;
&lt;h3&gt;Subrequests&lt;/h3&gt;
&lt;p&gt;You can now make multiple requests in a single &lt;code&gt;custom-api&lt;/code&gt; widget via a &lt;code&gt;subrequests&lt;/code&gt; property:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yaml
- type: custom-api
  url: https://api.example.com
  subrequests:
    another-one:
      url: https://api.example.com/another-one
    and-another-one:
      url: https://api.example.com/and-another-one&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Subrequests can take all of the same properties as the main request, such as: &lt;code&gt;parameters&lt;/code&gt;, &lt;code&gt;headers&lt;/code&gt;, &lt;code&gt;method&lt;/code&gt;, &lt;code&gt;body-type&lt;/code&gt;, &lt;code&gt;body&lt;/code&gt; and &lt;code&gt;allow-insecure&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To access the JSON of a subrequest, you can use &lt;code&gt;.Subrequest "key"&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;{{ (.Subrequest "another-one").JSON.String "foo" }}&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;This can get cumbersome to write if you need to reference the subrequest in multiple places, so you can instead assign it to a variable:&lt;/p&gt;
&lt;p&gt;```html
{{ $anotherOne := .Subrequest "another-one" }}&lt;/p&gt;
&lt;p&gt;{{ $anotherOne.JSON.String "foo" }}&lt;/p&gt;
&lt;p&gt;{{ $anotherOne.JSON.Int "bar" }}&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;You can also access the response as you would on the main request:&lt;/p&gt;
&lt;p&gt;```html
{{ $andAnotherOne := .Subrequest "and-another-one" }}&lt;/p&gt;
&lt;p&gt;{{ $andAnotherOne.Response.StatusCode }}&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;(thanks @ralphocdol)&lt;/p&gt;
&lt;h3&gt;New functions&lt;/h3&gt;
&lt;h4&gt;&lt;code&gt;trimPrefix&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;json
{"foo": "bazbar"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;{{ .JSON.String "foo" | trimPrefix "baz" }}&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;bar&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;trimSuffix&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;json
{"foo": "barbaz"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;{{ .JSON.String "foo" | trimSuffix "baz" }}&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;bar&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;trimSpace&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;json
{"foo": "  bar  "}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;{{ .JSON.String "foo" | trimSpace }}&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;bar&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;replaceAll&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;json
{"foo": "barbazbar"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;{{ .JSON.String "foo" | replaceAll "baz" "bar" }}&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;barbarbar&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;findMatch&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;json
{"foo": "bar-123456-baz"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;{{ .JSON.String "foo" | findMatch "\\d+" }}&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;The pattern is a regular expression, although note that backslashes need to be escaped, so &lt;code&gt;\d&lt;/code&gt; in a normal regular expression would be &lt;code&gt;\\d&lt;/code&gt; here.&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;123456&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;findSubmatch&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;json
{"foo": "bar-unknown-value"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;{{ .JSON.String "foo" | findSubmatch "bar-(.*)" }}&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;The pattern is a regular expression, and only the first submatch is returned.&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;unknown-value&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;parseTime&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;json
{"foo": "2021-01-02T15:04:05Z"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```html
{{ $parsedTime := .JSON.String "foo" | parseTime "rfc3339" }}&lt;/p&gt;
&lt;p&gt;Year: {{ $parsedTime.Year }}&lt;/p&gt;
&lt;p&gt;Month: {{ $parsedTime.Month }}&lt;/p&gt;
&lt;p&gt;Day: {{ $parsedTime.Day }}&lt;/p&gt;
&lt;p&gt;Hour: {{ $parsedTime.Hour }}&lt;/p&gt;
&lt;p&gt;Minute: {{ $parsedTime.Minute }}&lt;/p&gt;
&lt;p&gt;Second: {{ $parsedTime.Second }}&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Other accepted time formats are &lt;code&gt;unix&lt;/code&gt;, &lt;code&gt;rfc3339nano&lt;/code&gt;, &lt;code&gt;datetime&lt;/code&gt;, &lt;code&gt;dateonly&lt;/code&gt; or a custom format using Go's &lt;a href="https://pkg.go.dev/time#pkg-constants"&gt;date formatting&lt;/a&gt;. The returned object is Go's &lt;a href="https://pkg.go.dev/time#Time"&gt;&lt;code&gt;time.Time&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;Year: 2021&lt;/p&gt;
&lt;p&gt;Month: January&lt;/p&gt;
&lt;p&gt;Day: 2&lt;/p&gt;
&lt;p&gt;Hour: 15&lt;/p&gt;
&lt;p&gt;Minute: 4&lt;/p&gt;
&lt;p&gt;Second: 5&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;toRelativeTime&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;json
{"foo": "2021-01-02T15:04:05Z"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p {{ .JSON.String "foo" | parseTime "rfc3339" | toRelativeTime }}&gt;&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!NOTE]&lt;/p&gt;
&lt;p&gt;The return value of this function must be placed within a tag's attributes, not within its content.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p data-dynamic-relative-time="1609602245"&gt;&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;This will automatically be converted to &lt;code&gt;1d&lt;/code&gt;, &lt;code&gt;2h&lt;/code&gt;, etc. on the client side.&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;parseRelativeTime&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;This is just a shorthand for parsing time and converting it to relative time. Instead of:&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p {{ .JSON.String "foo" | parseTime "rfc3339" | toRelativeTime }}&gt;&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;You can simply do:&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p {{ .JSON.String "foo" | parseRelativeTime "rfc3339" }}&gt;&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;sortByString&lt;/code&gt;, &lt;code&gt;sortByInt&lt;/code&gt;, &lt;code&gt;sortByFloat&lt;/code&gt;, &lt;code&gt;sortByTime&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;json
{"students": [
  {"name": "Bob", "age": 20},
  {"name": "Alice", "age": 30},
  {"name": "Charlie", "age": 10}
]}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```html
{{ range .JSON.Array "students" | sortByString "name" "asc" }}
&lt;br /&gt;
&lt;p&gt;{{ .String "name" }}&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;{{ end }}
```&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;Alice&lt;/p&gt;
&lt;p&gt;Bob&lt;/p&gt;
&lt;p&gt;Charlie&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;```html
{{ range .JSON.Array "students" | sortByInt "age" "desc" }}
&lt;br /&gt;
&lt;p&gt;{{ .Int "age" }}&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;{{ end }}
```&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;30&lt;/p&gt;
&lt;p&gt;20&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;&lt;code&gt;json
{"students": [
  {"name": "Bob", "gpa": 3.5},
  {"name": "Alice", "gpa": 4.0},
  {"name": "Charlie", "gpa": 2.0}
]}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```html
{{ range .JSON.Array "students" | sortByFloat "gpa" "asc" }}
&lt;br /&gt;
&lt;p&gt;{{ .Float "gpa" }}&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;{{ end }}
```&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3.5&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;&lt;code&gt;json
{"students": [
  {"name": "Bob", "dob": "2000-01-01"},
  {"name": "Alice", "dob": "1990-01-01"},
  {"name": "Charlie", "dob": "2010-01-01"}
]}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```html
{{ range .JSON.Array "students" | sortByTime "dob" "dateonly" "asc"  }}
&lt;br /&gt;
&lt;p&gt;{{ .String "name" }}&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;{{ end }}
```&lt;/p&gt;
&lt;p&gt;Here, &lt;code&gt;dateonly&lt;/code&gt; is the same format that you would use with &lt;code&gt;parseTime&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;```html&lt;/p&gt;
&lt;p&gt;Alice&lt;/p&gt;
&lt;p&gt;Bob&lt;/p&gt;
&lt;p&gt;Charlie&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h2&gt;Other additions&lt;/h2&gt;
&lt;h3&gt;Extension widget &lt;code&gt;headers&lt;/code&gt; property&lt;/h3&gt;
&lt;p&gt;You can now specify headers in the &lt;code&gt;extension&lt;/code&gt; widget:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yaml
- type: extension
  headers:
    Authorization: Bearer token&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Fixed being unable to parse an empty response body in the &lt;code&gt;custom-api&lt;/code&gt; widget&lt;/li&gt;
&lt;li&gt;Fixed always overriding query parameters in the &lt;code&gt;extension&lt;/code&gt; widget, they will now only be overridden if the &lt;code&gt;parameters&lt;/code&gt; property is set&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/glanceapp/glance/releases/tag/v0.7.8" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/glanceapp/glance/releases/tag/v0.7.9</id>
    <title>New release for Glance: v0.7.9</title>
    <updated>2025-03-29T14:08:11-04:00</updated>
    <author>
      <name>glanceapp/glance</name>
    </author>
    <content>&lt;p&gt;Another small release that's primarily focused around &lt;code&gt;custom-api&lt;/code&gt; widget improvements.&lt;/p&gt;
&lt;h2&gt;Changed&lt;/h2&gt;
&lt;p&gt;You no longer need to convert numbers to float before doing math operations with them. When adding two integers together, the result will be an integer. Adding two floats together or an integer and a float will result in a float.&lt;/p&gt;
&lt;p&gt;Before:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;html
{{ (add (.JSON.Int "foo" | toFloat) (.JSON.Int "bar" | toFloat)) | toInt }}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;html
{{ add (.JSON.Int "foo") (.JSON.Int "bar") }}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(this is consistent for all math operations, not just addition)&lt;/p&gt;
&lt;h2&gt;New&lt;/h2&gt;
&lt;h3&gt;&lt;code&gt;skip-json-validation&lt;/code&gt; and &lt;code&gt;.JSONLines&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;yaml
- type: custom-api
  url: https://api.example.com
  skip-json-validation: true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Some API's return newline separated JSON objects instead of a single JSON array. This is not valid JSON, so the &lt;code&gt;custom-api&lt;/code&gt; widget will fail to parse it. You can now set &lt;code&gt;skip-json-validation&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; to skip the validation step and parse the response as a list of JSON objects within your template.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json
{"name": "Steve", "age": 30}
{"name": "Alex", "age": 25}
{"name": "John", "age": 35}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can then access the JSON objects using &lt;code&gt;.JSONLines&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;html
{{ range .JSONLines }}
  {{ .String "name" }}
{{ end }}&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;New functions&lt;/h3&gt;
&lt;h4&gt;&lt;code&gt;concat&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;{{ concat "foo" "bar" "baz" }}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;will return &lt;code&gt;foobarbaz&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;(thanks @ralphocdol)&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;now&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Returns the current time as a &lt;a href="https://pkg.go.dev/time#Time"&gt;&lt;code&gt;time.Time&lt;/code&gt;&lt;/a&gt; object.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{{ now }}
{{ now.Hour }}:{{ now.Minute }}:{{ now.Second }}
{{ now.Unix }}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;2025-03-29 17:20:18.4905224 +0000 GMT m=+376.954385401
17:20:18
1743268818&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This can also be used to convert time to your current timezone:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{{ $parsedTime := .JSON.String "date_created" | parseTime "rfc3339" }}
{{ $created := $parsedTime.In now.Location }}
{{ $created.Hour }}:{{ $created.Minute }}:{{ $created.Second }}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(thanks @not-first &amp;amp; @ralphocdol)&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;offsetNow&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Returns the current time offset by a given amount:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{{ offsetNow "1h" }}
{{ now }}
{{ offsetNow "-1h" }}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;2025-03-29 18:44:04.2719241 +0000 GMT m=+4178.324981601
2025-03-29 17:44:04.2719241 +0000 GMT m=+578.324981601
2025-03-29 16:44:04.2719241 +0000 GMT m=-3021.675018399&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This can be used to check if something happened within a certain time frame:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{{ $created := .JSON.String "date_created" | parseTime "rfc3339" }}
{{ if ($created.After (offsetNow "-1h")) }}
  Created less than 1 hour ago
{{ end }}&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;Widget-Title-URL&lt;/code&gt; header for extension widget&lt;/h3&gt;
&lt;p&gt;The extension widget can now return a &lt;code&gt;Widget-Title-URL&lt;/code&gt; header to set the link of the widget's title if it has not already been set by the user. &lt;/p&gt;
&lt;p&gt;(thanks @not-first)&lt;/p&gt;
&lt;h2&gt;Fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The markets widget will now properly display prices of markets where the price is less than 0.01 (thanks @nsdont)&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/glanceapp/glance/releases/tag/v0.7.9" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/glanceapp/glance/releases/tag/v0.7.10</id>
    <title>New release for Glance: v0.7.10</title>
    <updated>2025-04-09T19:51:06-04:00</updated>
    <author>
      <name>glanceapp/glance</name>
    </author>
    <content>&lt;h2&gt;What's Changed&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Slightly increased the scale of everything on mobile to make things easier to tap on&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;sensors:print&lt;/code&gt; CLI command that lists all temperature sensors that Glance has access to&lt;/li&gt;
&lt;li&gt;Bumped versions of dependencies &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;New Contributors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;@diceroll123 made their first contribution in https://github.com/glanceapp/glance/pull/528&lt;/li&gt;
&lt;li&gt;@FranklyFuzzy made their first contribution in https://github.com/glanceapp/glance/pull/499&lt;/li&gt;
&lt;li&gt;@daot made their first contribution in https://github.com/glanceapp/glance/pull/486&lt;/li&gt;
&lt;li&gt;@Panonim made their first contribution in https://github.com/glanceapp/glance/pull/553&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/glanceapp/glance/compare/v0.7.9...v0.7.10&lt;/p&gt;</content>
    <link href="https://github.com/glanceapp/glance/releases/tag/v0.7.10" rel="alternate"/>
  </entry>
</feed>
