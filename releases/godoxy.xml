<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://selfh.st/apps</id>
  <title>GoDoxy Releases</title>
  <updated>2025-02-04T04:30:44.934856-05:00</updated>
  <author>
    <name>selfh.st</name>
    <email>contact@selfh.st</email>
  </author>
  <link href="https://selfh.st/apps" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <subtitle>Self-hosted software releases generated by selfh.st</subtitle>
  <entry>
    <id>https://github.com/yusing/go-proxy/releases/tag/0.8.0</id>
    <title>New release for GoDoxy: v0.8.0</title>
    <updated>2025-01-04T15:10:47-05:00</updated>
    <author>
      <name>yusing/go-proxy</name>
    </author>
    <content>&lt;h1&gt;GoDoxy v0.8 changes:&lt;/h1&gt;
&lt;h2&gt;Breaking changes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Removed&lt;/strong&gt; &lt;code&gt;redirect_to_https&lt;/code&gt; in &lt;code&gt;config.yml&lt;/code&gt;, superseded by &lt;code&gt;redirectHTTP&lt;/code&gt; as an entrypoint middleware&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;New&lt;/strong&gt; notification config format, support webhook notification, support multiple notification providers&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;old&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yaml
  providers:
    notification:
      gotify:
        url: ...
        token: ...&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;new&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yaml
  providers:
    notification:
      - name: gotify
        provider: gotify
        url: ...
        token: ...
      - name: discord
        provider: webhook
        url: https://discord.com/api/webhooks/...
        template: discord&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Webhook notification fields:&lt;/p&gt;
&lt;p&gt;| Field      | Description            | Required                       | Allowed values   |
  | ---------- | ---------------------- | ------------------------------ | ---------------- |
  | name       | name of the provider   | Yes                            |                  |
  | provider   |                        | Yes                            | &lt;code&gt;webhook&lt;/code&gt;        |
  | url        | webhook URL            | Yes                            | Full URL         |
  | template   | webhook template       | No                             | empty, &lt;code&gt;discord&lt;/code&gt; |
  | token      | webhook token          | No                             |                  |
  | payload    | webhook payload        | No &lt;strong&gt;(if &lt;code&gt;template&lt;/code&gt; is used)&lt;/strong&gt; | valid json       |
  | method     | webhook request method | No                             | &lt;code&gt;GET POST PUT&lt;/code&gt;   |
  | mime_type  | mime type              | No                             |                  |
  | color_mode | color mode             | No                             | &lt;code&gt;hex&lt;/code&gt; &lt;code&gt;dec&lt;/code&gt;      |&lt;/p&gt;
&lt;p&gt;Available payload variables:&lt;/p&gt;
&lt;p&gt;| Variable | Description                 | Format                               |
  | -------- | --------------------------- | ------------------------------------ |
  | $title   | message title               | json string                          |
  | $message | message in markdown format  | json string                          |
  | $fields  | extra fields in json format | json object                          |
  | $color   | embed color by &lt;code&gt;color_mode&lt;/code&gt; | &lt;code&gt;0xff0000&lt;/code&gt; (hex) or &lt;code&gt;16711680&lt;/code&gt; (dec) |&lt;/p&gt;
&lt;h2&gt;Non-breaking changes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;services health notification now in markdown format like &lt;code&gt;Uptime Kuma&lt;/code&gt; for both webhook and Gotify&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="{6CF5D81A-C178-40BA-9441-408AC1FEABA9}" src="https://github.com/user-attachments/assets/559a82b8-bf47-44e8-a70c-ff5e79c87aee" /&gt;
  &lt;img alt="{4E008AB5-A88F-4D71-8A31-2DD4E23D0D8A}" src="https://github.com/user-attachments/assets/9f8098fd-58ae-4e1a-bedc-662ecce6344a" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;docker services now use docker container health status if possible, fallback to GoDoxy health check on failure / no docker health check, e.g.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;yaml
  # docker compose
  services:
    app:
      ...
      container_name: app
      healthcheck:
        test: ["CMD-SHELL", "curl --fail http://localhost:8080 || exit 1"]
        interval: 5s&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Health check result will be equivalent to &lt;code&gt;docker inspect --format='{{json .State.Health}}' app&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;proxy.&amp;lt;alias&amp;gt;.path_patterns&lt;/code&gt; fully support http.ServeMux patterns &lt;code&gt;[METHOD ][HOST]/[PATH]&lt;/code&gt; (See https://pkg.go.dev/net/http#hdr-Patterns-ServeMux)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;caching ACME private key in order to reuse ACME account, to prevent from ACME rate limit&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WebUI config editor now validates for middleware compose files&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;New:&lt;/strong&gt; fully support string as inline YAML for docker labels&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;yaml
  services:
    app:
      ...
      labels:
        # add '|' after colon ':' to treat it as string
        proxy.app: |
          scheme: http
          host: 10.0.0.254
          port: 80
          path_patterns:
            - GET /
            - POST /auth
          healthcheck:
            disabled: false
            path: /
            interval: 5s
        proxy.app1.healthcheck: |
          path: /ping
          use_get: true
        proxy.app1.load_balance: |
          link: app
          mode: ip_hash&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;New:&lt;/strong&gt; support entrypoint middlewares (applied to all routes, before route middlewares)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;yaml
  entrypoint:
    middlewares:
      - use: CIDRWhitelist
        allow:
          - "127.0.0.1"
          - "10.0.0.0/8"
          - "192.168.0.0/16"
        status: 403
        message: "Forbidden"&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;New:&lt;/strong&gt; support exact host matching, i.e.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;```yaml
  # include file
  app1.domain.tld:
    host: 10.0.0.1&lt;/p&gt;
&lt;p&gt;# docker compose
  services:
    app1:
      ...
      proxy.aliases: app1.domain.tld
  ```&lt;/p&gt;
&lt;p&gt;will only match exactly &lt;code&gt;app1.domain.tld&lt;/code&gt;
  &lt;strong&gt;&lt;code&gt;match_domains&lt;/code&gt; in config will be ignored for this route&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;New:&lt;/strong&gt; support host matching without a subdomain, i.e.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;yaml
  app1:
    host: 10.0.0.1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;will now also match &lt;code&gt;app1.tld&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;New:&lt;/strong&gt; support &lt;code&gt;x-properties&lt;/code&gt; (will be ignored, like in docker compose), useful with YAML anchor e.g.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;```yaml
  x-proxy: &amp;amp;proxy # this will be ignored in GoDoxy
    scheme: https
    healthcheck:
      disable: true
    middlewares:
      hideXForwarded:
      modifyRequest:
        setHeaders:
          Host: $req_host&lt;/p&gt;
&lt;p&gt;api.openai.com:
    &amp;lt;&amp;lt;: &lt;em&gt;proxy # extends from x-proxy
    host: api.openai.com
  api.groq.com:
    &amp;lt;&amp;lt;: &lt;/em&gt;proxy # extends from x-proxy
    host: api.groq.com
  ```&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;new middleware name aliases:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;modifyRequest&lt;/code&gt; = &lt;code&gt;request&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;modifyResponse&lt;/code&gt; = &lt;code&gt;response&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;New:&lt;/strong&gt; support &lt;code&gt;$&lt;/code&gt; variables in &lt;code&gt;request&lt;/code&gt; and &lt;code&gt;response&lt;/code&gt; middlewares (like nginx config)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$req_method&lt;/code&gt;: request http method&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$req_scheme&lt;/code&gt;: request URL scheme (http/https)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$req_host&lt;/code&gt;: request host without port&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$req_port&lt;/code&gt;: request port&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$req_addr&lt;/code&gt;: request host with port (if present)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$req_path&lt;/code&gt;: request URL path&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$req_query&lt;/code&gt;: raw query string&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$req_url&lt;/code&gt;: full request URL&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$req_uri&lt;/code&gt;: request URI (encoded path?query)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$req_content_type&lt;/code&gt;: request Content-Type header&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$req_content_length&lt;/code&gt;: length of request body (if present)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$remote_addr&lt;/code&gt;: client's remote address (may changed by middlewares like &lt;code&gt;RealIP&lt;/code&gt; and &lt;code&gt;CloudflareRealIP&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$remote_host&lt;/code&gt;: client's remote ip parse from &lt;code&gt;$remote_addr&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$remote_port&lt;/code&gt;: client's remote port parse from &lt;code&gt;$remote_addr&lt;/code&gt; (may be empty)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$resp_content_type&lt;/code&gt;: response Content-Type header&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$resp_content_length&lt;/code&gt;: length response body&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$status_code&lt;/code&gt;: response status code&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$upstream_name&lt;/code&gt;: upstream server name (alias)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$upstream_scheme&lt;/code&gt;: upstream server scheme&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$upstream_host&lt;/code&gt;: upstream server host&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$upstream_port&lt;/code&gt;: upstream server port&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$upstream_addr&lt;/code&gt;: upstream server address with port (if present)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$upstream_url&lt;/code&gt;: full upstream server URL&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$header(name)&lt;/code&gt;: get request header by name&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$resp_header(name)&lt;/code&gt;: get response header by name&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$arg(name)&lt;/code&gt;: get URL query parameter by name&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;New:&lt;/strong&gt; Access Logging (entrypoint and per route), i.e.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;mount logs directory before setting this&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;```yaml
  # config.yml
  entrypoint:
    access_log:
      format: json # common, combined, json
      path: /app/logs/access.json.log
      filters:
        cidr:
          negative: true # no log for local requests
          values:
            - 127.0.0.1/32
            - 172.0.0.0/8
            - 192.168.0.0/16
            - 10.0.0.0/16
      fields:
        headers:
          default: drop # drop app headers in log
          config: # keep only these
            X-Real-Ip: keep
            CF-Connecting-Ip: keep
            X-Forwarded-For: keep&lt;/p&gt;
&lt;p&gt;# include file
  # same as above but under route config
  app:
    access_log:
      format: json # common, combined, json
      ...&lt;/p&gt;
&lt;p&gt;# docker labels
  labels:
    proxy.app.access_log: |
      format: json
      path: /app/logs/access.json.log
      filters:
        cidr:
          negative: true
          values:
            - 127.0.0.1/32
            - 172.0.0.0/8
            - 192.168.0.0/16
            - 10.0.0.0/16
  ```&lt;/p&gt;
&lt;p&gt;To integrate with &lt;strong&gt;goaccess&lt;/strong&gt;, currently need to use &lt;strong&gt;caddy&lt;/strong&gt; as a file web server. Below should work with &lt;code&gt;combined&lt;/code&gt; log format.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yaml
  # compose.yml
  services:
  app:
    image: reg.6uo.me/yusing/goproxy
    ...
    volumes:
      ...
      - ./logs:/app/logs
  caddy:
    image: caddy
    restart: always
    labels:
      proxy.goaccess.port: 80
      proxy.goaccess.middlewares.request.set_headers.Host: goaccess
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./logs:/var/www/goaccess:ro
    depends_on:
      - goaccess
  goaccess:
    image: hectorm/goaccess:latest
    restart: always
    volumes:
      - ./logs:/srv/logs
    command: &amp;gt; # for combined format
      /srv/logs/access.log
      -o /srv/logs/report.html
      -j 4 # 4 threads
      --real-time-html
      --ws-url=&amp;lt;your goaccess url&amp;gt;:443 # i.e. goaccess.my.app:443
      --log-format='%v %h %^[%d:%t %^] "%r" %s %b "%R" "%u"'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Caddyfile&lt;/p&gt;
&lt;p&gt;```caddyfile
  {
      auto_https off
  }&lt;/p&gt;
&lt;p&gt;goaccess:80 {
      @websockets {
          header Connection *Upgrade
          header Upgrade websocket
      }&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  handle @websockets {
      reverse_proxy goaccess:7890
  }

  root * /var/www/goaccess
  file_server
  rewrite / /report.html
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}
  ```&lt;/p&gt;
&lt;h2&gt;Fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;duplicated notification after config reload&lt;/li&gt;
&lt;li&gt;&lt;code&gt;timeout&lt;/code&gt; was defaulted to &lt;code&gt;0&lt;/code&gt; in some cases causing health check to fail&lt;/li&gt;
&lt;li&gt;&lt;code&gt;redirectHTTP&lt;/code&gt; middleware may not work on non standard http port&lt;/li&gt;
&lt;li&gt;various other small bugs&lt;/li&gt;
&lt;li&gt;&lt;code&gt;realIP&lt;/code&gt; and &lt;code&gt;cloudflareRealIP&lt;/code&gt; middlewares&lt;/li&gt;
&lt;li&gt;prometheus metrics gone after a single route reload&lt;/li&gt;
&lt;li&gt;WebUI app links now works when &lt;code&gt;match_domains&lt;/code&gt; is not set&lt;/li&gt;
&lt;li&gt;WebUI config editor now display validation errors properly&lt;/li&gt;
&lt;li&gt;upgraded dependencies to the latest&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/yusing/go-proxy/releases/tag/0.8.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/yusing/go-proxy/releases/tag/0.8.1</id>
    <title>New release for GoDoxy: v0.8.1</title>
    <updated>2025-01-07T00:11:57-05:00</updated>
    <author>
      <name>yusing/go-proxy</name>
    </author>
    <content>&lt;h1&gt;GoDoxy v0.8.1&lt;/h1&gt;
&lt;h2&gt;Changes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;breaking&lt;/strong&gt; API update, please update &lt;code&gt;GoDoxy&lt;/code&gt; together with WebUI&lt;/li&gt;
&lt;li&gt;WebUI Config Editor update&lt;/li&gt;
&lt;li&gt;UI and theme update&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Linting support
  &lt;img alt="{A9F5A997-D44A-4259-8B82-71F90ECFF755}" src="https://github.com/user-attachments/assets/856c0357-eff7-412f-9c2f-da27da33deab" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;healtcheck: notification no longer includes &lt;code&gt;latency&lt;/code&gt; field in "Service went down" message&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;json schema updates&lt;/li&gt;
&lt;li&gt;&lt;code&gt;request&lt;/code&gt; and &lt;code&gt;response&lt;/code&gt; middleware no longer canonicalize header key &lt;em&gt;(i.e. &lt;code&gt;X-Real-IP&lt;/code&gt; -&amp;gt; &lt;code&gt;X-Real-Ip&lt;/code&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;removed &lt;code&gt;ratelimter&lt;/code&gt; middleware on api, one should set it on &lt;code&gt;godoxy-frontend&lt;/code&gt;'s docker labels&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;bug: udp stream not stopping on error&lt;/li&gt;
&lt;li&gt;panic: route without content in "include files" causes crash&lt;/li&gt;
&lt;li&gt;panic: edge case that RefCounter closes it channel twice&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/yusing/go-proxy/releases/tag/0.8.1" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/yusing/go-proxy/releases/tag/0.9</id>
    <title>New release for GoDoxy: v0.9</title>
    <updated>2025-01-30T11:29:39-05:00</updated>
    <author>
      <name>yusing/go-proxy</name>
    </author>
    <content>&lt;h1&gt;GoDoxy v0.9.0 changes&lt;/h1&gt;
&lt;h2&gt;What's New&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Brand new rewritten WebUI&lt;/li&gt;
&lt;li&gt;View logs directly from WebUI&lt;/li&gt;
&lt;li&gt;Edit dashboard app config (e.g. icon, name, category, etc.)&lt;/li&gt;
&lt;li&gt;Toggle show / hide apps&lt;/li&gt;
&lt;li&gt;Health bubbles, latency, etc. rich info on dashboard items&lt;/li&gt;
&lt;li&gt;UI config editor
    &lt;img alt="{7829FA41-5733-4BAD-8183-CDF093CEC6F2}" src="https://github.com/user-attachments/assets/4bb371f4-6e4c-425c-89b2-b9e962bdd46f" /&gt;
    &lt;img alt="{29A4608C-607F-43C9-A542-15EC6B9D024E}" src="https://github.com/user-attachments/assets/8469cfaf-dc37-4b6e-9f29-c44eea91bb82" /&gt;
    &lt;img alt="{88116730-76F5-44C4-ACDB-11FE1D27963C}" src="https://github.com/user-attachments/assets/12cac579-c1cb-489d-a65f-e30762beacbc" /&gt;
    &lt;img alt="{83118DF5-9D46-4D00-9CEF-C0F6C8D18C4B}" src="https://github.com/user-attachments/assets/856140f0-78bb-4a76-98f2-ad47544a3515" /&gt;&lt;/li&gt;
&lt;li&gt;Support selfh.st icons: &lt;code&gt;@selfhst/&amp;lt;reference&amp;gt;.&amp;lt;format&amp;gt;&lt;/code&gt; &lt;em&gt;(e.g. &lt;code&gt;@selfhst/adguard-home.webp&lt;/code&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;also uses the display name on https://selfh.st/icons/ as default for our dashboard!&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GoDoxy server side favicon retreiving and caching&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;deliver smooth dashboard experience by caching favicons&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;correct icon can show without setting &lt;code&gt;homepage.icon&lt;/code&gt; by parsing it from app's root path "/", selecting &lt;code&gt;link[rel=icon]&lt;/code&gt; from HTML as default icon&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Thanks &lt;a href="https://github.com/polds"&gt;polds&lt;/a&gt;&lt;/strong&gt;
  Optionally allow a user to specify a “warm-up” endpoint to start the container, returning a 403 if the endpoint isn’t hit and the container has been stopped.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This can help prevent bots from starting random containers, or allow health check systems to run some probes. Or potentially lock the start endpoints behind a different authentication mechanism, etc.&lt;/p&gt;
&lt;p&gt;Sample service showing this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yaml
  hello-world:
    image: nginxdemos/hello
    container_name: hello-world
    restart: "no"
    ports:
      - "9100:80"
    labels:
      proxy.aliases: hello-world
      proxy.#1.port: 9100
      proxy.idle_timeout: 45s
      proxy.wake_timeout: 30s
      proxy.stop_method: stop
      proxy.stop_timeout: 10s
      proxy.stop_signal: SIGTERM
      proxy.start_endpoint: "/start"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Hitting &lt;code&gt;/&lt;/code&gt; on this service when the container is down:&lt;/p&gt;
&lt;p&gt;```curl
  $ curl -sv -X GET -H "Host: hello-world.godoxy.local" http://localhost/
  * Host localhost:80 was resolved.
  * IPv6: ::1
  * IPv4: 127.0.0.1
  *   Trying [::1]:80...
  * Connected to localhost (::1) port 80&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GET / HTTP/1.1
Host: hello-world.godoxy.local
User-Agent: curl/8.7.1
Accept: &lt;em&gt;/&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Request completely sent off
  &amp;lt; HTTP/1.1 403 Forbidden
  &amp;lt; Content-Type: text/plain; charset=utf-8
  &amp;lt; X-Content-Type-Options: nosniff
  &amp;lt; Date: Wed, 08 Jan 2025 02:04:51 GMT
  &amp;lt; Content-Length: 71
  &amp;lt;
  Forbidden: Container can only be started via configured start endpoint&lt;/li&gt;
&lt;li&gt;Connection #0 to host localhost left intact
  ```&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hitting &lt;code&gt;/start&lt;/code&gt; when the container is down:&lt;/p&gt;
&lt;p&gt;```curl
  curl -sv -X GET -H "Host: hello-world.godoxy.local" -H "X-Goproxy-Check-Redirect: skip" http://localhost/start
  * Host localhost:80 was resolved.
  * IPv6: ::1
  * IPv4: 127.0.0.1
  *   Trying [::1]:80...
  * Connected to localhost (::1) port 80&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GET /start HTTP/1.1
Host: hello-world.godoxy.local
User-Agent: curl/8.7.1
Accept: &lt;em&gt;/&lt;/em&gt;
X-Goproxy-Check-Redirect: skip&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Request completely sent off
  &amp;lt; HTTP/1.1 200 OK
  &amp;lt; Date: Wed, 08 Jan 2025 02:13:39 GMT
  &amp;lt; Content-Length: 0
  &amp;lt;&lt;/li&gt;
&lt;li&gt;Connection #0 to host localhost left intact
  ```&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Thanks &lt;a href="https://github.com/polds"&gt;polds&lt;/a&gt;&lt;/strong&gt;
  Support WebUI authentication via OIDC by setting these environment variables:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;GODOXY_OIDC_ISSUER_URL&lt;/code&gt; e.g.:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pocket ID: &lt;code&gt;https://pocker-id.yourdomain.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Authentik: &lt;code&gt;https://authentik.yourdomain.com/application/o/&amp;lt;application_slug&amp;gt;/&lt;/code&gt; &lt;strong&gt;The ending slash is required&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GODOXY_OIDC_LOGOUT_URL&lt;/code&gt; &lt;em&gt;(if your issuer supports it, e.g.)&lt;/em&gt;&lt;ul&gt;
&lt;li&gt;Authentik: &lt;code&gt;https://authentik.yourdomain.com/application/o/&amp;lt;application_slug&amp;gt;/end-session&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GODOXY_OIDC_CLIENT_ID&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GODOXY_OIDC_CLIENT_SECRET&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GODOXY_OIDC_REDIRECT_URL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GODOXY_OIDC_SCOPES&lt;/code&gt; &lt;em&gt;(optional)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GODOXY_OIDC_ALLOWED_USERS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;GODOXY_OIDC_ALLOWED_GROUPS&lt;/code&gt; &lt;em&gt;(optional)&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use OpenID Connect to authenticate GoDoxy's WebUI and all your services (SSO)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;```yaml
  # default
  labels:
    proxy.app.middlewares.oidc:&lt;/p&gt;
&lt;p&gt;# with overridden allowed users
  labels:
    proxy.app.middlewares.oidc.allowed_users: user1, user2&lt;/p&gt;
&lt;p&gt;# with overridden allowed groups
  labels:
    proxy.app.middlewares.oidc.allowed_groups: group1, group2&lt;/p&gt;
&lt;p&gt;# with both overridden (can use inline YAML string for less typing)
  labels:
    proxy.app.middlewares.oidc: |
      allowed_users: [user1, user2]
      allowed_groups: [group1, group2]
  ```&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Caddyfile like rules (experimental)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;```yaml
  proxy.goaccess.rules: |
    - name: default
      do: |
        rewrite / /index.html
        serve /var/www/goaccess
    - name: ws
      on: |
        header Connection Upgrade
        header Upgrade websocket
      do: bypass # do nothing, pass to reverse proxy&lt;/p&gt;
&lt;p&gt;proxy.app.rules: |
    - name: default
      do: bypass # do nothing, pass to reverse proxy
    - name: block POST and PUT
      on: method POST | method PUT
      do: error 403 Forbidden
  ```&lt;/p&gt;
&lt;h2&gt;Behavior changes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;config reload will now cause a server full restart (i.e. proxy, api, prometheus, etc), eliminating some incorrect behaviors&lt;/li&gt;
&lt;li&gt;drop support of multiline string list without hyphen &lt;code&gt;-&lt;/code&gt; prefix, e.g.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;```yaml
  # old
  proxy.app.middlewares.request.hide_headers: |
    X-Header1
    X-Header2&lt;/p&gt;
&lt;p&gt;# new
  proxy.app.middlewares.request.hide_headers: |
    - X-Header1
    - X-Header2
  ```&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;autocert now supports hot-reload&lt;/li&gt;
&lt;li&gt;middleware compose now supports cross-referencing, e.g.
  ```yaml
  foo:&lt;ul&gt;
&lt;li&gt;use: RedirectHTTP
  bar: # in the same file or different file&lt;/li&gt;
&lt;li&gt;use: foo@file
  ```&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;changed default &lt;code&gt;ResponseHeaderTimeout&lt;/code&gt; to &lt;code&gt;60s&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;allow customizing &lt;code&gt;ResponseHeaderTimeout&lt;/code&gt; for each app, e.g.
  &lt;code&gt;yaml
  proxy.&amp;lt;app&amp;gt;.response_header_timeout: 3m&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Bug fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;cert renewal failure no longer causes renew schdueler to stuck forever&lt;/li&gt;
&lt;li&gt;access log writes to closed file after config reload&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;What's Changed&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;feat: Add optional StartEndpoint support for idle watcher by @polds in https://github.com/yusing/go-proxy/pull/34&lt;/li&gt;
&lt;li&gt;feat: Add optional OIDC support by @yusing in https://github.com/yusing/go-proxy/pull/39&lt;/li&gt;
&lt;li&gt;fix: allow oauth_state token to be cross-domain by @polds in https://github.com/yusing/go-proxy/pull/40&lt;/li&gt;
&lt;li&gt;Feat/auto schemas by @yusing in https://github.com/yusing/go-proxy/pull/48&lt;/li&gt;
&lt;li&gt;Feat/OIDC middleware by @yusing in https://github.com/yusing/go-proxy/pull/50&lt;/li&gt;
&lt;li&gt;feat: add a &lt;code&gt;add_prefix&lt;/code&gt; middleware by @polds in https://github.com/yusing/go-proxy/pull/51&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/yusing/go-proxy/compare/0.8.1...0.9&lt;/p&gt;</content>
    <link href="https://github.com/yusing/go-proxy/releases/tag/0.9" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/yusing/go-proxy/releases/tag/0.9.1</id>
    <title>New release for GoDoxy: 0.9.1</title>
    <updated>2025-02-01T14:52:43-05:00</updated>
    <author>
      <name>yusing/go-proxy</name>
    </author>
    <content>&lt;h2&gt;What's Changed&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Support Ntfy notification in #57&lt;/li&gt;
&lt;li&gt;Moved Prometheus metrics server inside API server under &lt;code&gt;/v1/metrics&lt;/code&gt;, instead of using a seperate port&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GODOXY_PROMETHEUS_ADDR&lt;/code&gt; removed&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GODOXY_PROMETHEUS_ENABLED&lt;/code&gt; added, default &lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Updated Prometheus and Notifications Wiki Page&lt;/li&gt;
&lt;li&gt;Added timeout per notification to prevent stuck&lt;/li&gt;
&lt;li&gt;Notification fields is now properly sorted, e.g (Old vs New).
&lt;br /&gt;
&lt;div class="flex flex-row"&gt;
  &lt;img src="https://github.com/user-attachments/assets/74068af1-fbcd-483c-ab5a-6ab7eb02f02b" alt="{13C9D552-D98E-4859-BE89-DFA972A5652D}" height="250" title="Old (random)"&gt;
  &lt;img src="https://github.com/user-attachments/assets/24e18600-d5a4-497f-bc00-eb73133c8e98" alt="{4F3F677A-AA75-4324-A7C7-4904EF436F17}" height="250" title="New (sorted)"&gt;
  &lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Bug Fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;WebUI no longer create / show empty category group&lt;/li&gt;
&lt;li&gt;WebUI should now show "No result" when no icon found for keyword, instead of "e is null"&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/yusing/go-proxy/compare/0.9...0.9.1&lt;/p&gt;</content>
    <link href="https://github.com/yusing/go-proxy/releases/tag/0.9.1" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/yusing/go-proxy/releases/tag/0.9.2</id>
    <title>New release for GoDoxy: 0.9.2</title>
    <updated>2025-02-03T18:10:39-05:00</updated>
    <author>
      <name>yusing/go-proxy</name>
    </author>
    <content>&lt;h2&gt;What's new in 0.9.2&lt;/h2&gt;
&lt;p&gt;This release is mainly about bug and error message fixes.&lt;/p&gt;
&lt;h2&gt;Fixed&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;bug: servers not being restarted after config reload, introduced since 98443be80c12599b6f70f30d0bcbbf7d54bdfeb4&lt;/li&gt;
&lt;li&gt;webui: saving file successfully in config editor will now show a toast&lt;/li&gt;
&lt;li&gt;example: simplified and adjusted example config and docker compose&lt;/li&gt;
&lt;li&gt;formatting: fix incorrect bullet dot "• " being shown on single line error&lt;/li&gt;
&lt;li&gt;formatting: make the error message much clear when config reload failed&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/yusing/go-proxy/releases/tag/0.9.2" rel="alternate"/>
  </entry>
</feed>
