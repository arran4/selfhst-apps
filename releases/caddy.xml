<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://selfh.st/apps</id>
  <title>Caddy Releases</title>
  <updated>2024-11-25T11:30:14.787253-05:00</updated>
  <author>
    <name>selfh.st</name>
    <email>contact@selfh.st</email>
  </author>
  <link href="https://selfh.st/apps" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <subtitle>Self-hosted software releases generated by selfh.st</subtitle>
  <entry>
    <id>https://github.com/caddyserver/caddy/releases/tag/v2.7.6</id>
    <title>New release for Caddy: v2.7.6</title>
    <updated>2023-12-07T20:03:36-05:00</updated>
    <author>
      <name>caddyserver/caddy</name>
    </author>
    <content>&lt;p&gt;In this version we've made several fixes and enhancements with help from several contributors. Most changes are small, but some notable ones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;templates&lt;/code&gt; middleware is now officially extensible (experimentally). This means modules can add custom functions/actions for templates to execute.&lt;/li&gt;
&lt;li&gt;TLS storage cleaning is now synchronized across the cluster and remembered across restarts. This should greatly lower costs for expensive storage backends like DynamoDB.&lt;/li&gt;
&lt;li&gt;Placeholders are now evaluated in config for certificate loaders.&lt;/li&gt;
&lt;li&gt;Numerous bug fixes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thank you to everyone who contributed!&lt;/p&gt;
&lt;h2&gt;Changelog&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;65c489a0  Upgrade acmeserver to github.com/go-chi/chi/v5 (#5913)&lt;/li&gt;
&lt;li&gt;ae5e2d96 caddyfile: Fix variadic placeholder false positive when token contains &lt;code&gt;:&lt;/code&gt; (#5883)&lt;/li&gt;
&lt;li&gt;db55da59 caddyhttp: Adjust &lt;code&gt;scheme&lt;/code&gt; placeholder docs (#5910)&lt;/li&gt;
&lt;li&gt;df5edf6b caddytls: Context to DecisionFunc (#5923)&lt;/li&gt;
&lt;li&gt;6d9a8337 caddytls: Sync distributed storage cleaning (#5940)&lt;/li&gt;
&lt;li&gt;11a082c0 cmd: Add newline character to version string in CLI output (#5895)&lt;/li&gt;
&lt;li&gt;979c413f cmd: upgrade: resolve symlink of the executable (#5891)&lt;/li&gt;
&lt;li&gt;64820706 core: Apply SO_REUSEPORT to UDP sockets (#5725)&lt;/li&gt;
&lt;li&gt;15adb893 core: quic listener will manage the underlying socket by itself (#5749)&lt;/li&gt;
&lt;li&gt;801ec756 fileserver: Add .m4v for browse template icon&lt;/li&gt;
&lt;li&gt;b809ed71 go.mod: CVE-2023-45142 Update opentelemetry (#5908)&lt;/li&gt;
&lt;li&gt;b4c7313c go.mod: Upgrade quic-go to v0.39.1&lt;/li&gt;
&lt;li&gt;36fce3fa go.mod: update quic-go version to v0.40.0 (#5922)&lt;/li&gt;
&lt;li&gt;ec2de22a httpcaddyfile: Fix TLS automation policy merging with get_certificate (#5896)&lt;/li&gt;
&lt;li&gt;f0ea489d httpcaddyfile: Remove port from logger names (#5881)&lt;/li&gt;
&lt;li&gt;87f63b12 httpredirectlistener: Only set read limit for when request is HTTP (#5917)&lt;/li&gt;
&lt;li&gt;16834d64 templates: Clarify &lt;code&gt;include&lt;/code&gt; args docs, add &lt;code&gt;.ClientIP&lt;/code&gt; (#5898)&lt;/li&gt;
&lt;li&gt;0259853a templates: Delete headers on &lt;code&gt;httpError&lt;/code&gt; to reset to clean slate (#5905)&lt;/li&gt;
&lt;li&gt;2f7ceb57 templates: Offically make templates extensible (#5939)&lt;/li&gt;
&lt;li&gt;908e9569 tls: accept placeholders in string values of certificate loaders (#5963)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/caddyserver/caddy/compare/v2.7.5...v2.7.6&lt;/p&gt;</content>
    <link href="https://github.com/caddyserver/caddy/releases/tag/v2.7.6" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/caddyserver/caddy/releases/tag/v2.8.0</id>
    <title>New release for Caddy: v2.8.0</title>
    <updated>2024-05-29T16:36:47-04:00</updated>
    <author>
      <name>caddyserver/caddy</name>
    </author>
    <content>&lt;p&gt;Caddy 2.8 is here! With hundreds of improvements, Caddy is more scalable and capable than ever before. Featuring ACME Renewal Information (ARI) support, HTTP/3 to proxy backends, and so much more than we can list in a sentence, we are pleased to bring you one of the biggest Caddy updates yet. Documentation on our website will be updated in the coming days.&lt;/p&gt;
&lt;p&gt;We've implemented a &lt;em&gt;ton&lt;/em&gt; of improvements, fixes, and awesome new features based on your feedback. While some of them aren't particularly visible changes, they allow Caddy to scale better and be more reliable in demanding deployments. Many of the changes are quality-of-life improvements we hope you'll appreciate. Then there's improvements to &lt;a href="https://github.com/mholt/acmez"&gt;ACMEz&lt;/a&gt;, &lt;a href="https://github.com/caddyserver/certmagic"&gt;CertMagic&lt;/a&gt;, and other dependencies which make Caddy better that may not show up in this list.&lt;/p&gt;
&lt;p&gt;There was a lot of code that had been documented as &lt;em&gt;deprecated&lt;/em&gt; in place for a long time, so this version introduces a few more breaking changes than usual; please review the notes below.&lt;/p&gt;
&lt;p&gt;Thank you to our sponsors and everyone in the community who contributed -- over 40 of you made your first contribution for this release. We couldn't have done it without your help. In particular, we'd like to recognize sponsors &lt;strong&gt;Stripe&lt;/strong&gt;, &lt;strong&gt;Framer&lt;/strong&gt;, and &lt;strong&gt;ZeroSSL&lt;/strong&gt; for their positive influence which have greatly enhanced the project. Caddy 2.8 is already being used in our sponsors' large-scale, multi-region production deployments.&lt;/p&gt;
&lt;p&gt;Want to join those ranks? &lt;a href="https://caddyserver.com/sponsor"&gt;Sponsor the Caddy project&lt;/a&gt; and benefit from development priority, dedicated private support, and much more.&lt;/p&gt;
&lt;p&gt;As with any server upgrades, please be sure to test and validate your configurations in a staging or test environment before deploying to production. Thank you and have a great day!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;:warning: Breaking changes:&lt;/strong&gt;
- ZeroSSL (#6229) (this is &lt;em&gt;one&lt;/em&gt; overall change, but requires some explanation):
    - Up to now, Caddy used both Let's Encrypt and ZeroSSL by default to get certificates without any configuration. In 2.8, this is changing slightly. Due to upcoming changes to ZeroSSL accounting policies, ZeroSSL now requires your email address to be able to access their free ACME endpoint.
    - As such, Caddy will only implicitly add the ZeroSSL issuer to your config if you provide an email address in your Caddyfile using the &lt;a href="https://caddyserver.com/docs/caddyfile/options#email"&gt;&lt;code&gt;email&lt;/code&gt; global option&lt;/a&gt;. (We have already recommended this for years.) If you already do this, you don't have to make any changes and you'll still get Let's Encrypt and ZeroSSL automatically as defaults.
    - If you use JSON to configure certificate automation policies, you will need to ensure you use the &lt;a href="https://caddyserver.com/docs/json/apps/tls/automation/policies/issuers/acme/#email"&gt;&lt;code&gt;acme&lt;/code&gt; issuer with your &lt;code&gt;email&lt;/code&gt; filled out&lt;/a&gt;, and the &lt;a href="https://caddyserver.com/docs/json/apps/tls/automation/policies/issuers/acme/#ca"&gt;&lt;code&gt;ca&lt;/code&gt; field&lt;/a&gt; set to &lt;a href="https://zerossl.com/documentation/acme/"&gt;ZeroSSL's ACME server URL&lt;/a&gt;. If you want redundancy with Let's Encrypt, be sure to specify another &lt;code&gt;acme&lt;/code&gt; issuer as well (defaults OK, but we recommend setting an email there too).
    - The &lt;a href="https://caddyserver.com/docs/modules/tls.issuance.zerossl"&gt;&lt;code&gt;zerossl&lt;/code&gt; issuer&lt;/a&gt; module is no longer ACME-capable and is now exclusively for the &lt;a href="https://zerossl.com/developer/"&gt;ZeroSSL API&lt;/a&gt;. An API key from your ZeroSSL account is required. (The &lt;a href="https://zerossl.com/features/acme/"&gt;ZeroSSL ACME server&lt;/a&gt; can still be used with the &lt;a href="https://caddyserver.com/docs/modules/tls.issuance.acme"&gt;&lt;code&gt;acme&lt;/code&gt; module&lt;/a&gt; pointed to ZeroSSL's ACME server. You can provide your account email and/or EAB as well.) &lt;strong&gt;If you were using the ZeroSSL issuer with an API key, it will now start using ZeroSSL's API,&lt;/strong&gt; which was probably the expected behavior anyways. The API has several advantages over the ACME endpoint, but may require payment:
        - Faster response times
        - IP certificates
        - Management tools in your ZeroSSL account dashboard
        - Technical support
    - To clarify, Let's Encrypt is still a default issuer even if you don't provide an email address (but we have always strongly recommended to do so).
    - You can still use ZeroSSL's ACME endpoint with your own External Account Binding (EAB) credentials.
    - See notes in #6229 for some examples and further explanations.
- Removed support for &lt;a href="https://github.com/caddy-dns/lego-deprecated"&gt;the &lt;code&gt;lego_deprecated&lt;/code&gt; DNS provider module&lt;/a&gt;. It has been deprecated for 4 years. Use &lt;a href="https://github.com/caddy-dns"&gt;&lt;code&gt;caddy-dns&lt;/code&gt; modules&lt;/a&gt; instead; there are over 50 to choose from already. They are more flexible, compile much leaner, and are easier to implement and support. If yours is not supported it can be easily implemented. &lt;a href="https://caddyserver.com/sponsor"&gt;Sponsors at or above the Business tier&lt;/a&gt; can request to have their provider implemented for free.
- On-demand TLS: The &lt;code&gt;ask&lt;/code&gt; option in the JSON has been deprecated in favor of a permission module (Caddyfile unchanged) (#6055), and Caddyfile support for &lt;code&gt;permission&lt;/code&gt; modules is added (6a02999)
- Admin API: &lt;code&gt;Etag&lt;/code&gt; (used for concurrency control) is now a header, not a trailer. This is less efficient, but still virtually no clients properly implement trailer support.
- For consistency, the &lt;code&gt;basicauth&lt;/code&gt; Caddyfile directive has been renamed to &lt;code&gt;basic_auth&lt;/code&gt; (#6092), and &lt;code&gt;skip_log&lt;/code&gt; has been renamed to &lt;code&gt;log_skip&lt;/code&gt;. The old names will continue to work for now, with a deprecation warning in the logs. (#6066).
- The &lt;code&gt;basic_auth&lt;/code&gt; handler no longer supports &lt;code&gt;scrypt&lt;/code&gt; (deprecated for nearly two years) (#6091)
- The &lt;code&gt;forwarded&lt;/code&gt; option has been deprecated for a long time and has now been removed from the &lt;code&gt;remote_ip&lt;/code&gt; matcher. Use the &lt;code&gt;client_ip&lt;/code&gt; matcher instead. (#6085)
- Reverse proxy: The &lt;code&gt;buffer_requests&lt;/code&gt;, &lt;code&gt;buffer_responses&lt;/code&gt;, and &lt;code&gt;max_buffer_size&lt;/code&gt; settings have been removed after being deprecated for 14 months. Use &lt;code&gt;request_buffers&lt;/code&gt; and &lt;code&gt;response_buffers&lt;/code&gt; instead if you need buffering.
- Go API: If you called &lt;code&gt;caddy.Context.AppIfConfigured()&lt;/code&gt;, it now returns an error, as part of a bug fix. (#6292)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Notable changes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;acme_server: Configurable allow/deny policies (#5796)&lt;/li&gt;
&lt;li&gt;acme_server: Specify allowed challenge types (#5794)&lt;/li&gt;
&lt;li&gt;caddyfile: Plugin authors can now specify a default ordering for directives, making manual ordering by users less necessary (#5865)&lt;/li&gt;
&lt;li&gt;cmd: The &lt;code&gt;--adapter&lt;/code&gt; flag is not needed for config files ending with &lt;code&gt;.caddyfile&lt;/code&gt; (#5919)&lt;/li&gt;
&lt;li&gt;encode: More media types are now compressed by default (#6081)&lt;/li&gt;
&lt;li&gt;encode: Modify ETag when encoding to comply with RFC 9110 section 8.8.3 (#5849)&lt;/li&gt;
&lt;li&gt;encode: Configurable compression level for &lt;code&gt;zstd&lt;/code&gt; (#6140)&lt;/li&gt;
&lt;li&gt;handle_errors: Handling can now be filtered by response status code more easily (#5965)&lt;/li&gt;
&lt;li&gt;http: New &lt;code&gt;fs&lt;/code&gt; directive can declare a file system plugin to use (#5057)&lt;/li&gt;
&lt;li&gt;http: Sensitive headers in the logs are now replaced with &lt;code&gt;["REDACTED"]&lt;/code&gt; instead of empty array. (#5669)&lt;/li&gt;
&lt;li&gt;http: Several improvements to size logging, websockets, flushing, 1xx statuses, and QUIC. (#6173, #6175, #6202, #6150, #6164, #6168)&lt;/li&gt;
&lt;li&gt;http: Can now write access logs for a hostname to more than one logger (#6088)&lt;/li&gt;
&lt;li&gt;http: The &lt;code&gt;log_append&lt;/code&gt; handler can add fields to the access logs (#6066)&lt;/li&gt;
&lt;li&gt;http: Add &lt;code&gt;uuid&lt;/code&gt; field to access logs when the &lt;code&gt;{http.request.uuid}&lt;/code&gt; placeholder is used (#5859)&lt;/li&gt;
&lt;li&gt;http: Changed PROXY protocol libraries add TLV support (#5915)&lt;/li&gt;
&lt;li&gt;http: A new tracing mode writes each individual middleware handler to logs (#6313)&lt;/li&gt;
&lt;li&gt;http: Access logs use a different message ("unhandled") when an HTTP request is a no-op (#5182)&lt;/li&gt;
&lt;li&gt;file_server: The browse feature can now return a plaintext response (useful for terminals) (#6093)&lt;/li&gt;
&lt;li&gt;file_server: File listings can dereference symlinks if enabled (#5973)&lt;/li&gt;
&lt;li&gt;file_server: Directory listings now include total file size (#6003)&lt;/li&gt;
&lt;li&gt;file_server: Can use precomputed ETags from sidecar files (#6222)&lt;/li&gt;
&lt;li&gt;replacer: A new &lt;code&gt;{file.*}&lt;/code&gt; global placeholder is available, where &lt;code&gt;*&lt;/code&gt; is a path to a file on disk which contains a value (generally used for secrets) (#5463)&lt;/li&gt;
&lt;li&gt;reverse_proxy: HTTP/3 supported to backends (experimental) (#6312)&lt;/li&gt;
&lt;li&gt;reverse_proxy: Active health checks can now be configured with consecutive passes/fails to change status (#6154)&lt;/li&gt;
&lt;li&gt;reverse_proxy: A forward proxy can now be specified in config other than a single env var (#6114)&lt;/li&gt;
&lt;li&gt;reverse_proxy: Configurable trusted root CAs is now modular (#6065)&lt;/li&gt;
&lt;li&gt;reverse_proxy: SRV upstreams now support failovers/grace period with cache (#5832)&lt;/li&gt;
&lt;li&gt;reverse_proxy: TLS curves can now be configured (potential preparation for post-quantum) (#5851)&lt;/li&gt;
&lt;li&gt;root, rewrite: A &lt;code&gt;*&lt;/code&gt; matcher token is no longer required in the Caddyfile (#5844)&lt;/li&gt;
&lt;li&gt;tls: Client authentication validation methods are now modular/pluggable (#6050)&lt;/li&gt;
&lt;li&gt;tls: Trusted CA providers are now modular (#5784)&lt;/li&gt;
&lt;li&gt;tls: New &lt;code&gt;local_ip&lt;/code&gt; connection matcher (#6074)&lt;/li&gt;
&lt;li&gt;tls: Improvements and fixes when certificate managers are configured (#6229)&lt;/li&gt;
&lt;li&gt;tls: Refactor the On-Demand TLS &lt;code&gt;ask&lt;/code&gt; endpoint into a &lt;code&gt;permission&lt;/code&gt; module, making it pluggable (#6055)&lt;/li&gt;
&lt;li&gt;tls: Storage cleaning is now synced across instances that share the storage (#5940)&lt;/li&gt;
&lt;li&gt;tls: Supports ACME Renewal Information (ARI) draft spec, together with cert lifetime and OCSP/revocation status, to trigger certificate renewals&lt;/li&gt;
&lt;li&gt;uri: Can now perform structured query rewrites with &lt;code&gt;uri query&lt;/code&gt; (#6120, #6165)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Changelog&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/caddyserver/caddy/compare/v2.7.6...v2.8.0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ac0ad4da  Upgrade acmeserver to github.com/go-chi/chi/v5 (#5913)&lt;/li&gt;
&lt;li&gt;931656bd acmeserver: add policy field to define allow/deny rules (#5796)&lt;/li&gt;
&lt;li&gt;e1aa862e acmeserver: support specifying the allowed challenge types (#5794)&lt;/li&gt;
&lt;li&gt;e6f46c8d acmeserver: Add &lt;code&gt;sign_with_root&lt;/code&gt; for Caddyfile (#6345)&lt;/li&gt;
&lt;li&gt;4a0492f3 admin: Make &lt;code&gt;Etag&lt;/code&gt; a header, not a trailer (#6208)&lt;/li&gt;
&lt;li&gt;12174496 admin: Use xxhash for etag (#6207)&lt;/li&gt;
&lt;li&gt;7e2510ef build(deps): bump golangci/golangci-lint-action from 4 to 5 (#6289)&lt;/li&gt;
&lt;li&gt;4f3f6e35 build(deps): bump actions/setup-go from 4 to 5 (#6012)&lt;/li&gt;
&lt;li&gt;8a50f191 build(deps): bump actions/upload-artifact from 3 to 4 (#6013)&lt;/li&gt;
&lt;li&gt;1bf72db6 build(deps): bump golang.org/x/crypto from 0.16.0 to 0.17.0 (#5994)&lt;/li&gt;
&lt;li&gt;223f3143 build(deps): bump peter-evans/repository-dispatch from 2 to 3 (#6080)&lt;/li&gt;
&lt;li&gt;30d63648 caddyauth: Drop support for &lt;code&gt;scrypt&lt;/code&gt; (#6091)&lt;/li&gt;
&lt;li&gt;f9e11158 caddyauth: Rename &lt;code&gt;basicauth&lt;/code&gt; to &lt;code&gt;basic_auth&lt;/code&gt; (#6092)&lt;/li&gt;
&lt;li&gt;f4840cfe caddyconfig: Use empty struct instead of bool in map (close #6224) (#6227)&lt;/li&gt;
&lt;li&gt;f6d2c293 caddyfile: Reject global request matchers earlier (#6339)&lt;/li&gt;
&lt;li&gt;c0273f1f caddyfile: Add heredoc support to &lt;code&gt;fmt&lt;/code&gt; command (#6056)&lt;/li&gt;
&lt;li&gt;d9aded01 caddyfile: Allow heredoc blank lines (#6051)&lt;/li&gt;
&lt;li&gt;8bbf8ec6 caddyfile: Assert having a space after heredoc marker to simply check (#6117)&lt;/li&gt;
&lt;li&gt;c369df5c caddyfile: Correctly close the heredoc when the closing marker appears immediately (#6062)&lt;/li&gt;
&lt;li&gt;1f60328e caddyfile: Fix variadic placeholder false positive when token contains &lt;code&gt;:&lt;/code&gt; (#5883)&lt;/li&gt;
&lt;li&gt;750d0b83 caddyfile: Normalize &amp;amp; flatten all unmarshalers (#6037)&lt;/li&gt;
&lt;li&gt;9cd472c0 caddyfile: Populate regexp matcher names by default (#6145)&lt;/li&gt;
&lt;li&gt;b893c8c5 caddyfile: Reject directives in the place of site addresses (#6104)&lt;/li&gt;
&lt;li&gt;e7a534d0 caddyfile: Reject long heredoc markers (#6098)&lt;/li&gt;
&lt;li&gt;7c48b5fd caddyfile: Switch to slices.Equal for better performance (#6061)&lt;/li&gt;
&lt;li&gt;63d597c0 caddyhttp: Accept XFF header values with ports, when parsing client IP (#6183)&lt;/li&gt;
&lt;li&gt;3d7d60f7 caddyhttp: Add &lt;code&gt;uuid&lt;/code&gt; to access logs when used (#5859)&lt;/li&gt;
&lt;li&gt;45132c5b caddyhttp: Add plaintext response to &lt;code&gt;file_server browse&lt;/code&gt; (#6093)&lt;/li&gt;
&lt;li&gt;6d97d8d8 caddyhttp: Address some Go 1.20 features (#6252)&lt;/li&gt;
&lt;li&gt;4c10a054 caddyhttp: Adjust &lt;code&gt;scheme&lt;/code&gt; placeholder docs (#5910)&lt;/li&gt;
&lt;li&gt;97a56d86 caddyhttp: Allow &lt;code&gt;header&lt;/code&gt; replacement with empty string (#6163)&lt;/li&gt;
&lt;li&gt;83ef61de caddyhttp: Apply auto HTTPS redir to all interfaces (fix #6226)&lt;/li&gt;
&lt;li&gt;2fc620d3 caddyhttp: Fix linter warning about deprecation&lt;/li&gt;
&lt;li&gt;f5344f8c caddyhttp: Fix panic when request missing ClientIPVarKey (#6040)&lt;/li&gt;
&lt;li&gt;2c48dda1 caddyhttp: Only attempt to enable full duplex for HTTP/1.x (#6102)&lt;/li&gt;
&lt;li&gt;12778880 caddyhttp: Register post-shutdown callbacks (#5948)&lt;/li&gt;
&lt;li&gt;7b48ce0e caddyhttp: Replace sensitive headers with REDACTED (close #5669)&lt;/li&gt;
&lt;li&gt;cc0c0cf0 caddyhttp: Security enhancements for client IP parsing (#5805)&lt;/li&gt;
&lt;li&gt;70953e87 caddyhttp: Support multiple logger names per host (#6088)&lt;/li&gt;
&lt;li&gt;bde46211 caddyhttp: Test cases for &lt;code&gt;%2F&lt;/code&gt; and &lt;code&gt;%252F&lt;/code&gt; (#6084)&lt;/li&gt;
&lt;li&gt;c8559c44 caddyhttp: Use sync.Pool to reduce lengthReader allocations (#5848)&lt;/li&gt;
&lt;li&gt;ddb1d2c2 caddyhttp: add http.request.local{,.host,.port} placeholder (#6182)&lt;/li&gt;
&lt;li&gt;924010cd caddyhttp: close quic connections when server closes (#6202)&lt;/li&gt;
&lt;li&gt;e0daa39c caddyhttp: record num. bytes read when response writer is hijacked (#6173)&lt;/li&gt;
&lt;li&gt;654a3bb0 caddyhttp: remove duplicate strings.Count in path matcher (fixes #6233) (#6234)&lt;/li&gt;
&lt;li&gt;b568a10d caddyhttp: support unix sockets in &lt;code&gt;caddy respond&lt;/code&gt; command (#6010)&lt;/li&gt;
&lt;li&gt;c93e3045 caddyhttp: suppress flushing if the response is being buffered (#6150)&lt;/li&gt;
&lt;li&gt;52822a41 caddyhttp: upgrade to cel v0.20.0 (#6161)&lt;/li&gt;
&lt;li&gt;224316ea caddyhttp: Move log WARN to INFO, reduce confusion (#6185)&lt;/li&gt;
&lt;li&gt;6dce4934 caddyhttp: Alter log message when request is unhandled (close #5182)&lt;/li&gt;
&lt;li&gt;4af38e5a caddyhttp: Log 4xx as INFO; 5xx as ERROR (close #6106)&lt;/li&gt;
&lt;li&gt;fb63e2e4 caddyhttp: New experimental handler for intercepting responses (#6232)&lt;/li&gt;
&lt;li&gt;9ba99914 caddyhttp: Trace individual middleware handlers (#6313)&lt;/li&gt;
&lt;li&gt;c97292b2 caddypki: Allow use of root CA without a key. Fixes #6290 (#6298)&lt;/li&gt;
&lt;li&gt;4512be49 caddytest: Rename adapt tests to &lt;code&gt;*.caddyfiletest&lt;/code&gt; extension (#6119)&lt;/li&gt;
&lt;li&gt;4c90f142 caddytest: normalize the JSON config (#6316)&lt;/li&gt;
&lt;li&gt;8d7ac184 caddytls: Ability to drop connections (close #6294)&lt;/li&gt;
&lt;li&gt;6a029990 caddytls: Add Caddyfile support for on-demand permission module (close #6260)&lt;/li&gt;
&lt;li&gt;b24ae63e caddytls: Context to DecisionFunc (#5923)&lt;/li&gt;
&lt;li&gt;d129ae6a caddytls: Evict internal certs from cache based on issuer (#6266)&lt;/li&gt;
&lt;li&gt;57c5b921 caddytls: Make on-demand 'ask' permission modular (#6055)&lt;/li&gt;
&lt;li&gt;76c4cf5a caddytls: Option to configure certificate lifetime (#6253)&lt;/li&gt;
&lt;li&gt;3609a4af caddytls: Remove shim code supporting deprecated lego-dns (#6231)&lt;/li&gt;
&lt;li&gt;dc9dd2e4 caddytls: Still provision permission module if ask is specified&lt;/li&gt;
&lt;li&gt;4a09cf0d caddytls: Sync distributed storage cleaning (#5940)&lt;/li&gt;
&lt;li&gt;81413cae caddytls: Upgrade ACMEz to v2; support ZeroSSL API; various fixes (#6229)&lt;/li&gt;
&lt;li&gt;3ae07a73 caddytls: clientauth: leaf verifier: make trusted leaf certs source pluggable (#6050)&lt;/li&gt;
&lt;li&gt;03f703a0 caddytls: verifier: caddyfile: re-add Caddyfile support (#6127)&lt;/li&gt;
&lt;li&gt;db3e19b7 caddytls: fix permission requirement with AutomationPolicy (#6328)&lt;/li&gt;
&lt;li&gt;1fc151fa caddytls: remove ClientHelloSNICtxKey (#6326)&lt;/li&gt;
&lt;li&gt;e66040a6 caddytls: set server name in context (#6324)&lt;/li&gt;
&lt;li&gt;b359ca56 ci/cd: use the build tag &lt;code&gt;nobadger&lt;/code&gt; to exclude badgerdb (#6031)&lt;/li&gt;
&lt;li&gt;24b0ecc3 cmd: Add newline character to version string in CLI output (#5895)&lt;/li&gt;
&lt;li&gt;e473ae68 cmd: Adjust config load logs/errors (#6032)&lt;/li&gt;
&lt;li&gt;185ed6fe cmd: Assume Caddyfile based on filename prefix and suffix (#5919)&lt;/li&gt;
&lt;li&gt;e1f4b83f cmd: Fix panic related to config filename (fix #5919)&lt;/li&gt;
&lt;li&gt;8f87c5d9 cmd: Only validate config is proper JSON if config slice has data (#6250)&lt;/li&gt;
&lt;li&gt;56c6b3f6 cmd: Preserve LastModified date when exporting storage (#5968)&lt;/li&gt;
&lt;li&gt;de4959fe cmd: fix the output of the &lt;code&gt;Usage&lt;/code&gt; section (#6138)&lt;/li&gt;
&lt;li&gt;54823f52 cmd: reverseproxy: log: use caddy logger (#6042)&lt;/li&gt;
&lt;li&gt;d70608b6 cmd: upgrade: resolve symlink of the executable (#5891)&lt;/li&gt;
&lt;li&gt;d54dcf15 cmd: use automaxprocs for better perf in containers (#5711)&lt;/li&gt;
&lt;li&gt;e1b9a9d7 core: Add &lt;code&gt;ctx.Slogger()&lt;/code&gt; which returns an &lt;code&gt;slog&lt;/code&gt; logger (#5945)&lt;/li&gt;
&lt;li&gt;cbbd1df9 core: Always make AppDataDir for InstanceID (#5976)&lt;/li&gt;
&lt;li&gt;174c19a9 core: Apply SO_REUSEPORT to UDP sockets (#5725)&lt;/li&gt;
&lt;li&gt;46c5db92 core: OnExit hooks (#6128)&lt;/li&gt;
&lt;li&gt;a7479302 core: Support NO_COLOR env var to disable log coloring (#6078)&lt;/li&gt;
&lt;li&gt;7c82e265 core: quic listener will manage the underlying socket by itself (#5749)&lt;/li&gt;
&lt;li&gt;a6a45ff6 core: AppIfConfigured returns error; consider not-yet-provisioned modules (#6292)&lt;/li&gt;
&lt;li&gt;2ce5c652 core: Fix bug in AppIfConfigured (fix #6336)&lt;/li&gt;
&lt;li&gt;03e0a010 encode: Configurable compression level for zstd (#6140)&lt;/li&gt;
&lt;li&gt;3067074d encode: Improve Etag handling (fix #5849)&lt;/li&gt;
&lt;li&gt;9ab09433 encode: Slight fix for the previous commit&lt;/li&gt;
&lt;li&gt;e698ec51 encode: write status immediately when status code is informational (#6164)&lt;/li&gt;
&lt;li&gt;ba581146 events: Add debug log&lt;/li&gt;
&lt;li&gt;7e52db82 fileserver: Add .m4v for browse template icon&lt;/li&gt;
&lt;li&gt;8f9ffc58 fileserver: Add total file size to directory listing (#6003)&lt;/li&gt;
&lt;li&gt;feb07a7b fileserver: Browse can show symlink target if enabled (#5973)&lt;/li&gt;
&lt;li&gt;b16aba5c fileserver: Enable compression for command by default (#5855)&lt;/li&gt;
&lt;li&gt;5d8b45c9 fileserver: Escape # and ? in img src (fix #6237)&lt;/li&gt;
&lt;li&gt;f3e849e4 fileserver: Implement caddyfile.Unmarshaler interface (#5850)&lt;/li&gt;
&lt;li&gt;d00824f4 fileserver: Improve Vary handling (#5849)&lt;/li&gt;
&lt;li&gt;362f33da fileserver: New --precompressed flag (#5880)&lt;/li&gt;
&lt;li&gt;5a4374be fileserver: Preserve query during canonicalization redirect (#6109)&lt;/li&gt;
&lt;li&gt;cabb5d71 fileserver: Set "Vary: Accept-Encoding" header (see #5849)&lt;/li&gt;
&lt;li&gt;567d96c6 fileserver: read etags from precomputed files (#6222)&lt;/li&gt;
&lt;li&gt;c839a98f filesystem: Globally declared filesystems, &lt;code&gt;fs&lt;/code&gt; directive (#5833)&lt;/li&gt;
&lt;li&gt;60abd72c fix: add back text/*&lt;/li&gt;
&lt;li&gt;b8f729b8 fix: add more media types to the compressed by default list&lt;/li&gt;
&lt;li&gt;a4a64a6f gitignore: Add rule for caddyfile.go (#6225)&lt;/li&gt;
&lt;li&gt;9fc55a97 go.mod: CVE-2023-45142 Update opentelemetry (#5908)&lt;/li&gt;
&lt;li&gt;fe2a02bf go.mod: Upgrade quic-go to v0.39.1&lt;/li&gt;
&lt;li&gt;b49ec051 go.mod: Updated quic-go to v0.40.1 (#5983)&lt;/li&gt;
&lt;li&gt;ee358550 go.mod: update quic-go version to v0.40.0 (#5922)&lt;/li&gt;
&lt;li&gt;a46ff50a go.mod: Upgrade to quic-go v0.43.0&lt;/li&gt;
&lt;li&gt;b5227106 go.mod: Upgrade to quic-go v0.43.1&lt;/li&gt;
&lt;li&gt;dd203ad4 go.mod: CertMagic v0.21.0&lt;/li&gt;
&lt;li&gt;d79c0f0d go.mod: Upgrade dependencies&lt;/li&gt;
&lt;li&gt;abdf1ae1 go.mod: go 1.22.3&lt;/li&gt;
&lt;li&gt;258d9061 httpcaddyfile: Add &lt;code&gt;RegisterDirectiveOrder&lt;/code&gt; function for plugin authors (#5865)&lt;/li&gt;
&lt;li&gt;4181c79a httpcaddyfile: Add optional status code argument to &lt;code&gt;handle_errors&lt;/code&gt; directive (#5965)&lt;/li&gt;
&lt;li&gt;2a78c9c5 httpcaddyfile: Allow nameless regexp placeholder shorthand (#6113)&lt;/li&gt;
&lt;li&gt;7984e6f6 httpcaddyfile: Fix TLS automation policy merging with get_certificate (#5896)&lt;/li&gt;
&lt;li&gt;f976c84d httpcaddyfile: Fix cert file decoding to load multiple PEM in one file (#5997)&lt;/li&gt;
&lt;li&gt;c2d889f8 httpcaddyfile: Fix redir &lt;to&gt; html (#6001)&lt;/li&gt;
&lt;li&gt;c27425ef httpcaddyfile: Keep deprecated &lt;code&gt;skip_log&lt;/code&gt; in directive order (#6153)&lt;/li&gt;
&lt;li&gt;ac1f20b9 httpcaddyfile: Remove port from logger names (#5881)&lt;/li&gt;
&lt;li&gt;5e2f1b5c httpcaddyfile: Rewrite &lt;code&gt;root&lt;/code&gt; and &lt;code&gt;rewrite&lt;/code&gt; parsing to allow omitting matcher (#5844)&lt;/li&gt;
&lt;li&gt;3efda6fb httpcaddyfile: Skip automate loader if disable_certs is specified (fix #6148)&lt;/li&gt;
&lt;li&gt;da7d8cb2 httpcaddyfile: Sort skip_hosts for deterministic JSON (#5990)&lt;/li&gt;
&lt;li&gt;cb86319b httpcaddyfile: Support client auth verifiers (#6022)&lt;/li&gt;
&lt;li&gt;feeb6af4 httpcaddyfile: Fix expression matcher shortcut in snippets (#6288)&lt;/li&gt;
&lt;li&gt;583c585c httpcaddyfile: Set challenge ports when http_port or https_port are used&lt;/li&gt;
&lt;li&gt;96f638ea httpredirectlistener: Only set read limit for when request is HTTP (#5917)&lt;/li&gt;
&lt;li&gt;3248e4c8 logging: Add &lt;code&gt;zap.Option&lt;/code&gt; support (#5944)&lt;/li&gt;
&lt;li&gt;b9c40e71 logging: Automatic &lt;code&gt;wrap&lt;/code&gt; default for &lt;code&gt;filter&lt;/code&gt; encoder (#5980)&lt;/li&gt;
&lt;li&gt;726a9a8f logging: Fix default access logger (#6251)&lt;/li&gt;
&lt;li&gt;01d5568b logging: Implement &lt;code&gt;append&lt;/code&gt; encoder, allow flatter filters config (#6069)&lt;/li&gt;
&lt;li&gt;0d44e3ec logging: Implement &lt;code&gt;log_append&lt;/code&gt; handler (#6066)&lt;/li&gt;
&lt;li&gt;91ec7544 logging: Inline Caddyfile syntax for &lt;code&gt;ip_mask&lt;/code&gt; filter (#6094)&lt;/li&gt;
&lt;li&gt;0c015470 logging: support &lt;code&gt;ms&lt;/code&gt; duration format and add docs (#6187)&lt;/li&gt;
&lt;li&gt;4356635d logging: Add support for additional logger filters other than hostname (#6082)&lt;/li&gt;
&lt;li&gt;8c2a72ad caddyhttp: Drop &lt;code&gt;forwarded&lt;/code&gt; option from &lt;code&gt;remote_ip&lt;/code&gt; matcher (#6085)&lt;/li&gt;
&lt;li&gt;ed7e3c90 caddyhttp: &lt;code&gt;query&lt;/code&gt; matcher now ANDs multiple keys (#6054)&lt;/li&gt;
&lt;li&gt;387545a8 metrics: Record request metrics on HTTP errors (#5979)&lt;/li&gt;
&lt;li&gt;e0bf179c modules: fix some typo in conments (#6206)&lt;/li&gt;
&lt;li&gt;dc12bd97 proxyprotocol: use github.com/pires/go-proxyproto (#5915)&lt;/li&gt;
&lt;li&gt;dba556fe refactor: move automaxprocs init in caddycmd.Main()&lt;/li&gt;
&lt;li&gt;80acf1bf replacer: Fix escaped closing braces (#5995)&lt;/li&gt;
&lt;li&gt;79797394 replacer: Implement &lt;code&gt;file.*&lt;/code&gt; global replacements (#5463)&lt;/li&gt;
&lt;li&gt;e7336cc3 replacer: use RWMutex to protect static provider (#6184)&lt;/li&gt;
&lt;li&gt;868af6a0 reverseproxy: Add grace_period for SRV upstreams to Caddyfile (#6264)&lt;/li&gt;
&lt;li&gt;613d544a reverseproxy: Accept EOF when buffering&lt;/li&gt;
&lt;li&gt;f658fd05 reverseproxy: Add &lt;code&gt;tls_curves&lt;/code&gt; option to HTTP transport (#5851)&lt;/li&gt;
&lt;li&gt;a9768d2f reverseproxy: Configurable forward proxy URL (#6114)&lt;/li&gt;
&lt;li&gt;0b381eb7 reverseproxy: Implement modular CA provider for TLS transport (#6065)&lt;/li&gt;
&lt;li&gt;d9ff7b18 reverseproxy: Only change Content-Length when full request is buffered (#5830)&lt;/li&gt;
&lt;li&gt;9f97df22 reverseproxy: Remove long-deprecated buffering properties&lt;/li&gt;
&lt;li&gt;d93e027e reverseproxy: Reuse buffered request body even if partially drained&lt;/li&gt;
&lt;li&gt;72ce78d9 reverseproxy: SRV dynamic upstream failover (#5832)&lt;/li&gt;
&lt;li&gt;74949fb0 reverseproxy: Use xxhash instead of fnv32 for LB (#6203)&lt;/li&gt;
&lt;li&gt;b40cacf5 reverseproxy: Wait for both ends of websocket to close (#6175)&lt;/li&gt;
&lt;li&gt;e65b97f5 reverseproxy: configurable active health_passes and health_fails (#6154)&lt;/li&gt;
&lt;li&gt;da6a569e reverseproxy: cookie should be Secure and SameSite=None when TLS (#6115)&lt;/li&gt;
&lt;li&gt;1b9042bc reverseproxy: handle buffered data during hijack (#6274)&lt;/li&gt;
&lt;li&gt;53f70352 reverseproxy: use context.WithoutCancel (#6116)&lt;/li&gt;
&lt;li&gt;d05d715a reverseproxy: HTTP transport: fix PROXY protocol initialization (#6301)&lt;/li&gt;
&lt;li&gt;b2b29dcd reverseproxy: Implement health_follow_redirects (#6302)&lt;/li&gt;
&lt;li&gt;e60148ec reverseproxy: Pointer to struct when loading modules; remove LazyCertPool (#6307)&lt;/li&gt;
&lt;li&gt;5f6758da reverseproxy: Support HTTP/3 transport to backend (#6312)&lt;/li&gt;
&lt;li&gt;69290d23 rewrite: Implement &lt;code&gt;uri query&lt;/code&gt; operations (#6120)&lt;/li&gt;
&lt;li&gt;29f57faa rewrite: &lt;code&gt;uri query&lt;/code&gt; replace operation (#6165)&lt;/li&gt;
&lt;li&gt;c6673ad4 staticresp: Use the evaluated response body for sniffing JSON content-type (#6249)&lt;/li&gt;
&lt;li&gt;0900844c templates: Clarify &lt;code&gt;include&lt;/code&gt; args docs, add &lt;code&gt;.ClientIP&lt;/code&gt; (#5898)&lt;/li&gt;
&lt;li&gt;4e8245df templates: Delete headers on &lt;code&gt;httpError&lt;/code&gt; to reset to clean slate (#5905)&lt;/li&gt;
&lt;li&gt;18f34290 templates: Offically make templates extensible (#5939)&lt;/li&gt;
&lt;li&gt;f98f449f templates: Add &lt;code&gt;pathEscape&lt;/code&gt; template function and use it in file browser (#6278)&lt;/li&gt;
&lt;li&gt;4173e2c7 tls: accept placeholders in string values of certificate loaders (#5963)&lt;/li&gt;
&lt;li&gt;ed41c924 tls: add reuse_private_keys (#6025)&lt;/li&gt;
&lt;li&gt;e965b111 tls: modularize trusted CA providers (#5784)&lt;/li&gt;
&lt;li&gt;0b5720fa tracing: add trace_id var (&lt;code&gt;http.vars.trace_id&lt;/code&gt; placeholder) (#6308)&lt;/li&gt;
&lt;li&gt;5ed86896 vars: Allow overriding &lt;code&gt;http.auth.user.id&lt;/code&gt; in replacer as a special case (#6108)&lt;/li&gt;
&lt;li&gt;d1325842 vars: Make nil values act as empty string instead of &lt;code&gt;"&amp;lt;nil&amp;gt;"&lt;/code&gt; (#6174)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;New Contributors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;@perhapsmaple made their first contribution in https://github.com/caddyserver/caddy/pull/5848&lt;/li&gt;
&lt;li&gt;@ddl-ebrown made their first contribution in https://github.com/caddyserver/caddy/pull/5908&lt;/li&gt;
&lt;li&gt;@dlorenc made their first contribution in https://github.com/caddyserver/caddy/pull/5949&lt;/li&gt;
&lt;li&gt;@ankon made their first contribution in https://github.com/caddyserver/caddy/pull/5923&lt;/li&gt;
&lt;li&gt;@bmarwell made their first contribution in https://github.com/caddyserver/caddy/pull/5971&lt;/li&gt;
&lt;li&gt;@armadi1809 made their first contribution in https://github.com/caddyserver/caddy/pull/5976&lt;/li&gt;
&lt;li&gt;@jum made their first contribution in https://github.com/caddyserver/caddy/pull/5968&lt;/li&gt;
&lt;li&gt;@ddemoss222 made their first contribution in https://github.com/caddyserver/caddy/pull/5880&lt;/li&gt;
&lt;li&gt;@tgeoghegan made their first contribution in https://github.com/caddyserver/caddy/pull/5979&lt;/li&gt;
&lt;li&gt;@steffenbusch made their first contribution in https://github.com/caddyserver/caddy/pull/6003&lt;/li&gt;
&lt;li&gt;@networkException made their first contribution in https://github.com/caddyserver/caddy/pull/6010&lt;/li&gt;
&lt;li&gt;@insom made their first contribution in https://github.com/caddyserver/caddy/pull/6021&lt;/li&gt;
&lt;li&gt;@rithvikvibhu made their first contribution in https://github.com/caddyserver/caddy/pull/6025&lt;/li&gt;
&lt;li&gt;@zachgalvin made their first contribution in https://github.com/caddyserver/caddy/pull/6022&lt;/li&gt;
&lt;li&gt;@subnut made their first contribution in https://github.com/caddyserver/caddy/pull/6001&lt;/li&gt;
&lt;li&gt;@elee1766 made their first contribution in https://github.com/caddyserver/caddy/pull/5833&lt;/li&gt;
&lt;li&gt;@nebez made their first contribution in https://github.com/caddyserver/caddy/pull/5805&lt;/li&gt;
&lt;li&gt;@bbaa-bbaa made their first contribution in https://github.com/caddyserver/caddy/pull/6056&lt;/li&gt;
&lt;li&gt;@AnomalRoil made their first contribution in https://github.com/caddyserver/caddy/pull/5961&lt;/li&gt;
&lt;li&gt;@jcchavezs made their first contribution in https://github.com/caddyserver/caddy/pull/6103&lt;/li&gt;
&lt;li&gt;@ottenhoff made their first contribution in https://github.com/caddyserver/caddy/pull/6115&lt;/li&gt;
&lt;li&gt;@thirdkeyword made their first contribution in https://github.com/caddyserver/caddy/pull/6151&lt;/li&gt;
&lt;li&gt;@jbrown-stripe made their first contribution in https://github.com/caddyserver/caddy/pull/6161&lt;/li&gt;
&lt;li&gt;@ImpostorKeanu made their first contribution in https://github.com/caddyserver/caddy/pull/6114&lt;/li&gt;
&lt;li&gt;@sellskin made their first contribution in https://github.com/caddyserver/caddy/pull/6193&lt;/li&gt;
&lt;li&gt;@jadidbourbaki made their first contribution in https://github.com/caddyserver/caddy/pull/6203&lt;/li&gt;
&lt;li&gt;@reallylowest made their first contribution in https://github.com/caddyserver/caddy/pull/6206&lt;/li&gt;
&lt;li&gt;@kylosus made their first contribution in https://github.com/caddyserver/caddy/pull/6093&lt;/li&gt;
&lt;li&gt;@hassanila made their first contribution in https://github.com/caddyserver/caddy/pull/6223&lt;/li&gt;
&lt;li&gt;@epelc made their first contribution in https://github.com/caddyserver/caddy/pull/6225&lt;/li&gt;
&lt;li&gt;@danish-mehmood made their first contribution in https://github.com/caddyserver/caddy/pull/6227&lt;/li&gt;
&lt;li&gt;@omalk98 made their first contribution in https://github.com/caddyserver/caddy/pull/5919&lt;/li&gt;
&lt;li&gt;@dev-polymer made their first contribution in https://github.com/caddyserver/caddy/pull/6140&lt;/li&gt;
&lt;li&gt;@coderwander made their first contribution in https://github.com/caddyserver/caddy/pull/6243&lt;/li&gt;
&lt;li&gt;@clauverjat made their first contribution in https://github.com/caddyserver/caddy/pull/6253&lt;/li&gt;
&lt;li&gt;@apollo13 made their first contribution in https://github.com/caddyserver/caddy/pull/6298&lt;/li&gt;
&lt;li&gt;@aliasgar55 made their first contribution in https://github.com/caddyserver/caddy/pull/6302&lt;/li&gt;
&lt;li&gt;@szepeviktor made their first contribution in https://github.com/caddyserver/caddy/pull/6311&lt;/li&gt;
&lt;li&gt;@DenebTM made their first contribution in https://github.com/caddyserver/caddy/pull/6278&lt;/li&gt;
&lt;li&gt;@Ranveer777 made their first contribution in https://github.com/caddyserver/caddy/pull/6345&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/caddyserver/caddy/releases/tag/v2.8.0" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/caddyserver/caddy/releases/tag/v2.8.1</id>
    <title>New release for Caddy: v2.8.1</title>
    <updated>2024-05-30T10:31:22-04:00</updated>
    <author>
      <name>caddyserver/caddy</name>
    </author>
    <content>&lt;p&gt;Quick fixes for a few users related to directory permissions and matcher parsing.&lt;/p&gt;
&lt;h2&gt;Changelog&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;40c582ce caddyhttp: Fix merging consecutive &lt;code&gt;client_ip&lt;/code&gt; or &lt;code&gt;remote_ip&lt;/code&gt; matchers (#6350)&lt;/li&gt;
&lt;li&gt;a52917a3 core: MkdirAll appDataDir in InstanceID with 0o700 (#6340)&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/caddyserver/caddy/releases/tag/v2.8.1" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/caddyserver/caddy/releases/tag/v2.8.2</id>
    <title>New release for Caddy: v2.8.2</title>
    <updated>2024-06-02T00:46:25-04:00</updated>
    <author>
      <name>caddyserver/caddy</name>
    </author>
    <content>&lt;p&gt;A few more fixes of reported bugs related to ARI, &lt;code&gt;try_files&lt;/code&gt; with the root path (&lt;code&gt;/&lt;/code&gt;), and Caddyfile adapter detection on the CLI. See 2.8.0 release notes for details on 2.8.&lt;/p&gt;
&lt;h2&gt;Changelog&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;01308b4b I'm so tired of typos&lt;/li&gt;
&lt;li&gt;a63767d3 build(deps): bump golangci/golangci-lint-action from 5 to 6 (#6361)&lt;/li&gt;
&lt;li&gt;f8a2c602 caddyhttp: properly sanitize requests for root path (#6360)&lt;/li&gt;
&lt;li&gt;b7280e69 caddytls: Implement certmagic.RenewalInfoGetter&lt;/li&gt;
&lt;li&gt;15faeacb cmd: fix auto-detetction of .caddyfile extension (#6356)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: https://github.com/caddyserver/caddy/compare/v2.8.1...v2.8.2&lt;/p&gt;</content>
    <link href="https://github.com/caddyserver/caddy/releases/tag/v2.8.2" rel="alternate"/>
  </entry>
  <entry>
    <id>https://github.com/caddyserver/caddy/releases/tag/v2.8.4</id>
    <title>New release for Caddy: v2.8.4</title>
    <updated>2024-06-02T08:24:47-04:00</updated>
    <author>
      <name>caddyserver/caddy</name>
    </author>
    <content>&lt;p&gt;Hotfix for the Caddyfile detection regression in v2.8.2. The v2.8.3 tag was mistakenly made on the wrong commit and is skipped.&lt;/p&gt;
&lt;h2&gt;Changelog&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;7088605c cmd: fix regression in auto-detect of Caddyfile (#6362)&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://github.com/caddyserver/caddy/releases/tag/v2.8.4" rel="alternate"/>
  </entry>
</feed>
